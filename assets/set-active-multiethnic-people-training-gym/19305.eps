%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Set of active multiethnic people training in gym.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 5/2/2019
%%BoundingBox: 0 0 1600 800
%%HiResBoundingBox: 0 0 1600 800
%%CropBox: 0 0 1600 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of active multiethnic people training in gym</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>nefelomant</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of active multiethnic people training in gym. Vector illustration of men and women doing exercises. Can be used for health club, presentation, promo</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>crowd</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>presentation</rdf:li>
               <rdf:li>promo</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>sport</rdf:li>
               <rdf:li>activity</rdf:li>
               <rdf:li>hobby</rdf:li>
               <rdf:li>training</rdf:li>
               <rdf:li>leisure</rdf:li>
               <rdf:li>athlete</rdf:li>
               <rdf:li>exercise</rdf:li>
               <rdf:li>sportswear</rdf:li>
               <rdf:li>muscular</rdf:li>
               <rdf:li>activity</rdf:li>
               <rdf:li>bodybuilding</rdf:li>
               <rdf:li>gym</rdf:li>
               <rdf:li>workout</rdf:li>
               <rdf:li>weight</rdf:li>
               <rdf:li>fit</rdf:li>
               <rdf:li>motivation</rdf:li>
               <rdf:li>exercising</rdf:li>
               <rdf:li>cardio</rdf:li>
               <rdf:li>physical</rdf:li>
               <rdf:li>fitness</rdf:li>
               <rdf:li>active</rdf:li>
               <rdf:li>equipment</rdf:li>
               <rdf:li>jumping</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-02T13:46:12+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-05-02T13:46:13+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-05-02T13:46:13+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;YqsWaFpXhWRTLGAzxggsoavEkdRWhpiml+KGuS8gtRyIqF70GKaQum6paajHLJbMSIJXglVhxKvG&#xA;aEEH78jGQPJszYJYyBLqL+aLyTU7FVO5uIba3kuJmCQwqXkc9AqipOAmmUIGRAHMqdlf295aW91E&#xA;SsdyoeIOOLEEV6H2xErFssmIwkYnnFEYWt2KrZZYoonlldY4o1LSSMQqqqipJJ2AAxVKdM85eUdV&#xA;vPqWl61Y393xMggtbmKZ+KmjGiM3Su+GltOMCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KsZ88eZbjS7NNP0qkvmHUv3Omw7Hizbeq1dgq+/f2rlOXJw7DmXO0eiOUGZ2hDcn9Ct5I8t&#xA;TaDpHo3jRzapO3q6heozu08hH2neT4jToOwGSxw4RvzcfNk4ztyZBljSxP8AMTyjP5i0pYrSR4ro&#xA;ViZon9NjBNRZBWqj3oeu475TmxmXLm7DQ6mMOKM/pkPtHJjf5JRDT4NU0K6lZNW0uT0Lq0Y8gVRj&#xA;wmQnqCDx27AHuMhpxVjqz1+UzjHbbof0PUMyXWOxVjX5j31lY+T7+4vJjFEqrRFNGletVhH+udiR&#xA;0G+VZq4Tbl6GZjlBAs/d5sO/KD8vtU0lYtT1NpOE6fXIoHk5KJrgEV4V+EiOnKorU+2VYcZuy5mq&#xA;1cPDMY/VI7+4fterZlOodirAfzs8v6t5g8lDSrCf6vDPdwHUpK9LVSWbb9r4wlBkZ5eAGTZixeJI&#xA;R73i3lnyAvln84PKraZM7213MfRjJJlHoQMbhmIAHHhv9JHTIabUnJE3zDbq9KMUhXIvqfLXGdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqU+aPMdn5f0iXUbn4uPwQRDYySEHio+6p9sry&#xA;ZBAWXL0WklqMghH4+QYh+WumX+rX9z5y1j47m4LR2CkUVU6MyA9FH2F+nKNPEyPGXb9sZoYoDTY/&#xA;pH1fj7T8HouZbzrsVdiryT8zVn8ped9I88Wan6vcsLXVY1/bAFN/EvENvAoDmLm9EhJ2Gm/eYzjP&#xA;wTj85r6+vfyn1C60C4ol4lufrcblT9WllTmVK7/Ep4sP5ScyfEERxcw4XgymeAbF5n/zi62v2PmH&#xA;VdJnufU0qW0NyIAzMqzpLGgdQw+GqSENTrQV6DH8xHJyWWknhHqIpl/mS7j8+fmfYeWoX9TQ9FLT&#xA;6hxNVeSM/vAadRXjF7VbMWZ458PQOdjHhYjL+KT2DMt1zsVdirHPOnm7RdBshFfMsk92CkVsamqn&#xA;Yu4G4Qf7WY+oyxjHfe3Zdndn5dRK4co9f0e947bea7Cy85aNrCmS5tdM+sCbYBpBcx+nVAeNOHXp&#xA;v098wNPn8O9ub0WfsGeaAJlwyHR9BQTxTwRzwsHilUPG46FWFQfpGbYG93jZRMSQeYX4WLsVYf8A&#xA;mv5y1Hyj5OuNU0y2F1qLSJb2qOCyK8lSXcAqSFVTsO9MBkBzNMowMuQtgf5Ffm35z816/faL5khj&#xA;Pp2rXlvcpEYWHpyRxsjAfCQfVBG39krieRtiYyHMU9swK7FXYq7FXYq7FXyl5z8z/nBpmoxeZpdY&#xA;u4redvVFpbyMLa2JYmOCWCvpsvEgVYGp6knrPBnx5CYjmPta9Tpc2ICZ5H7Pe+nPLWqSav5c0rVZ&#xA;YxFJqFnb3TxCtFaaJZCor4csjIUaZRNgFMcDJ2KuZgoLMaAbknoBirw+D/nJWKTzFNGNIL+XUcol&#xA;yjf6SQDtJwbihr14VBHjlc8gjzbseCU+T2Ia5pB0hdYF3H+jGjEq3VfgKHofn2p1rtkuMVfREMM5&#xA;T4ALl3PGvMPmC689+abLTbasOn+r6Vsh68SfjmcePEVp2H05rsmQ5ZADk9npNLHQ4JTlvOrP6ntt&#xA;naW9naQ2luvCC3RY4kHZVFBmyAoU8VkyGcjI8yrYWDsVdiqWeZPL9h5g0W50m+WsNwtA4HxI43R1&#xA;91O+RnESFFnjyGErDwvQ/MutaFpPmXyRqdqt/aWkF0inmUMR3U8CVeqknmopmryanwhwEXZp3Q0w&#xA;ykZImurCfLd1r2iPc+YdLuzG0cL2EqFei3O/qBgRupRabdaHGOrEDwVvLr7k5dJ4khMn0x6PoL8o&#xA;fJkXl/y3HeTDlqmqolxcueqow5Rxb/yhqt7/AEZn4MfCPMus1ebjlXQM7y9xHYq7FXz7+bdu0Pne&#xA;8LSNIJUikUMa8QUA4j2qM1GrFTL6J2BPi0sdqq/vSvyjof6Vu7gyQmW2tIvVmIJAFWCrUjx5dMoE&#xA;SQSOjk9o6rwYijUpGg+hPLRh/QNgkIpHFCkSrWtPTHCm/wDq5uMBuAfO9ZfiyJ5k380yy5xnYqxn&#xA;8x/Lkev+U7y0aZbd4QLmKZ/sK0QJ+KnYrUZTnhxRLfp8nBMF5p/zj8dFi1HVZp2VdXeKNIa1r9WD&#xA;Vkoen2+NfozF0kwLBLl6+BNGnuCsrKGUhlPQjcHNgDbrW8VdirsVdiqVeYPNGj6DavcX8pHBeQiQ&#xA;cnbegAGw3PSpGVZM8Yc3L0miyZ5CMA8Z/MO0k1eycs/1fTZL2Ga9t1+21sZKyR8h0O4IIHbNfp9R&#xA;GGXiI7/g7bNoJ58YxQlv99dHtmn6jpsulLcWFDaQpxjRRxChFFFp2oKZsoZRIWHR5MEoS4ZCiks3&#xA;ndIoY5TB8Dy+kSSRuenj1yPiMvB2tk8UiyxJIv2XUMvyIrlrQuIBBBFQdiDirx3zB/zjvp013Pc+&#xA;X74afFM3MafKheJWPXhIDyVf8kg5j5sHEbczTarwxRGzzKGTzJYGbQLq8M2mWk8jJCjlrcODx5Rk&#xA;0qCQT9J8cwJy2rues7O08oz4zGuIJnoWsXGjava6nbhWltn5BG3DAgqyn5qSK5CE+E2HaanTjNjM&#xA;DyL6O0PWrLWtLg1GzblDMteJ+0jD7SN7qc3EJiQsPnWp08sMzCXMI7JNDsVdirsVeZ+d9EtrTzJP&#xA;qMcdH1KKMzuejNEDHQf7HjXOX7dBGSPdX2/inpOx53jI6gpDY6Fpt3LBpf1dEtLqeNZYo1CggutS&#xA;QKeGa/RylPPCze/2OfqSI4pHye1Z3DxjsVdirsVfOf5l6za6p501CS2kWWG3K26shrUxKFf/AIeu&#xA;ajVWZkvovYMRHTRF+rcn4/sZF+SVxaNqeq6bORyvLZSqE05LGxDAe9JK5ZowCSD1Dge04IhCQ/hl&#xA;+PuegxwXvlq4Z15XOjyH95T7UZP7RH+dcsEZYT3wecMo6gVyyfeyW2ure5iEtvIssZ6MpqPl88zY&#xA;yEhYddOBiaIoqmSYpP5os4r/AE6TTpiwguo3jlKHi1GXjsfkxzE1R2AbcJo2xPyx5I0fyys0tgJJ&#xA;7qYBXmmKl+ANeC0CgDMMRpycuaU+aH82/mQ/lS705IoBcx3RZ7uFqqwiWgqtej1PcdsshmMD5Jxa&#xA;fxAWc+XfMek+YdNTUNMm9WBtnU7PG9KlHXsw/wBrbNhCYkLDh5MZgaKZ5Ng7FXYq8Y/NJLq+N5ew&#xA;kta2s6rMe1P7tT/wQzTZyZTkege07BMYGMT9Uht97A7vX9UurQWs8vKLblsAW47ipyh6DHo8cJcQ&#xA;G71vyTdT6BaR2OqV9OW2WRl60JTmgH+xPH55l4MnhkiXIvHdpwGokZY/534/WyLRtFtNTsUvL6Kv&#xA;KRngjHwqq1oOnfrv1zM04MhxF1OqlwS4Y9OfvZMqhVCqKACgA7DMlwnYqlHm/VG0vyxqV8hIkigY&#xA;RMOokf4EP0MwOV5ZcMSXM0GHxc8InkT9nMvnWHTNQnsp76G3eS0tiqzzKKqhetK/dmoESRb6HLNC&#xA;MhEn1HkELgbGaflj5vOh6wLS5kppl8wSWp+GOToknt4N7fLMjTZeE0eRdN2zoPHx8UR64/aO79T3&#xA;fNo8K7FXYq7FXiv/ADkHNfXV5pWn2tvLKlvHLNPJGjMtZWVVUla/77J+nNbrM0BIRJFu37OxS4TL&#xA;oWD/AJaxatpnnXSb97KYW6zenM7RsFCSqYmY1H7IeuY+PU44zFyDl6jDKWMin1Fm6eddirsVeefm&#xA;p5vey8sarJaStFbWo+rS3MZo0t3J8K2sR/ya8pmHQAqPiqVOOHHLh6NkpDFDjP1dB+n9Xz9/k9pC&#xA;8hLGrH4mJ8Sc3IFbB0UiSbPN6x/zjfo9zded5tRUUttOtX9V6bF5/gRPpHI/RmLq5ekBydIPUS+m&#xA;2VWUqwBUihB3BBzXuwBYxNoqaJqlnfadcSQWlxOlveWGzQusgKoVqOSsrkb16e2Y8cIgbi7A6s5c&#xA;ZjMAy5iXUd7J8yHXpD5k1AWt/pcLA8bxpoVPQeoqCRfvVGzE1XIN2KNgocXCVowZPdgQPv6ZiMkj&#xA;/NDUdKtPIM4u4Iri5nb6vYrIoYpK+5kWu6lEqajLzIDE26aJOTZf+S/lqbR/Kn1q5Upc6o4uOB6r&#xA;EBSIH3Iq305dpcfDG+9jrMnFOh0Z/mS4jsVQ2qXJttOuZwaNHGxU/wCVT4fxyGWXDEltww4pgebC&#xA;ZW07T/Il3PqjRJHfSqqevTixDDgPi6kFGYZhYMMpYjQsl2WbUiGoiTLhEevJhTar5WCGs9pxA3Hw&#xA;HYe2Vfyfn/mS+Tl/yvi/1Uf6Z6xNpmk+Y7Cyv0ekckSvFLCRvG4qF3B6ZnZtMJ/VsQ6bBqzjvh3B&#xA;/FpxbwR28EcEQpHEoRR7AUy6MQBQaJyMiSeqphYuxV5z+dGryRaXZaPCCXv5C8gHUpERxWn+U7A/&#xA;RmHq5bAd70Xs7gBySyH+Eff+z72VeUPLcGieW7fTWRWkZed7UAh5ZB8dexA+z8hl+LHwxp1ev1hz&#xA;ZjP5e4cv1vFfMfle5h8x6jb2cai0S4f0WBARVJqFH+rWnTNFqdVjhMi+Re20erEsMZS+rhDdl5Wi&#xA;Rg91J6hG/prsv0nqc12XtAnaIplPVE8ntnlPVFv9HiqR61uBDKP9UfCfpGdH2ZqfFxC/qjsXh+0d&#xA;P4eU90t05zYOC7FXYq8l1i+a/wBUuLnqJHIjH+SNlH3DOD1eY5cspd5/se002IY8Yj3BS1CwuLC6&#xA;a2uBSVQpNOnxAH+OQz4JYpcMubLDmjkjxR5PTvLt+19o1tcOayFeEh7lkPEn6aVzs9Bn8XDGR5/q&#xA;eT1uHw8sojkmOZjipRrN5czXCaNp7mO8uE9S4uVpW2tqlTIP8tyCsY8atuFIyJPRuxxAHEeQ+0/j&#xA;m8c/5yTkXT9J8t6FZxtDp4aebgK8C0Soibn7TD1WJJ33r3zO0URZdfrshNX1eI32lNZQ2Nw0ySnU&#xA;bf6yqxmvpqs0kIR/BqxFvkRmbE2S4MhQD6s/JfycvlryTa+qtNQ1MC8vD3HqKPTj/wBglNv5q5rM&#xA;+Tik7PDj4Y0zzKW1KvMxI02Ghp/p+nfjfQ5GXJtw/V8Jf7ksHvPK35wyeYdUnsvMENtpVzMxtY5G&#xA;LlIS1VCIY3ClRtsRmPLHls0dnIjkw8IuO6AvPId1os8HmTzZ5veRLCVZUSRXcM4NfTTlIT8QBHFU&#xA;xjo5zPOys9ZARIEaDJIPNvli4g9aHVbV0IrT1kDfIqxDA+xGUy02QHeJ+TjjJE9Q830vXLbzf5ns&#xA;5/Ndxb2WlWMipBp3KhlllYAAqxLFagc26UFPHHBp5zlvE0HMy5YYo1E+qT6AAAFBsB0GbB1zsVdi&#xA;rGPNmqKwTSlPBrmRFL1/ZBBP4kZh6qdgR7y7DRQomZ/hDxb/AJyK8zJPqOl+WrQlbPToFuJo/wDi&#xA;2UUjDDxSIVH+tm60WMCNui12QmVF5RPo+pwaZa6pNbumn3jyR2tyfsu8NOYHy5f50OZnELpw+E1b&#xA;6F/5xt80vfeXbzQJ3rLpTiS2qdzBOSaD/UkB/wCCGYGrhRvvc7STsV3PYsxHLdirsVed6vY/p382&#xA;LO3YcrXRrdJ5x25BjIo+lnT6MxJx4so8notPl8DQSP8AFkkQPu/QWXeZ9ZGl6azof9Jl/dwD3PVv&#xA;9iMr7R1fg47H1HYOq0Gm8bJR+kc2AaDpE2r6isNT6QPO4l8Frvv4ntnK6LSnPkrp1L0mr1Iw4769&#xA;GX+b9Aim0lJbSILJYr8KKOsXdfo650HauhEsQMBvD7nSdm6wxyVI7T+9j/kfUGttYFuTSK7UoR25&#xA;KKqf4fTmp7Gz8Gbh6S/Adl2rh4sXF1i9Gzr3l3YqhtTm9DTrqYGhjhkYfMKTlOonw45HuiW3BHiy&#xA;RHeQ888n6Z9e1mNnFYbb99J4Ej7I/wCCzkuytP4mYXyjv+p6btLP4eI1zlsn35gaZzt4dRQfFEfS&#xA;m/1WPwn6G/Xm07c09xGQdNi6/sfPUjjPXcK/5fzc9ImiPWOY0+TKD+uuW9hzvER3Sau2I1lB7wn+&#xA;o38FhYzXk9fThXkVUVZj0VFHdmagUdzm5Jp1cImRoIXQtPntrd7i8odSvW9e9IPIKxFFiU/yRLRF&#xA;8evUnBEM8swTQ+kcvx5pd588i6T5y0NtMv6xSofUs7xRV4ZaU5AbclPRl7/OhFuPIYGw4+TGJCi8&#xA;J83fk7Lb3tlYWLx2xgiZLiSYsTLRqiVaA15cj4ZVj7TOMyGQEm9qcrJ2VHKInEQBW9voDyWt1H5T&#xA;0mG6dZbiC2jhklUEBjEPT5b+PGpxjkExxDkWueIwPCdyE5yTBKvMdHt7ODvNfWnHt/czrOfwiORk&#xA;24eZPkfupFatqthpOm3OpahMILO0QyTyt0Cj9ZPQDucmBZoNJNPk/wA3fmFdecNenu7h3jtldl0+&#xA;0dqrHF2AA25mlW8c22CIiK6uFkJJtMfKP5aeaPNAlutOjWKzQGtxcEpG7qNkjIBJbsT0HfHJmjDm&#xA;sMZkx68s7qyupbS6iaG5gcxzROKMrKaEHLgbFhrIp9N/lb5xXzL5YieVq6jY8be+XuWA+CT/AGai&#xA;vzrmp1GLgl5OdinxBmGUNjsVQV1o9hcnnJErTBi6SsAzKx7g5CWMFsjlkOR2fJGsx3nnf8zLmCw+&#xA;OTU74wWr9QsEZ9NHPskKcj7DNzGoQ9wdNO5zPmX0X5u/LPTtS/LgeVbBAj6fEraW7Ur68INCx8Za&#xA;sGP+UTmvhmInxFz54QYcIeHfkLqsuk/mVb2kwMYv45rKZG2IYD1FBB784guZupjcHC00qm+qs1js&#xA;3Yq7FWD/AJex6rPrXmbV7yNfQvb6SG2kr+8VbOR4PTZSPACnyPtlGIGye9ztVluEIXtEffugvNF3&#xA;NqvmEWcB5LE4t4R25k0c/wDBfqzmO0spz6jgj0PCPf1d1oMYw4OM9dz+hm2i6PbaVZrbwirneaU9&#xA;Xbx+XgM6TSaSOCHCPie90Gq1Ms0+I/BH5lOM828x2B0bXkmthxiZluIB2UhqlfoI+7OO7Qwfl84M&#xA;eX1B6rRZvHw1LnyL0aCZJ4I5k3SVQ6n2YVGdfCYlESHIvLziYkg9F+SYpB521D6rorRL/eXTCIf6&#xA;vVj9wp9OartjPwYa6y2dl2Vh48t9I7qfkWwWDR/rJH7y7YsT/koSqj9ZyHYuARw8XWX6GXa2biy8&#xA;PSKeX9nHeWU1rJ9iZCpPhXofoO+bPPiGSBieodfhyGExIdGF+RLxrbU7jTpdjMDQf5cVaj7q/dnO&#xA;di5eDLLGev3h33a+LixiY6fcWSamv1vWtOsDvBDzv7hfEwlVgVv+ej+oPePOmPN0cNok/D9f6vim&#xA;+SaXYqkPnDSbe80360wIuLKskTjwIo6t4gg/fmNqsYlAnqHM0WUxyAdCreU5lfRYEAoYwQfpYnJ6&#xA;Yfuww1n97JOMucZKdQ/f6/pNsP8Aj29e+c+HGM2yqf8AW+ssR/qnInmG6G0JHvofp/Q8l/5ye12e&#xA;HTtH0SGUrHdvLc3UY25LDxWIN4jk7GniMzNLHclw8x6KX5U/kNpcmn2PmHzK31xrqJLm10sCkSo4&#xA;DoZj1clSDw2A6GuHLnN0Fhj6l7jb29vbQpBbxJDBGOMcUahUUDsqigAzFJtueefmh+U48zudV0mW&#xA;O21lI+LpID6dxx+xzYfZYDblQ9h2zIwajg2PJpyYuLd5Ho+kfnf5Ru5jpWn39tJMQLiKGKO8t34d&#xA;D/uxB16j78yJzxz5lrjGUeTNNM87/wDOQRhVG8uJcOdvUubRoiSPGlxAv4ZSceLvZiU+5lPlXUfz&#xA;gm1GWbzTZQWWlrbuUS3EJf1uacahJbhqcOXfMTV0I+gt2KyfUmvnzzgPLvkC81VmreGM21pvQtcP&#xA;WNT/ALGhc+ww6QcdMc8uAEvNf+cafKKMb7zXcAEoTY2KnsaK8z/cVUf7LM3Vz/hcXSQ/ie95gua+&#xA;aPzj0eXyZ+Zlj5m09QIb2ZdRiTt9YhdTOnyYkMf9bNjglxw4S67PHgnxB9F6Pqtrq2lWep2h5W17&#xA;Ck8RPXjIoah9xWhzXyjRp2ETYtGYEuxVL7+W10jS7q5ijWMDnLxUABppWrU+7O2+Y+pzDFjlPu+9&#xA;v0+M5cgj3/cxnyPorSytq9yCaEi3r3Y7M/8ADNH2No+I+NL4frdx2rqqHhR+P6mbZ0joHYqxjz5p&#xA;huNOS9QVe0J5jxR6A/caZpe29Px4xMc4/cXb9kZ+GZgf4vvR3lC6+saBbb1aLlE3txO3/C0zJ7Ky&#xA;cWnj5bON2lj4c0vPdOc2LgsN8+pJc3um2ce8j8go95GVR+rOd7bBnPHAcz+mne9kERhOR5fqtltp&#xA;bR2trFbR/wB3CgRfkopm+xYxCIiOQDpckzORkeZVcsYMGvLQaf55tpFHGO6kWRfnJVWH/BVzmcuL&#xA;wtdEjlI389j9r0GLJ4mjI6xFfJkcR4ebLoPt69hbmAHv6M0/q0+XrR1+YzpOrpT/AHY/rH7h+opt&#xA;kml2KpfrdGsmiLALL8LL3I8BkoxErBUSMSCOjtBt1t9OWJF4oCeNepB3r9+R4BAcI5BlPIZniPNH&#xA;syopdyFVQSzE0AA6knFilHl8PdyXWtSKV/SBRbRSCCLSGvo1B/nZ3k8aMAemRj3t2Xao933/AI2f&#xA;PH5uNd+cPziTQbE82iMGmwnqqn+8mcgdkaRuXsubDD6YW4E95U+mLCyhsbG2soKiG1iSGIHc8Y1C&#xA;r+AzCJtyQr4FdirsVdirsVeGf85JO62fl7Q7UNJJd3M84hG5LDikYHzMzAZlaGAjbiayV0Hq3kfy&#xA;xD5Y8q6fosdC9tH/AKRIP25nPORv+DY09soyT4pEuRjhwxAT3IM3nf56eUv0/wCR57iFa32jk3sN&#xA;OrRqtJk+lPi+ajMjTT4Ze9o1EOKPuU/+cftS+ufltaQluTWE89sTWp+36wH0LKMdUKmjTG4PSMx3&#xA;Iad1RS7kKiglmJoAB1JOKvJvMHny981eYoPL3lO1/SNjA4fUbsfCpHLjyRiVXigJ3P2j099ZrMf5&#xA;gcAunbaQflwZy59Hq1vbxW8EcEK8YolCoo8BmwxwEIiI5B1c5mRJPMqmTYuxVZPDHPDJDIOUcilH&#xA;XxDChyM4CQIPIsoSMSCOYeceR/O+jWvmK/8AKtzI9vcrOyW7zqI0kkRvTKrU15NQFajfNT2Zilh4&#xA;oSPXZ23aP70RyRHTd6S7qil3IVFBLMTQADqSc3DqALYHBr9trP5h20dvxls7aN1jlFfiZEZiw9uR&#xA;2+Wa2WKOTURn/Nd/LTSw6KV7Skf1M9zZPPuxVhv5j3baeml6iiBpILigB2r0fr/sM12u04mYT6xL&#xA;uux48fHA8jH9n6U4kMGuWdrqukXCC7tyXtZT9k8gBJBMBvxfbl4EBuwzOBEhYddKEsMjCY/HeF9v&#xA;5lsw62+pqdKvSeIhuSFR2/4pm/u5a+Cnl4qOmHi72BwnnH1Dy/SOib9dxkmlDT6fBPMJZCxI2412&#xA;2yQmQEU691HTtOtxLeXEdrDsqmRgoJ7KtepPYDfIE97OEDI0BaUtHeeYCqzQvaaECGeGZSk94OoV&#xA;4zRooa9Vb4n6EKv2o8/c3WMfLeX3frP3fcaXGpWsEUjKfUeIECJPtFh+yK0HtvgOaI6tPCXkn5Ke&#xA;Q9Zh8xa15u8y2rQapLPLFbxSUJ5yt6k8ykVBB5cVZT/NmXkzRlECPJphAgkl7NlDY7FXYq7FXYq0&#xA;zKqlmICgVJOwAxV53qfl/T/Mn5maRrLzM8GjIfQgFODyIWcSV67Oy/8AA5OGegYjqxngsiR6PRcg&#xA;ydirTojoyOoZGBDKRUEHYgg4q88/LTRNP8n3GraLHdM1tPdvLbCUBQpB4ca+6qv3ZPJn4zujHg4B&#xA;s9EyCVssUcsbxSoskUilZI2AKspFCCDsQRioKG07SNJ0yNo9NsoLKNzydLeJIlJ8SEC1wCIHJlKZ&#xA;lzNovCxdirsVdirHvNnkPy55pSIapA3rQV9K5hbhKoPVeVDUexGVzxCXNuxZ5Y+SZPo1rJow0iZ5&#xA;ZbYRLA0jyEysqgCrSdSxpue+SMQRSMeaUJ8Y5hT0Xy3o+jRsthAEZ/tyseTn/ZHentghjEeTZqdZ&#xA;kzH1lM8m4zsVQ99p9lf27W15Cs8L9UcV7UqPA+4wSiCKLZiyyxy4omigtB8s6boYnWx9QLcFWdZH&#xA;5Aca04/fkIYxHk36rWTz1x1smcsUUsbRyoskbCjIwBUj3ByxxQaSweVtBQ1trb6l7WUkloD8xbtG&#xA;Mjwhs8efU379/va/wxpv+/r/AP7iN9/1Wx4QnxpeX+lj+pXstB0aym9e2tI0uSKG5I5zEHsZX5Of&#xA;pOERAYyyykKJ2R+FrUZ7O2nNZIwW/nGzf8EKHISxxlzCQSF8MSxRrGteK9K9cMYgCgpNr8kh2Kux&#xA;V2KuxVRvbSK8tpLaWvpyABuJodjXr9GAhINKOn6Rp9gtLeIBz1kbdz9OIFJMiUZhYuxV2KpdqHl/&#xA;TL5/Ulj4yd3j+En5+OAxBZCZCYIgRFRa0UACpqaDbqcLFvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:19255C71C76CE91183158642932CA4DA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:19255C71C76CE91183158642932CA4DA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:4839ea9f-735d-264a-9469-3048df635ef7</stRef:instanceID>
            <stRef:documentID>xmp.did:812aeb58-9ec1-a34c-ba7c-f25249f7aac1</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ca29a0c7-e321-5144-8b0c-c78bb2f197a1</stEvt:instanceID>
                  <stEvt:when>2019-03-25T10:06:26+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:61ebcda0-5491-1443-a75f-4843ba989c7c</stEvt:instanceID>
                  <stEvt:when>2019-03-25T23:15:24+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:812aeb58-9ec1-a34c-ba7c-f25249f7aac1</stEvt:instanceID>
                  <stEvt:when>2019-03-25T23:19:18+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4839ea9f-735d-264a-9469-3048df635ef7</stEvt:instanceID>
                  <stEvt:when>2019-04-16T20:29:13+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2018 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:19255C71C76CE91183158642932CA4DA</stEvt:instanceID>
                  <stEvt:when>2019-05-02T13:46:13+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1600.000000</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
1600 800 li
1600 0 li
cp
clp
1600 800 mo
0 800 li
0 0 li
1600 0 li
1600 800 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
526.243 243.593 mo
526.243 243.593 542.976 278.871 531.458 280.98 cv
515.644 283.877 509.245 254.658 509.245 254.658 cv
526.243 243.593 li
cp
.0862745 .2 .258824 rgb
f
529.265 278.41 mo
529.265 278.41 538.305 271.288 542.152 267.441 cv
545.999 263.595 562.998 236.303 566.428 231.001 cv
569.858 225.699 573.757 215.25 576.096 210.728 cv
578.436 206.206 601.517 171.429 601.517 171.429 cv
610.406 175.172 li
610.406 175.172 594.498 215.406 590.444 222.112 cv
586.39 228.818 582.334 242.386 579.215 248.312 cv
576.096 254.238 559.255 278.098 556.291 283.557 cv
553.328 289.015 550.507 299.662 550.507 299.662 cv
550.507 299.662 525.252 293.121 529.265 278.41 cv
cp
.556863 .309804 .227451 rgb
f
496.047 260.319 mo
496.047 260.319 497.71 272.675 496.878 281.183 cv
496.047 289.69 520.167 283.452 520.167 283.452 cv
520.167 283.452 518.816 264.947 520.895 258.292 cv
522.975 251.639 496.047 260.319 496.047 260.319 cv
cp
f
471.863 386.438 mo
471.863 386.438 468.611 394.462 466.481 399.957 cv
464.353 405.451 454.137 427.809 451.341 443.685 cv
448.547 459.559 444.344 488.348 443.732 496.277 cv
443.12 504.207 440.124 516.265 436.938 522.761 cv
433.751 529.256 426.623 548.273 425.821 560.415 cv
425.018 572.558 418.759 626.209 418.759 626.209 cv
418.759 626.209 424.222 630.961 433.557 624.422 cv
433.557 624.422 448.897 573.687 452.712 566.243 cv
456.525 558.799 462.043 539.453 462.587 532.404 cv
463.132 525.355 469.506 517.428 474.861 501.069 cv
480.216 484.711 502.598 437.634 504.781 428.315 cv
504.781 428.315 504.989 424.17 510.562 424.958 cv
507.045 384.498 li
471.863 386.438 li
cp
.980392 .631373 .27451 rgb
f
542.776 386.735 mo
542.776 386.735 546.256 395.369 548.375 400.867 cv
550.494 406.365 560.669 428.742 563.435 444.622 cv
566.201 460.502 570.35 489.298 570.949 497.229 cv
571.546 505.16 574.519 517.225 577.693 523.726 cv
580.868 530.226 587.962 549.256 588.741 561.4 cv
589.521 573.544 595.682 627.207 595.682 627.207 cv
595.682 627.207 590.211 631.949 580.889 625.393 cv
580.889 625.393 565.641 574.63 561.84 567.179 cv
558.041 559.728 552.558 540.372 552.026 533.322 cv
551.494 526.272 545.135 518.333 539.811 501.964 cv
534.486 485.596 511.83 438.289 508.819 428.666 cv
508.819 428.666 508.159 424.586 503.964 425.856 cv
472.475 383.918 li
542.776 386.735 li
cp
f
434.844 620.191 mo
434.844 620.191 433.391 621.717 431.171 621.576 cv
428.949 621.435 422.313 619.058 419.521 620.378 cv
416.729 621.7 415.854 634.503 410.439 637.919 cv
405.025 641.333 388.804 651.967 390.158 660.225 cv
391.526 668.563 413.979 665.064 419.45 657.872 cv
424.922 650.679 430.166 653.782 434.58 648.729 cv
438.996 643.675 434.386 625.004 434.844 620.191 cv
cp
.921569 .443137 .443137 rgb
f
579.633 621.242 mo
579.633 621.242 581.115 622.69 583.335 622.554 cv
585.557 622.417 592.197 620.052 594.987 621.378 cv
597.777 622.705 598.629 635.51 604.036 638.935 cv
609.444 642.359 625.646 653.022 624.276 661.278 cv
622.893 669.613 600.447 666.073 594.988 658.871 cv
589.531 651.668 584.281 654.762 579.876 649.7 cv
575.469 644.639 580.082 626.055 579.633 621.242 cv
cp
f
488.797 227.649 mo
488.797 227.649 486.596 225.005 485.776 227.668 cv
484.955 230.33 487.644 238.244 487.939 239.389 cv
487.939 239.389 489.273 243.831 489.807 243.264 cv
490.338 242.697 488.797 227.649 488.797 227.649 cv
cp
.556863 .309804 .227451 rgb
f
527.252 227.978 mo
527.252 227.978 529.454 225.334 530.274 227.997 cv
531.095 230.659 528.406 238.572 528.11 239.719 cv
528.11 239.719 526.776 244.16 526.243 243.593 cv
525.711 243.026 527.252 227.978 527.252 227.978 cv
cp
f
511.479 202.345 mo
511.479 202.345 531.685 205.456 528.726 237.282 cv
525.768 269.109 507.936 266.582 506.745 266.555 cv
505.554 266.529 488.855 267.217 487.41 228.382 cv
487.41 228.382 486.737 199.664 511.479 202.345 cv
cp
f
491.286 226.479 mo
491.286 226.479 513.711 233.148 524.446 231.015 cv
524.446 231.015 525.132 234.977 526.674 235.22 cv
528.215 235.464 529.003 227.649 529.003 227.649 cv
529.003 227.649 529.529 201.768 506.116 201.524 cv
482.703 201.28 487.46 229.558 487.46 229.558 cv
487.778 234.391 li
487.778 234.391 491.132 235.714 491.286 226.479 cv
cp
.0862745 .2 .258824 rgb
f
498.799 263.518 mo
498.799 263.518 505.874 270.221 516.757 264.069 cv
516.757 264.069 513.542 269.44 507.441 269.304 cv
501.341 269.169 498.799 263.518 498.799 263.518 cv
cp
.388235 .188235 .160784 rgb
f
519.778 274.786 mo
519.778 274.786 526.457 277.942 529.265 278.41 cv
532.071 278.878 550.629 294.005 551.252 295.564 cv
551.876 297.124 546.887 309.912 545.015 315.837 cv
543.144 321.763 535.087 357.476 535.84 359.971 cv
536.594 362.466 543.572 387.519 543.9 389.537 cv
495.351 399.1 470.063 390.909 470.063 390.909 cv
470.063 390.909 478.269 366.676 477.958 361.998 cv
477.646 357.32 473.123 330.809 469.847 323.323 cv
466.573 315.837 461.115 296.968 461.115 296.968 cv
461.115 296.968 482.323 280.438 482.947 279.346 cv
483.571 278.254 494.197 276.226 497.106 274.786 cv
519.778 274.786 li
cp
.556863 .309804 .227451 rgb
f
484.308 278.618 mo
484.308 278.618 474.11 271.288 470.264 267.441 cv
466.417 263.595 449.418 236.303 445.988 231.001 cv
442.558 225.699 438.658 215.25 436.319 210.728 cv
433.979 206.206 410.899 171.429 410.899 171.429 cv
402.01 175.172 li
402.01 175.172 417.917 215.406 421.972 222.112 cv
426.026 228.818 430.082 242.386 433.201 248.312 cv
436.319 254.238 453.161 278.098 456.125 283.557 cv
459.087 289.015 461.908 299.662 461.908 299.662 cv
461.908 299.662 488.32 293.328 484.308 278.618 cv
cp
f
529.265 278.41 mo
529.265 278.41 539.502 309.941 543.039 323.416 cv
543.039 323.416 537.652 347.526 537.009 351.13 cv
537.009 351.13 506.798 345.313 476.549 352.174 cv
476.549 352.174 470.017 323.825 469.386 322.229 cv
469.386 322.229 479.743 303.777 484.308 278.618 cv
484.308 278.618 488.213 276.325 491.116 276.666 cv
491.116 276.666 488.25 308.196 508.99 307.884 cv
529.732 307.572 523.364 276.379 523.364 276.379 cv
523.364 276.379 527.094 277.33 529.265 278.41 cv
cp
.980392 .631373 .27451 rgb
f
416.036 179.197 mo
416.036 179.197 413.839 175.876 413.707 173.768 cv
413.598 172.046 413.813 169.558 413.767 167.993 cv
413.722 166.429 412.803 159.717 412.169 158.175 cv
411.911 157.545 408.78 154.338 408.394 152.996 cv
408.009 151.655 407.56 148.833 406.402 149.226 cv
405.244 149.618 404.953 152.272 404.953 152.272 cv
404.953 152.272 404.526 151.073 403.409 151.107 cv
401.236 151.172 400.641 152.406 400.641 152.406 cv
400.641 152.406 399.402 151.484 398.501 151.739 cv
396.512 152.3 395.969 153.511 395.969 153.511 cv
395.969 153.511 394.842 153.216 393.599 153.888 cv
392.008 154.746 391.996 156.527 391.996 156.527 cv
391.996 156.527 389.767 157.149 389.63 158.435 cv
389.492 159.719 390.078 160.712 390.244 161.727 cv
390.409 162.742 394.084 170.851 399.315 175.356 cv
403.569 179.019 406.741 186.4 406.741 186.4 cv
416.036 179.197 li
cp
.556863 .309804 .227451 rgb
f
384.187 164.592 mo
414.401 150.397 li
417.008 155.944 li
386.793 170.138 li
384.187 164.592 li
cp
.721569 .345098 .345098 rgb
f
405.586 152.878 mo
405.586 152.878 409.091 159.985 407.965 162.462 cv
406.841 164.939 405.432 162.447 405.432 162.447 cv
405.432 162.447 406.867 164.888 405.024 166.267 cv
403.181 167.646 401.688 164.638 401.688 164.638 cv
401.688 164.638 402.274 166.787 399.983 167.464 cv
397.69 168.141 397.024 165.355 397.024 165.355 cv
397.024 165.355 396.16 168.869 393.757 167.16 cv
389.7 164.273 389.63 158.435 389.63 158.435 cv
389.63 158.435 389.747 157.026 391.996 156.527 cv
391.996 156.527 392.047 153.048 395.969 153.511 cv
395.969 153.511 398.231 150.185 400.641 152.406 cv
400.641 152.406 403.255 149.004 405.586 152.878 cv
cp
.411765 .227451 .168627 rgb
f
405.671 135.324 mo
407.889 134.248 li
409.645 133.395 411.759 134.127 412.612 135.884 cv
427.374 166.294 li
428.227 168.051 427.495 170.166 425.738 171.017 cv
423.522 172.094 li
421.765 172.946 419.65 172.213 418.799 170.458 cv
404.036 140.047 li
403.183 138.291 403.916 136.176 405.671 135.324 cv
cp
.921569 .443137 .443137 rgb
f
374.641 149.915 mo
378.491 148.046 li
379.796 147.413 381.368 147.958 382.002 149.263 cv
397.556 181.305 li
398.189 182.611 397.645 184.183 396.339 184.816 cv
392.49 186.684 li
391.184 187.317 389.612 186.772 388.979 185.467 cv
373.424 153.424 li
372.791 152.119 373.335 150.547 374.641 149.915 cv
cp
f
596.38 179.197 mo
596.38 179.197 598.576 175.876 598.709 173.768 cv
598.818 172.046 598.603 169.558 598.648 167.993 cv
598.693 166.429 599.613 159.717 600.246 158.175 cv
600.505 157.545 603.636 154.338 604.022 152.996 cv
604.407 151.655 604.856 148.833 606.014 149.226 cv
607.171 149.618 607.463 152.272 607.463 152.272 cv
607.463 152.272 607.89 151.073 609.006 151.107 cv
611.179 151.172 611.774 152.406 611.774 152.406 cv
611.774 152.406 613.014 151.484 613.915 151.739 cv
615.904 152.3 616.446 153.511 616.446 153.511 cv
616.446 153.511 617.572 153.216 618.816 153.888 cv
620.407 154.746 620.419 156.527 620.419 156.527 cv
620.419 156.527 622.649 157.149 622.786 158.435 cv
622.922 159.719 622.337 160.712 622.172 161.727 cv
622.006 162.742 618.332 170.851 613.1 175.356 cv
608.846 179.019 605.675 186.4 605.675 186.4 cv
596.38 179.197 li
cp
.556863 .309804 .227451 rgb
f
628.229 164.592 mo
598.014 150.397 li
595.407 155.944 li
625.622 170.138 li
628.229 164.592 li
cp
.721569 .345098 .345098 rgb
f
606.83 152.878 mo
606.83 152.878 603.324 159.985 604.45 162.462 cv
605.575 164.939 606.983 162.447 606.983 162.447 cv
606.983 162.447 605.549 164.888 607.392 166.267 cv
609.235 167.646 610.728 164.638 610.728 164.638 cv
610.728 164.638 610.142 166.787 612.433 167.464 cv
614.726 168.141 615.392 165.355 615.392 165.355 cv
615.392 165.355 616.256 168.869 618.659 167.16 cv
622.716 164.273 622.786 158.435 622.786 158.435 cv
622.786 158.435 622.668 157.026 620.419 156.527 cv
620.419 156.527 620.368 153.048 616.446 153.511 cv
616.446 153.511 614.184 150.185 611.774 152.406 cv
611.774 152.406 609.16 149.004 606.83 152.878 cv
cp
.411765 .227451 .168627 rgb
f
606.744 135.324 mo
604.526 134.248 li
602.771 133.395 600.656 134.127 599.803 135.884 cv
585.042 166.294 li
584.189 168.051 584.921 170.166 586.677 171.017 cv
588.894 172.094 li
590.65 172.946 592.766 172.213 593.617 170.458 cv
608.38 140.047 li
609.232 138.291 608.5 136.176 606.744 135.324 cv
cp
.921569 .443137 .443137 rgb
f
637.774 149.914 mo
633.924 148.046 li
632.619 147.413 631.047 147.957 630.414 149.262 cv
614.859 181.307 li
614.226 182.611 614.771 184.183 616.076 184.816 cv
619.927 186.685 li
621.232 187.318 622.803 186.773 623.437 185.468 cv
638.991 153.425 li
639.624 152.12 639.08 150.547 637.774 149.914 cv
cp
f
806.255 518.964 mo
796.93 530.879 li
796.149 529.395 792.848 525.167 788.212 519.551 cv
788.212 519.551 788.212 519.544 788.206 519.537 cv
785.912 516.753 783.287 513.631 780.483 510.337 cv
769.961 497.958 756.815 483.059 748.838 474.517 cv
745.268 470.693 742.783 468.189 741.946 467.676 cv
737.726 465.085 726.722 449.705 725.168 441.935 cv
723.614 434.163 727.265 420.919 730.201 410.73 cv
733.137 400.542 743.569 373.561 749.44 363.717 cv
755.312 353.874 759.339 343.223 759.339 343.223 cv
813.453 314.792 806.255 353.184 801.53 368.726 cv
796.813 384.268 762.22 431.411 758.248 437.054 cv
754.276 442.691 757.903 445.226 762.91 449.198 cv
767.918 453.17 775.689 465.431 777.761 470.783 cv
779.834 476.138 806.255 518.964 806.255 518.964 cv
cp
.933333 .662745 .529412 rgb
f
793.995 537.326 mo
793.995 537.326 792.844 554.595 788.238 559.2 cv
783.633 563.805 772.351 573.476 776.84 577.39 cv
781.33 581.305 799.866 579.002 806.255 566.684 cv
812.646 554.365 825.423 550.796 823.006 539.975 cv
820.588 529.152 811.928 531.977 804.931 518.676 cv
797.935 505.376 793.995 537.326 793.995 537.326 cv
cp
.858824 .87451 .941176 rgb
f
832.104 374.77 mo
827.15 391.347 816.617 413.106 813.854 418.632 cv
811.091 424.158 800.729 441.772 801.42 449.543 cv
802.008 456.146 806.214 467.24 808.203 476.676 cv
808.556 478.341 808.839 479.957 809.018 481.49 cv
810.227 491.679 810.055 547.63 811.263 555.573 cv
812.472 563.518 812.646 565.071 812.646 565.071 cv
812.646 565.071 807.809 569.389 797.794 567.834 cv
797.794 567.834 788.814 520 786.05 510.502 cv
784.704 505.867 780.649 493.855 776.808 481.773 cv
776.808 481.773 776.808 481.773 776.802 481.767 cv
772.761 469.07 768.962 456.299 768.782 451.961 cv
768.437 443.499 773.271 412.934 774.308 397.564 cv
775.344 382.195 787.432 347.022 787.432 347.022 cv
787.432 347.022 803.893 336.377 832.104 347.022 cv
832.104 347.022 837.049 358.191 832.104 374.77 cv
cp
.933333 .662745 .529412 rgb
f
812.418 563.376 mo
812.418 563.376 809.421 565.877 806.255 565.187 cv
803.089 564.496 796.987 565.762 795.952 568.641 cv
794.916 571.519 790.195 585.794 785.475 589.823 cv
780.755 593.853 756.579 612.388 767.746 616.878 cv
778.913 621.367 797.563 615.15 804.586 601.911 cv
811.608 588.672 818.746 589.709 817.135 578.656 cv
815.522 567.604 812.418 563.376 812.418 563.376 cv
cp
.858824 .87451 .941176 rgb
f
801.527 368.728 mo
798.496 378.709 783.14 401.739 771.487 418.421 cv
771.487 418.421 771.487 418.421 771.48 418.428 cv
769.18 421.729 767.025 424.776 765.133 427.428 cv
765.133 427.436 li
761.706 432.25 759.165 435.752 758.246 437.058 cv
754.274 442.693 757.9 445.229 762.908 449.201 cv
764.545 450.499 766.479 452.688 768.414 455.231 cv
768.414 455.231 756.526 462.525 748.838 474.517 cv
748.838 474.517 748.838 474.517 748.831 474.51 cv
745.413 470.844 727.784 458.189 724.917 441.775 cv
723.553 433.969 726.989 420.88 729.925 410.691 cv
732.861 400.502 743.567 373.563 749.439 363.721 cv
755.31 353.877 759.337 343.226 759.337 343.226 cv
813.45 314.794 806.254 353.187 801.527 368.728 cv
cp
.156863 .317647 .45098 rgb
f
832.104 374.77 mo
827.15 391.347 816.617 413.106 813.854 418.632 cv
811.091 424.158 800.729 441.772 801.42 449.543 cv
802.008 456.146 806.214 467.24 808.203 476.676 cv
808.203 476.676 796.115 476.413 776.808 481.773 cv
776.808 481.773 776.808 481.773 776.802 481.767 cv
772.761 469.07 768.616 456.313 768.437 451.975 cv
768.091 443.514 772.358 414.366 773.394 398.997 cv
774.43 383.627 787.432 347.022 787.432 347.022 cv
787.432 347.022 803.893 336.377 832.104 347.022 cv
832.104 347.022 837.049 358.191 832.104 374.77 cv
cp
f
816.801 145.403 mo
816.801 145.403 825.624 139.034 834.442 149.011 cv
843.262 158.988 839.362 169.104 839.636 178.635 cv
839.907 188.166 831.288 209.718 835.334 218.884 cv
839.381 228.051 835.133 233.173 835.133 233.173 cv
835.133 233.173 807.175 241.99 808.14 199.156 cv
809.105 156.322 816.801 145.403 816.801 145.403 cv
cp
.145098 .180392 .231373 rgb
f
729.802 658.654 mo
670.8 650.244 635.36 628.624 624.467 594.396 cv
617.503 572.514 620.586 545.365 633.628 513.703 cv
644.005 488.516 660.684 460.399 683.202 430.137 cv
721.495 378.671 764.026 338.25 764.451 337.847 cv
766.351 339.854 li
765.927 340.255 723.547 380.537 685.396 431.816 cv
663.021 461.891 646.461 489.801 636.176 514.772 cv
623.394 545.81 620.339 572.317 627.1 593.56 cv
637.645 626.69 672.33 647.672 730.192 655.919 cv
865.179 675.158 931.288 597.943 938.391 461.212 cv
941.059 409.862 933.963 367.91 933.893 367.492 cv
936.614 367.022 li
936.687 367.443 943.829 409.648 941.153 461.295 cv
939.579 491.653 934.974 519.301 927.463 543.469 cv
898.097 637.942 827.328 672.554 729.802 658.654 cv
cp
.588235 .180392 .180392 rgb
f
780.483 510.337 mo
781.022 506.841 778.639 487.493 778.639 487.493 cv
781.547 496.908 788.013 518.867 788.212 519.551 cv
785.92 516.767 783.287 513.631 780.483 510.337 cv
cp
.654902 .470588 .376471 rgb
f
778.579 374.783 mo
776.161 384.219 771.487 418.421 771.487 418.421 cv
771.487 418.421 771.487 418.421 771.48 418.428 cv
769.18 421.729 767.025 424.776 765.133 427.428 cv
765.4 406.94 778.309 375.619 778.579 374.783 cv
cp
.113725 .231373 .329412 rgb
f
904.691 344.376 mo
904.691 344.376 908.628 345.818 913.702 345.984 cv
918.775 346.15 924.265 354.151 925.262 356.313 cv
926.26 358.476 924.028 359.292 924.028 359.292 cv
924.028 359.292 909.404 352.472 904.691 353.803 cv
899.978 355.133 899.146 353.026 899.146 353.026 cv
904.691 344.376 li
cp
.933333 .662745 .529412 rgb
f
933.568 373.279 mo
901.28 354.208 li
904.596 348.035 li
937.604 365.768 li
933.568 373.279 li
cp
.921569 .278431 .278431 rgb
f
899.146 353.026 mo
899.146 353.026 900.205 356.874 903.214 359.751 cv
906.224 362.628 917.77 368.748 918.697 368.115 cv
919.626 367.483 921.913 359.127 920.407 356.736 cv
918.903 354.347 917.511 358.542 917.511 358.542 cv
917.511 358.542 917.893 351.948 916.078 352.194 cv
914.263 352.441 914.131 356.425 914.131 356.425 cv
914.131 356.425 913.999 351.062 912.344 351.666 cv
910.688 352.268 910.311 354.793 910.311 354.793 cv
910.311 354.793 910.485 350.077 908.724 350.442 cv
906.962 350.808 905.116 356.9 903.883 355.745 cv
902.647 354.588 899.146 353.026 899.146 353.026 cv
cp
.933333 .662745 .529412 rgb
f
823.235 213.479 mo
823.235 213.479 823.121 218.66 824.848 220.847 cv
826.575 223.035 842.577 228.215 846.031 233.741 cv
849.485 239.267 839.814 266.091 837.396 273.344 cv
834.979 280.597 825.539 295.448 825.309 300.859 cv
825.079 306.27 824.388 319.279 825.423 323.539 cv
826.46 327.798 831.41 343.571 832.101 347.024 cv
832.101 347.024 787.086 354.968 759.341 343.226 cv
759.341 343.226 766.134 319.97 766.019 314.214 cv
765.904 308.457 766.25 287.368 766.939 281.564 cv
767.631 275.762 756.349 263.673 762.795 256.306 cv
769.242 248.938 785.706 234.202 788.929 230.978 cv
792.153 227.754 799.98 221.652 799.98 221.652 cv
799.98 221.652 801.845 219.255 803.055 215.883 cv
804.076 213.037 804.504 209.426 804.241 206.687 cv
824.617 198.628 li
824.617 198.628 822.968 209.839 823.235 213.479 cv
cp
.921569 .278431 .278431 rgb
f
833.022 231.899 mo
834.899 231.179 841.173 225.337 846.768 234.086 cv
852.362 242.836 853.975 254.348 854.436 259.759 cv
854.896 265.17 859.386 290.843 860.421 295.103 cv
861.458 299.363 864.106 301.319 869.4 306.155 cv
874.696 310.99 904.63 344.261 907.047 346.218 cv
899.265 353.398 li
899.265 353.398 854.665 320.776 850.521 315.48 cv
846.377 310.184 843.729 305.003 840.39 293.721 cv
837.052 282.439 826.689 254.924 826.114 250.549 cv
825.539 246.174 823.121 235.698 833.022 231.899 cv
cp
.933333 .662745 .529412 rgb
f
829.396 267.588 mo
829.396 267.588 844.88 259.529 856.277 259.414 cv
856.277 259.414 852.248 225.337 835.439 228.561 cv
818.631 231.784 825.942 255.039 829.396 267.588 cv
cp
.921569 .278431 .278431 rgb
f
824.851 220.849 mo
824.851 220.849 811.187 238.616 797.02 237.655 cv
782.846 236.695 799.983 221.65 799.983 221.65 cv
799.983 221.65 801.047 219.813 802.111 216.981 cv
802.58 215.731 803.057 214.28 803.431 212.706 cv
803.437 212.706 803.437 212.706 803.437 212.706 cv
803.886 210.833 804.211 208.782 804.238 206.688 cv
825.438 195.472 li
825.438 195.472 821.68 216.042 824.851 220.849 cv
cp
.933333 .662745 .529412 rgb
f
806.34 212.951 mo
802.93 213.012 793.368 212.423 787.479 190.792 cv
780.285 164.368 792.178 149.804 802.871 146.64 cv
813.563 143.475 823.763 146.693 830.078 160.364 cv
830.078 160.364 834.731 171.039 829.215 190.812 cv
823.699 210.584 809.991 212.885 806.34 212.951 cv
cp
f
812.346 163.515 mo
812.346 163.515 797.845 165.218 785.437 186.278 cv
785.437 186.278 777.764 162.179 793.698 150.113 cv
809.631 138.048 821.746 147.005 826.051 151.649 cv
826.051 151.649 831.914 152.661 832.7 163.636 cv
833.484 174.612 841.675 190.486 825.897 199.237 cv
825.897 199.237 826.859 186.912 825.274 184.122 cv
823.688 181.333 818.842 183.541 812.346 163.515 cv
cp
.145098 .180392 .231373 rgb
f
824.211 179.295 mo
824.84 177.353 826.797 176.478 828.01 178.455 cv
829.223 180.434 828.345 188.413 825.457 189.438 cv
822.568 190.465 822.935 183.229 824.211 179.295 cv
cp
.933333 .662745 .529412 rgb
f
819.123 207.739 mo
819.123 207.739 813.985 217.852 802.111 216.981 cv
802.58 215.731 803.063 214.28 803.437 212.706 cv
803.701 212.706 810.748 214.584 819.123 207.739 cv
cp
.654902 .470588 .376471 rgb
f
1402.9 244.148 mo
1402.9 244.148 1397.69 223.323 1410.55 212.796 cv
1423.42 202.269 1437.69 206.012 1444.82 212.796 cv
1451.96 219.58 1460.75 233.34 1452.56 252.874 cv
1444.37 272.407 1442.6 267.771 1446.23 282.159 cv
1449.85 296.546 1454.3 306.489 1447.05 313.038 cv
1439.79 319.589 1428.57 317.834 1427.51 309.646 cv
1426.46 301.458 1425.51 272.339 1424.76 268.066 cv
1424 263.795 1402.9 244.148 1402.9 244.148 cv
cp
.109804 .254902 .329412 rgb
f
1431.22 279.018 mo
1431.22 279.018 1446.13 284.804 1451.56 285.506 cv
1456.99 286.207 1455 302.338 1455 302.338 cv
1455 302.338 1458.89 313.494 1458.62 320.771 cv
1458.25 330.566 1453.66 333.198 1453.31 333.899 cv
1452.96 334.601 1448.93 357.746 1448.58 361.778 cv
1448.23 365.812 1449.71 370.984 1450.62 374.314 cv
1451.65 378.055 1454.98 391.832 1454.98 391.832 cv
1454.98 391.832 1427.56 400.12 1386.18 392.581 cv
1386.18 392.581 1388.88 381.892 1389.85 376.608 cv
1390.38 373.753 1391.94 368.266 1391.24 363.005 cv
1390.54 357.746 1384.75 335.652 1384.58 333.548 cv
1384.4 331.445 1373.01 319.872 1383.18 306.02 cv
1383.18 306.02 1385.81 291.643 1386.51 287.785 cv
1386.51 287.785 1404.22 279.719 1408.95 279.018 cv
1413.69 278.317 1431.22 279.018 1431.22 279.018 cv
cp
.933333 .658824 .52549 rgb
f
1451.56 285.506 mo
1451.56 285.506 1458.75 285.725 1464.14 289.67 cv
1469.53 293.615 1473.21 309.658 1474.13 312.289 cv
1475.05 314.919 1485.05 331.489 1486.76 336.749 cv
1488.47 342.009 1489.39 345.296 1490.18 345.033 cv
1490.97 344.771 1501.47 328.309 1503.07 324.322 cv
1504.87 319.796 1512.01 300.059 1512.01 300.059 cv
1519.61 314.197 li
1520.12 315.375 li
1520.12 315.375 1512.8 335.17 1510.56 342.272 cv
1508.33 349.373 1503.07 366.074 1500.57 368.31 cv
1498.07 370.545 1488.47 373.702 1483.34 369.625 cv
1478.21 365.548 1466.25 346.48 1463.22 340.036 cv
1460.2 333.593 1454.28 323.204 1454.28 323.204 cv
1454.28 323.204 1444.77 292.256 1451.56 285.506 cv
cp
f
1386.51 287.785 mo
1386.51 287.785 1378.92 287.697 1375.38 290.854 cv
1371.82 294.01 1365.12 301.637 1363.54 308.344 cv
1361.96 315.05 1361.04 327.149 1358.94 333.724 cv
1356.83 340.299 1350.91 357.263 1347.89 363.444 cv
1344.87 369.625 1342.1 395.4 1340.26 401.58 cv
1338.42 407.761 1331.67 428.364 1331.67 428.364 cv
1342.37 433.8 li
1342.37 433.8 1364.07 386.195 1366.17 378.962 cv
1368.27 371.729 1368.67 362.918 1370.64 357.526 cv
1372.61 352.134 1381.29 332.321 1382.61 328.551 cv
1383.92 324.781 1398.69 289.451 1386.51 287.785 cv
cp
f
1385.05 395.688 mo
1385.05 395.688 1381.33 403.382 1378.88 408.654 cv
1376.43 413.928 1367.21 436.204 1363.52 451.616 cv
1359.84 467.027 1351.72 494.12 1350.67 501.86 cv
1349.63 509.6 1345.95 521.261 1342.37 527.459 cv
1338.8 533.657 1330.57 551.921 1329.1 563.779 cv
1327.63 575.637 1318.4 627.893 1318.4 627.893 cv
1318.4 627.893 1323.66 632.836 1333.45 626.918 cv
1333.45 626.918 1351.69 578.001 1355.95 570.905 cv
1360.21 563.811 1366.83 545.14 1367.76 538.261 cv
1368.7 531.381 1375.57 523.946 1381.86 508.194 cv
1388.16 492.443 1413.7 447.316 1417.28 438.049 cv
1417.28 438.049 1418.51 434.293 1422.06 435.478 cv
1420.7 395.638 li
1385.05 395.688 li
cp
.156863 .317647 .45098 rgb
f
1455.99 395.11 mo
1455.99 395.11 1459.99 403.382 1462.44 408.654 cv
1464.88 413.928 1475.18 437.042 1478.87 452.454 cv
1482.55 467.865 1489.59 494.12 1490.64 501.86 cv
1491.69 509.6 1495.37 521.261 1498.94 527.459 cv
1502.51 533.657 1510.75 551.921 1512.22 563.779 cv
1513.68 575.637 1522.92 627.893 1522.92 627.893 cv
1522.92 627.893 1517.66 632.836 1507.87 626.918 cv
1507.87 626.918 1489.62 578.001 1485.37 570.905 cv
1481.11 563.811 1474.49 545.14 1473.55 538.261 cv
1472.62 531.381 1465.75 523.946 1459.45 508.194 cv
1453.16 492.443 1427.62 447.316 1424.04 438.049 cv
1424.04 438.049 1423.14 434.006 1418.97 435.561 cv
1384.82 396.174 li
1455.99 395.11 li
cp
f
1407.63 220.809 mo
1407.63 220.809 1399.21 234.143 1404.47 252.741 cv
1409.73 271.339 1417.27 272.521 1423.49 270.637 cv
1431.03 268.351 1438.25 252.625 1439.48 245.607 cv
1440.71 238.589 1445.39 221.729 1427.28 219.58 cv
1418.97 218.594 1410.55 218.876 1407.63 220.809 cv
cp
.933333 .658824 .52549 rgb
f
1429.73 265.254 mo
1429.73 265.254 1429.59 285.479 1432.36 291.117 cv
1435.13 296.753 1407.39 293.271 1407.39 293.271 cv
1407.39 293.271 1410.8 270.415 1409.57 264.931 cv
1408.35 259.445 1429.73 265.254 1429.73 265.254 cv
cp
f
1402.74 240.517 mo
1402.74 240.517 1409.62 224.375 1416.4 224.96 cv
1416.4 224.96 1429.64 242.221 1441.27 248.914 cv
1441.27 248.914 1455.59 225.429 1421.9 215.252 cv
1421.9 215.252 1401.48 207.181 1402.74 240.517 cv
cp
.109804 .254902 .329412 rgb
f
1410.91 266.77 mo
1410.91 266.77 1415.33 272.098 1420.18 271.265 cv
1425.02 270.431 1427.75 268.028 1427.75 268.028 cv
1427.75 268.028 1425.52 273.334 1419.65 273.334 cv
1414.6 273.334 1410.91 266.77 1410.91 266.77 cv
cp
.654902 .470588 .376471 rgb
f
1444.23 283.626 mo
1444.23 283.626 1452.88 297.703 1455 302.338 cv
1455 302.338 1466.38 323.861 1453.31 333.899 cv
1453.31 333.899 1451.95 345.15 1449.63 354.494 cv
1449.63 354.494 1420.84 348.593 1389.69 355.426 cv
1389.69 355.426 1384.58 336.135 1384.58 333.548 cv
1384.58 333.548 1372.31 318.557 1383.18 306.02 cv
1383.18 306.02 1392.84 286.458 1393.64 284.645 cv
1393.64 284.645 1415.65 270.613 1444.23 283.626 cv
cp
.921569 .278431 .278431 rgb
f
1554 294.334 mo
1554 305.955 1545.83 315.375 1535.76 315.375 cv
1525.69 315.375 1517.53 305.955 1517.53 294.334 cv
1517.53 282.714 1525.69 273.294 1535.76 273.294 cv
1545.83 273.294 1554 282.714 1554 294.334 cv
cp
.819608 .752941 .729412 rgb
f
1544.17 295.675 mo
1544.17 301.512 1540.07 306.243 1535.01 306.243 cv
1529.96 306.243 1525.86 301.512 1525.86 295.675 cv
1525.86 289.839 1529.96 285.108 1535.01 285.108 cv
1540.07 285.108 1544.17 289.839 1544.17 295.675 cv
cp
.580392 .533333 .517647 rgb
f
1520.12 315.375 mo
1520.12 315.375 1526.17 308.037 1529.76 305.758 cv
1533.36 303.478 1537.04 300.146 1536.6 296.64 cv
1536.16 293.133 1532.48 284.892 1530.2 284.629 cv
1527.92 284.366 1519.42 287.171 1519.42 287.171 cv
1512.01 300.059 li
1520.12 315.375 li
cp
.933333 .658824 .52549 rgb
f
1528.53 292.344 mo
1528.53 303.964 1520.37 313.385 1510.3 313.385 cv
1500.23 313.385 1492.06 303.964 1492.06 292.344 cv
1492.06 280.724 1500.23 271.303 1510.3 271.303 cv
1520.37 271.303 1528.53 280.724 1528.53 292.344 cv
cp
.929412 .854902 .827451 rgb
f
1518.98 292.344 mo
1518.98 298.601 1514.59 303.673 1509.16 303.673 cv
1503.74 303.673 1499.34 298.601 1499.34 292.344 cv
1499.34 286.087 1503.74 281.014 1509.16 281.014 cv
1514.59 281.014 1518.98 286.087 1518.98 292.344 cv
cp
.8 .733333 .709804 rgb
f
1404.34 280.208 mo
1404.34 280.208 1389.31 313.341 1417.98 314.262 cv
1446.65 315.182 1435.55 283.24 1434.76 280.177 cv
1434.76 280.177 1422.89 272.78 1404.34 280.208 cv
cp
.933333 .658824 .52549 rgb
f
1335.04 622.653 mo
1335.04 622.653 1333.42 624.086 1331.19 623.824 cv
1328.95 623.561 1322.38 620.799 1319.48 621.982 cv
1316.59 623.166 1315.01 636.054 1309.36 639.209 cv
1303.7 642.365 1286.74 652.229 1287.66 660.645 cv
1288.59 669.143 1311.46 666.826 1317.38 659.856 cv
1323.3 652.886 1328.43 656.306 1333.16 651.439 cv
1337.9 646.574 1334.32 627.49 1335.04 622.653 cv
cp
.8 .733333 .709804 rgb
f
1506.23 622.554 mo
1506.23 622.554 1507.95 624.086 1510.19 623.824 cv
1512.42 623.561 1519 620.799 1521.89 621.982 cv
1524.78 623.166 1526.36 636.054 1532.01 639.209 cv
1537.67 642.365 1554.63 652.229 1553.71 660.645 cv
1552.78 669.143 1529.91 666.826 1523.99 659.856 cv
1518.08 652.886 1512.95 656.306 1508.21 651.439 cv
1503.48 646.574 1506.96 627.391 1506.23 622.554 cv
cp
f
1386.18 392.581 mo
1386.18 392.581 1417.55 393.258 1454.98 391.832 cv
1456.62 396.421 li
1456.62 396.421 1428.95 401.677 1384.42 396.998 cv
1386.18 392.581 li
cp
.231373 .470588 .670588 rgb
f
1334.35 424.111 mo
1334.35 424.111 1332.08 426.432 1331.34 428.552 cv
1330.76 430.229 1328.69 432.494 1327.72 433.781 cv
1326.75 435.066 1323.16 441.053 1322.68 442.7 cv
1322.48 443.374 1322.93 447.967 1322.38 449.295 cv
1321.82 450.622 1320.36 453.179 1321.55 453.608 cv
1322.73 454.038 1324.67 452.094 1324.67 452.094 cv
1324.67 452.094 1324.25 453.332 1325.17 454.025 cv
1326.95 455.372 1328.23 454.764 1328.23 454.764 cv
1328.23 454.764 1328.63 456.303 1329.52 456.68 cv
1331.48 457.51 1332.69 456.887 1332.69 456.887 cv
1332.69 456.887 1333.41 457.849 1334.84 458.11 cv
1336.67 458.444 1337.83 457.021 1337.83 457.021 cv
1337.83 457.021 1340.02 457.958 1340.96 457.014 cv
1341.9 456.069 1342.07 454.895 1342.59 453.973 cv
1343.11 453.05 1345.49 444.145 1344.08 437.175 cv
1342.66 430.205 1346.64 424.361 1346.64 424.361 cv
1334.35 424.111 li
cp
.933333 .658824 .52549 rgb
f
1349.3 455.571 mo
1315.87 447.512 li
1317.35 441.376 li
1350.78 449.436 li
1349.3 455.571 li
cp
.819608 .752941 .729412 rgb
f
1324.56 451.199 mo
1324.56 451.199 1326.32 443.229 1328.82 441.964 cv
1331.32 440.697 1330.84 443.607 1330.84 443.607 cv
1330.84 443.607 1331.26 440.723 1333.63 440.802 cv
1336 440.881 1335.26 444.26 1335.26 444.26 cv
1335.26 444.26 1336.18 442.155 1338.46 443.088 cv
1340.73 444.02 1339.47 446.688 1339.47 446.688 cv
1339.47 446.688 1342.43 444.421 1343.26 447.343 cv
1344.66 452.275 1340.96 457.014 1340.96 457.014 cv
1340.96 457.014 1339.96 458.069 1337.83 457.021 cv
1337.83 457.021 1335.54 459.784 1332.69 456.887 cv
1332.69 456.887 1328.73 458.102 1328.23 454.764 cv
1328.23 454.764 1323.93 455.813 1324.56 451.199 cv
cp
.858824 .611765 .486275 rgb
f
1313.83 465.398 mo
1310.05 464.538 li
1308.45 464.174 1307.45 462.581 1307.81 460.981 cv
1315.84 425.729 li
1316.2 424.128 1317.79 423.125 1319.4 423.49 cv
1323.17 424.351 li
1324.78 424.715 1325.78 426.308 1325.41 427.907 cv
1317.39 463.16 li
1317.02 464.761 1315.43 465.763 1313.83 465.398 cv
cp
.929412 .854902 .827451 rgb
f
1347.25 473.458 mo
1343.48 472.597 li
1341.88 472.232 1340.87 470.64 1341.24 469.039 cv
1349.26 433.787 li
1349.63 432.187 1351.22 431.185 1352.82 431.549 cv
1356.6 432.409 li
1358.2 432.773 1359.2 434.366 1358.84 435.967 cv
1350.81 471.221 li
1350.45 472.82 1348.86 473.822 1347.25 473.458 cv
cp
f
79.4673 617.775 mo
79.4673 617.775 73.4702 627.776 69.0825 630.305 cv
64.6938 632.832 49.1992 642.987 46.5762 648.834 cv
44.7363 652.937 46.6587 657.96 62.1299 655.283 cv
77.6011 652.608 77.2246 641.306 88.4912 638.078 cv
96.0249 635.921 96.8721 634.676 96.8721 629.5 cv
96.8721 628.005 95.1533 624.359 95.7588 621.683 cv
96.3638 619.007 79.4673 617.775 79.4673 617.775 cv
cp
.556863 .309804 .227451 rgb
f
323.58 628.782 mo
323.58 628.782 329.156 637.851 333.545 640.378 cv
337.933 642.906 353.428 653.06 356.051 658.906 cv
357.892 663.01 355.967 668.033 340.497 665.356 cv
325.025 662.682 325.401 651.379 314.136 648.152 cv
306.603 645.994 305.755 644.75 305.756 639.574 cv
305.756 638.078 308.239 633.409 307.634 630.732 cv
307.028 628.057 323.58 628.782 323.58 628.782 cv
cp
f
149.799 319.227 mo
149.799 319.227 142.426 316.572 143.03 313.088 cv
143.634 309.605 158.033 282.08 161.723 278.034 cv
172.071 266.693 184.344 245.123 185.918 240.013 cv
187.492 234.906 236.497 180.124 238.686 177.4 cv
246.975 183.56 li
246.975 183.56 216.133 237.723 211.254 244.406 cv
206.376 251.09 188.619 290.998 186.778 292.499 cv
184.936 294 149.799 319.227 149.799 319.227 cv
cp
.898039 .32549 .32549 rgb
f
246.975 183.56 mo
246.975 183.56 249.922 179.08 253.138 178.806 cv
256.353 178.531 266.36 177.183 267.142 175.722 cv
267.924 174.263 266.807 173.065 265.097 173.211 cv
263.39 173.357 255.302 174.019 255.362 173.044 cv
255.899 164.498 274.965 150.781 275.037 149.282 cv
275.106 147.784 273.971 146.388 272.363 146.526 cv
272.363 146.526 263.095 150.498 253.912 157.747 cv
244.731 164.996 238.686 177.4 238.686 177.4 cv
246.975 183.56 li
cp
.556863 .309804 .227451 rgb
f
183.914 404.206 mo
183.914 404.206 180.022 411.642 178.457 413.976 cv
176.892 416.311 133.305 485.024 128.124 496.581 cv
122.857 508.327 119.724 514.4 117.231 518.931 cv
115.202 522.622 106.802 545.475 100.456 563.746 cv
94.1084 582.017 81.1655 613.564 78.9873 617.303 cv
76.8086 621.041 96.8477 621.317 96.8477 621.317 cv
96.8477 621.317 122.137 578.527 128.413 570.47 cv
134.69 562.412 141.484 548.039 143.49 538.525 cv
145.496 529.012 171.734 504.015 177.262 495.61 cv
182.363 487.855 202.633 458.911 206.134 452.72 cv
209.337 447.055 216.167 448.042 216.167 448.042 cv
221.371 412.54 li
183.914 404.206 li
cp
.980392 .631373 .27451 rgb
f
251.297 403.662 mo
251.297 403.662 254.072 411.567 255.283 414.098 cv
256.492 416.627 280.872 465.103 284.716 478.796 cv
288.134 490.969 297.208 520.884 299.347 527.115 cv
300.711 531.091 307.133 554.287 310.764 573.262 cv
314.396 592.235 323.149 623.948 324.763 627.953 cv
326.377 631.959 306.822 632.922 306.822 632.922 cv
306.822 632.922 287.159 584.856 282.115 576.003 cv
277.072 567.147 272.432 551.969 271.826 542.271 cv
271.221 532.574 250.748 501.547 245.098 494.168 cv
239.449 486.79 226.23 456.893 221.187 451.834 cv
216.143 446.774 212.915 447.169 212.915 447.169 cv
213.017 406.667 li
251.297 403.662 li
cp
f
115.506 353.406 mo
115.506 353.406 108.714 349.534 106.375 352.218 cv
104.035 354.903 91.7061 383.381 90.9009 388.755 cv
88.6445 403.825 79.6152 426.89 76.6255 431.347 cv
73.6348 435.803 62.1089 507.853 61.3779 511.248 cv
71.498 513.572 li
71.498 513.572 94.1538 455.634 96.2637 447.677 cv
98.374 439.717 118.245 400.783 118.24 398.433 cv
118.236 396.082 115.506 353.406 115.506 353.406 cv
cp
.898039 .32549 .32549 rgb
f
109.147 335.122 mo
109.147 335.122 102.353 348.903 101.037 352.119 cv
96.5107 363.176 94.166 372.744 90.9009 388.755 cv
90.9009 388.755 104.976 401.775 115.412 405.33 cv
115.412 405.33 125.802 387.381 126.882 386.824 cv
127.962 386.268 148.28 402.215 154.715 409.228 cv
159.169 414.083 160.457 435.668 162.243 438.974 cv
164.029 442.282 243.632 421.497 251.626 403.363 cv
251.626 403.363 230.252 368.713 226.921 363.745 cv
223.591 358.777 188.708 312.827 186.684 310.225 cv
184.66 307.624 189.624 287.439 189.624 287.439 cv
189.624 287.439 176.394 273.549 165.933 273.089 cv
165.933 273.089 152.033 287.193 149.673 288.806 cv
147.313 290.417 130.473 304.498 126.609 310.758 cv
122.745 317.018 109.147 335.122 109.147 335.122 cv
cp
f
71.498 513.572 mo
71.498 513.572 69.8774 518.661 71.7197 521.266 cv
73.5615 523.871 78.9038 532.293 78.2627 533.817 cv
77.6211 535.342 75.9688 535.264 74.9902 533.88 cv
74.0117 532.496 69.3584 525.963 68.6348 526.631 cv
62.291 532.502 63.7505 555.678 62.623 556.688 cv
61.4956 557.7 59.6777 557.734 58.7568 556.432 cv
58.7568 556.432 55.9385 546.889 55.7378 535.317 cv
55.5381 523.747 61.3779 511.248 61.3779 511.248 cv
71.498 513.572 li
cp
.556863 .309804 .227451 rgb
f
97.7891 326.593 mo
97.7891 326.593 106.983 330.342 110.93 336.446 cv
110.93 336.446 122.32 347.343 131.57 334.549 cv
140.82 321.757 129.013 313.827 129.013 313.827 cv
129.013 313.827 122.637 314.243 112.309 304.7 cv
101.981 295.158 97.7891 326.593 97.7891 326.593 cv
cp
f
55.499 288.376 mo
55.499 288.376 47.1792 306.979 76.3384 321.867 cv
105.497 336.754 113.029 320.456 113.655 319.444 cv
114.281 318.431 123.978 304.835 91.1523 282.441 cv
91.1523 282.441 66.6626 266.211 55.499 288.376 cv
cp
f
68.4072 317.197 mo
68.4072 317.197 65.1401 317.738 66.7734 319.735 cv
68.4072 321.732 79.3887 324.34 80.29 324.591 cv
80.29 324.591 81.3179 324.767 81.1655 324.042 cv
81.0132 323.317 68.4072 317.197 68.4072 317.197 cv
cp
f
90.6245 282.687 mo
90.6245 282.687 89.7222 279.551 92.2578 280.148 cv
94.7935 280.746 102.252 289.709 102.507 290.079 cv
102.507 290.079 103.108 290.917 102.377 291.092 cv
101.645 291.268 90.6245 282.687 90.6245 282.687 cv
cp
f
72.626 319.866 mo
77.5732 319.59 li
77.5732 319.59 70.1611 314.978 69.2607 313.857 cv
68.3604 312.736 66.168 312.484 65.5488 311.633 cv
64.9292 310.781 66.7861 288.899 85.2192 282.746 cv
85.2192 282.746 88.4834 286.771 89.7427 285.875 cv
91.0024 284.975 98.772 290.746 98.772 290.746 cv
97.7456 287.28 li
97.7456 287.28 85.2842 276.189 82.8149 274.928 cv
79.5288 273.252 65.7505 263.035 51.2261 290.457 cv
49.5625 293.595 48.7983 297.138 49.1206 300.692 cv
49.4824 304.689 50.9785 309.511 55.665 312.133 cv
61.8599 315.602 72.626 319.866 72.626 319.866 cv
cp
.262745 .262745 .262745 rgb
f
115.014 307.861 mo
115.014 307.861 118.991 321.021 102.245 327.267 cv
102.245 327.267 111.202 328.223 115.965 321.325 cv
120.729 314.426 115.014 307.861 115.014 307.861 cv
cp
.388235 .188235 .160784 rgb
f
1122.12 510.296 mo
1122.12 510.296 1144.71 531.979 1151.81 535.653 cv
1177.03 548.712 1274.67 535.038 1280.01 534.073 cv
1280.01 534.073 1279.3 525.801 1278.78 516.401 cv
1278.78 516.401 1278.1 516.4 1276.67 516.585 cv
1267.1 517.825 1228.84 522.33 1208.91 516.409 cv
1187.39 510.016 1173.34 526.142 1150.34 464.838 cv
1143.4 446.339 1117.9 504.608 1122.12 510.296 cv
cp
.211765 .282353 .411765 rgb
f
1017.38 463.498 mo
1017.38 463.498 977.662 508.674 977.426 522.937 cv
977.188 537.198 947.933 636.625 947.933 636.625 cv
964.255 642.465 li
964.255 642.465 964.455 642.125 964.962 641.206 cv
970.592 630.974 1004.82 568.036 1004.5 551.391 cv
1004.09 529.475 1011.33 529.802 1026.98 519.674 cv
1036.8 513.319 1057.87 498.851 1057.87 498.851 cv
1017.38 463.498 li
cp
f
1195.21 529.432 mo
1226.21 529.432 1276.98 526.162 1277.55 526.138 cv
1277.49 524.787 li
1276.86 524.814 1214.98 528.974 1186.5 528.382 cv
1158.35 527.797 1133.68 488.238 1133.44 487.854 cv
1132.29 488.561 li
1132.35 488.658 1138.38 498.426 1147.86 508.127 cv
1156.65 517.125 1170.17 529.117 1185.29 529.432 cv
1188.16 529.493 1191.75 529.432 1195.21 529.432 cv
cp
.384314 .501961 .737255 rgb
f
1039.96 300.755 mo
1039.96 300.755 1029.81 313.408 1028.96 332.681 cv
1028.45 344.121 1029.96 402.359 1029.96 402.359 cv
1029.96 402.359 1007.21 409.793 978.015 414.54 cv
976.79 429.803 li
976.79 429.803 1047.75 424.187 1053.4 416.829 cv
1059.05 409.472 1052.8 359.805 1052.8 359.805 cv
1052.8 359.805 1032.44 318.254 1039.96 300.755 cv
cp
.580392 .352941 .231373 rgb
f
1054.2 432.076 mo
1054.2 432.076 1023.42 453.268 1010.51 466.742 cv
1010.51 466.742 1033.67 494.607 1055.63 503.664 cv
1055.63 503.664 1070.04 490.682 1089.02 478.294 cv
1096.11 473.663 1125.76 521.528 1132.81 525.462 cv
1132.81 525.462 1154.72 515.701 1173.97 499.247 cv
1173.97 499.247 1153.85 467.022 1152.68 462.313 cv
1151.51 457.604 1150.71 455.158 1141.32 437.88 cv
1131.92 420.604 1056.55 424.828 1054.2 432.076 cv
cp
.298039 .396078 .564706 rgb
f
996.018 412.688 mo
996.018 412.688 989.222 415.843 987.27 414.832 cv
985.317 413.82 981.367 412.532 979.438 411.917 cv
977.51 411.301 972.827 407.998 970.661 408.007 cv
969.776 408.01 964.462 409.92 962.652 409.754 cv
960.843 409.588 957.2 408.862 957.161 410.236 cv
957.121 411.612 960.229 413.042 960.229 413.042 cv
960.229 413.042 958.574 412.979 958.115 414.161 cv
957.22 416.457 958.458 417.603 958.458 417.603 cv
958.458 417.603 956.778 418.505 956.684 419.555 cv
956.478 421.869 957.71 422.95 957.71 422.95 cv
957.71 422.95 956.61 424.59 957.106 425.583 cv
958.575 428.517 959.61 428.377 959.61 428.377 cv
959.61 428.377 959.369 430.968 960.874 431.654 cv
962.38 432.344 963.782 432.335 965.094 432.592 cv
966.405 432.848 978.422 431.721 986.191 428.057 cv
993.961 424.389 1001.72 424.273 1001.72 424.273 cv
996.018 412.688 li
cp
.580392 .352941 .231373 rgb
f
972.983 417.175 mo
973.371 417.012 973.76 416.649 973.968 416.224 cv
974.254 415.639 974.191 415.016 973.792 414.473 cv
972.91 413.272 969.438 412.831 969.046 412.784 cv
968.998 412.783 li
961.318 412.879 li
961.327 413.592 li
968.983 413.497 li
970.353 413.662 972.693 414.184 973.216 414.896 cv
973.456 415.225 973.493 415.565 973.326 415.908 cv
973.127 416.315 972.727 416.545 972.577 416.55 cv
972.6 417.264 li
972.722 417.26 972.853 417.229 972.983 417.175 cv
cp
.45098 .278431 .180392 rgb
f
973.626 420.779 mo
974.404 420.254 974.582 419.563 974.594 419.072 cv
974.614 418.255 974.185 417.5 973.752 417.175 cv
972.967 416.588 968.76 416.199 967.858 416.177 cv
966.578 416.145 960.559 417.491 960.305 417.55 cv
960.461 418.247 li
962.178 417.861 966.85 416.866 967.841 416.89 cv
969.215 416.927 972.839 417.385 973.323 417.746 cv
973.6 417.954 973.893 418.514 973.879 419.055 cv
973.867 419.521 973.648 419.903 973.226 420.188 cv
973.626 420.779 li
cp
f
972.531 424.367 mo
973.653 423.897 974.945 423.038 974.438 421.406 cv
973.935 419.78 971.277 420.223 969.518 420.515 cv
969.094 420.585 968.728 420.647 968.542 420.648 cv
967.56 420.662 960.348 422.094 960.042 422.155 cv
960.18 422.854 li
962.251 422.444 967.789 421.373 968.551 421.364 cv
968.791 421.36 969.163 421.298 969.635 421.22 cv
970.964 421 973.436 420.59 973.755 421.618 cv
974.086 422.676 973.383 423.378 971.334 424.038 cv
970.014 424.463 967.019 424.78 966.988 424.784 cv
966.938 424.789 li
962.384 426.628 li
962.651 427.29 li
967.112 425.489 li
967.529 425.444 970.243 425.14 971.553 424.717 cv
971.815 424.633 972.164 424.521 972.531 424.367 cv
cp
f
967.896 431.652 mo
967.871 430.938 li
966.087 431 964.881 430.714 964.23 430.495 cv
965.863 429.414 967.966 428.104 968.395 428.037 cv
969.078 427.927 971.904 427.056 972.323 425.792 cv
972.478 425.328 972.365 424.992 972.242 424.795 cv
971.914 424.263 971.199 424.143 971.119 424.132 cv
971.014 424.839 li
971.133 424.857 971.505 424.958 971.635 425.172 cv
971.657 425.208 971.726 425.322 971.645 425.567 cv
971.396 426.316 969.156 427.192 968.281 427.332 cv
967.472 427.46 963.972 429.805 963.277 430.272 cv
962.807 430.592 li
963.298 430.878 li
963.359 430.913 964.845 431.759 967.896 431.652 cv
cp
f
978.742 422.407 mo
979.07 421.773 li
976.163 420.264 973.625 416.504 973.6 416.463 cv
973.006 416.863 li
973.113 417.024 975.672 420.813 978.742 422.407 cv
cp
f
967.642 413.313 mo
968.402 412.994 969.118 412.422 969.226 412.335 cv
968.773 411.78 li
968.425 412.064 967.383 412.802 966.763 412.812 cv
966.772 413.524 li
967.046 413.522 967.347 413.437 967.642 413.313 cv
cp
f
967.871 416.015 mo
967.412 413.809 li
966.711 413.954 li
967.174 416.161 li
967.871 416.015 li
cp
f
968.479 420.373 mo
968.411 417.41 li
967.696 417.427 li
967.765 420.392 li
968.479 420.373 li
cp
f
968.319 424.237 mo
968.119 421.802 li
967.405 421.861 li
967.606 424.296 li
968.319 424.237 li
cp
f
968.153 427.259 mo
967.727 425.484 li
967.03 425.651 li
967.458 427.425 li
968.153 427.259 li
cp
f
1079.14 290.48 mo
1079.14 290.48 1099.35 293.2 1109.76 300.74 cv
1120.16 308.279 1117.48 311.4 1117.48 311.4 cv
1117.48 311.4 1117.54 316.983 1113.38 348.53 cv
1106.9 397.664 1133.93 425.658 1140.45 435.076 cv
1146.97 444.494 1062.05 451.713 1049.7 435.236 cv
1049.7 435.236 1041.1 398.609 1035.26 380.9 cv
1026.99 355.833 1016.9 340.062 1032.67 311.106 cv
1035.13 306.57 1040.08 296.582 1048.46 293.076 cv
1048.46 293.076 1048.28 300.664 1057.83 300.209 cv
1067.38 299.754 1079.14 290.48 1079.14 290.48 cv
cp
.941176 .905882 .764706 rgb
f
1036.4 230.755 mo
1036.4 230.755 1025.64 266.017 1046.83 279.301 cv
1070.77 294.306 1075.38 262.027 1076.77 255.085 cv
1078.16 248.146 1082.32 222.052 1064.06 218.956 cv
1045.8 215.858 1044.84 219.636 1036.4 230.755 cv
cp
.580392 .352941 .231373 rgb
f
1048.45 274.814 mo
1048.45 274.814 1049.57 287.683 1047.76 294.616 cv
1046.16 300.78 1038.63 310.162 1047.43 316.639 cv
1055.26 322.398 1075.94 318.343 1081.48 296.794 cv
1081.48 296.794 1083.08 290.856 1077.52 290.017 cv
1073.5 289.411 1067.19 279.316 1071.15 260.421 cv
1075.1 241.528 1048.45 274.814 1048.45 274.814 cv
cp
f
949.054 632.799 mo
946.461 637.66 li
946.461 637.66 959.074 645.507 963.23 644.881 cv
964.962 641.206 li
949.054 632.799 li
cp
.239216 .211765 .231373 rgb
f
963.298 644.775 mo
963.298 644.775 953.474 639.964 951.989 638.229 cv
950.503 636.495 947.468 634.688 945.909 635.713 cv
936.883 641.65 928.305 640.786 924.329 640.718 cv
920.354 640.649 905.352 637.045 906.194 643.662 cv
907.036 650.278 938.487 660.005 944.089 662.125 cv
949.69 664.243 956.381 666.915 958.048 665.877 cv
959.714 664.837 964.042 650.059 963.298 644.775 cv
cp
.941176 .905882 .764706 rgb
f
1052.13 279.713 mo
1062.87 280.088 1067.31 274.928 1067.5 274.709 cv
1066.87 274.187 li
1067.18 274.448 li
1066.87 274.187 li
1066.83 274.235 1062.47 279.258 1052.15 278.898 cv
1052.13 279.713 li
cp
.45098 .278431 .180392 rgb
f
1089.02 476.069 mo
1089.6 475.43 li
1089.4 475.251 1069.78 457.545 1063.51 450.196 cv
1062.85 450.756 li
1069.16 458.148 1088.82 475.89 1089.02 476.069 cv
cp
.211765 .282353 .411765 rgb
f
1086.59 473.831 mo
1086.94 473.045 li
1086.77 472.967 1069.79 465.229 1064.9 458.963 cv
1064.22 459.493 li
1069.24 465.927 1085.88 473.512 1086.59 473.831 cv
cp
f
944.85 644.273 mo
945.469 644.054 li
943.375 638.185 li
942.754 638.408 li
944.85 644.273 li
cp
.784314 .756863 .635294 rgb
f
940.968 644.737 mo
941.589 644.514 li
939.869 639.701 li
939.25 639.925 li
940.968 644.737 li
cp
f
937.413 644.918 mo
938.032 644.696 li
936.721 641.018 li
936.1 641.24 li
937.413 644.918 li
cp
f
957.735 664.462 mo
958.048 663.882 li
958.002 663.855 953.341 661.383 941.142 657.283 cv
938.918 656.538 936.33 655.741 933.59 654.898 cv
923.576 651.815 911.113 647.98 909.002 644.104 cv
908.424 644.421 li
910.663 648.532 922.739 652.249 933.395 655.526 cv
936.132 656.368 938.717 657.165 940.931 657.908 cv
953.064 661.982 957.69 664.438 957.735 664.462 cv
cp
f
1123.34 415.313 mo
1123.34 415.313 1117.58 420.896 1113.56 419.906 cv
1109.54 418.917 1105.23 419.315 1103.68 421.643 cv
1103.68 421.643 1099.14 425.735 1101.01 429.502 cv
1102.88 433.267 1097.61 438.078 1099.26 440.602 cv
1100.91 443.126 1113.36 449.911 1115.43 448.601 cv
1117.5 447.289 1127.48 429.971 1132.21 425.217 cv
1135.83 421.574 1123.34 415.313 1123.34 415.313 cv
cp
.580392 .352941 .231373 rgb
f
1105.31 298.801 mo
1105.31 298.801 1156.01 333.16 1171.44 350.762 cv
1171.44 350.762 1175.7 357.418 1161.07 383.898 cv
1146.44 410.379 1129.19 428.841 1129.19 428.841 cv
1129.19 428.841 1119.24 421.433 1119.96 419.797 cv
1120.67 418.158 1146.89 364.044 1146.48 360.523 cv
1146.07 357 1099.75 338.925 1096.86 334.048 cv
1093.98 329.167 1089.51 295.462 1105.31 298.801 cv
cp
f
1130.43 315.056 mo
1118.74 347.18 li
1118.74 347.18 1075.44 336.028 1092.1 307.885 cv
1092.1 307.885 1089.77 292.888 1103.1 297.007 cv
1108.65 298.723 1119.92 304.943 1130.43 315.056 cv
cp
.941176 .905882 .764706 rgb
f
1034.44 240.12 mo
1034.44 240.12 1048.45 238.49 1064.78 245.853 cv
1064.78 245.853 1070.86 250.763 1075.59 260.983 cv
1075.59 260.983 1092.39 219.689 1063.55 216.25 cv
1034.7 212.812 1034.44 240.12 1034.44 240.12 cv
cp
.156863 .188235 .231373 rgb
f
1065.06 244.862 mo
1065.92 241.837 1070.32 237.233 1074.63 242.433 cv
1078.93 247.633 1069.02 260.213 1066.19 256.094 cv
1063.36 251.975 1063.74 249.459 1065.06 244.862 cv
cp
.580392 .352941 .231373 rgb
f
1110.32 344.706 mo
1110.64 343.864 li
1110.45 343.791 1091.55 336.492 1090.68 323.273 cv
1089.78 323.332 li
1090.69 337.13 1109.52 344.403 1110.32 344.706 cv
cp
.776471 .74902 .631373 rgb
f
1108.01 343.661 mo
1108.49 342.895 li
1108.37 342.824 1096.82 335.564 1096.38 327.783 cv
1095.48 327.834 li
1095.94 336.083 1107.52 343.354 1108.01 343.661 cv
cp
f
1097.13 400.606 mo
1097.74 399.94 li
1082.94 386.484 1043.69 381.18 1043.29 381.127 cv
1043.17 382.021 li
1043.57 382.073 1082.54 387.34 1097.13 400.606 cv
cp
f
1090.09 395.673 mo
1090.36 394.816 li
1089.19 394.44 1061.51 385.642 1050.93 388.12 cv
1051.13 388.997 li
1061.48 386.576 1089.8 395.582 1090.09 395.673 cv
cp
f
1278.39 534.33 mo
1283.92 533.532 li
1283.92 533.532 1283.19 516.73 1282.63 515.588 cv
1276.67 516.585 li
1276.67 516.585 1278.27 533.399 1278.39 534.33 cv
cp
.239216 .211765 .231373 rgb
f
1282.3 515.643 mo
1282.3 515.643 1283.15 527.671 1282.33 530.016 cv
1281.5 532.361 1281.35 536.452 1283.27 537.118 cv
1291.52 539.979 1297.64 550.953 1299.74 554.739 cv
1301.84 558.524 1306.61 574.631 1312.39 570.232 cv
1318.17 565.836 1310.21 530.885 1309.16 524.449 cv
1308.11 518.014 1305.48 509.462 1303.43 508.856 cv
1298.57 507.429 1286.87 512.062 1282.3 515.643 cv
cp
.941176 .905882 .764706 rgb
f
1290.08 540.192 mo
1293.93 534.737 li
1293.35 534.33 li
1289.5 539.786 li
1290.08 540.192 li
cp
.784314 .756863 .635294 rgb
f
1293.3 542.146 mo
1296.46 537.67 li
1295.88 537.263 li
1292.72 541.738 li
1293.3 542.146 li
cp
f
1296 544.057 mo
1298.41 540.639 li
1297.84 540.23 li
1295.42 543.65 li
1296 544.057 li
cp
f
1311.27 569.09 mo
1312.48 556.984 1309.6 543.971 1307.7 535.357 cv
1306.74 530.988 1305.98 527.535 1306.1 525.848 cv
1306.46 520.668 1302.56 511.269 1302.39 510.869 cv
1301.74 511.143 li
1301.78 511.238 1305.75 520.786 1305.39 525.799 cv
1305.26 527.588 1306 530.911 1307.01 535.509 cv
1308.9 544.079 1311.76 557.026 1310.57 569.019 cv
1311.27 569.09 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Set of active multiethnic people training in gym.eps)
%%CreationDate: 5/2/2019 1:46 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]Mg[E@(BE!Ifg@!!]78W-n2Z1K1n&TW5S,UOctqP!/NU1EbC^9C?f+RqRuYBKuI83@?$>^"#i61o]=(0)9"$f.ZDQo+;k$
%'.<hHcgK\>rT:FfDglp1p4*&=B"RllfX@9VgL&^U+8slbrKgU#Iei(I531DO:VZo,jdWIQqVBn%?[hh4_qWd]hgP=lRton9G]WJW
%(Vd<6]X[c%?G:mep0Vb+?bcC.TC&/\?a`b%^O#kLq:g+c^\I(@jkGdCPWu_YqUOoXrpoC$s7,3_TASu[;dMZH<WDbc]:<.E5?$E'
%q;pcdqT[3e^9YecS+;,ZrJUREZf$u9q8kl!qW70PIJMF*(LOk%qrWD+1p6cEm2)D0Gk]Nk^AhsCp#!F[r/9/[^3[nF\)6&NS"E^[
%F8cdWgH4r@1=L*o[WM,IIC.`ekADr`NS?Y*Eq?W%l>;r1qH6;j^AO=!0E:_.2ui"$MpG_Do6.]lpXO1grL`f;WE),$rq9^tqWl`d
%hu2r3='sXen!$O(e?@_Xp@>V^EEqN!lPF@ZIa[bq+7V9ChYlm(=4Yo??[n'diN)hDX>Bk8`U@0.:Qs\sYJ,8Wk&9,U2a4=VNP1fe
%luq+#mG#lZod1.)U=igM?[#5bhgTEI#a^AeFS+Ht>F5?>]2uaop#bF^j.CIDPlAcXhS&dPkj4mZLAp25glBjU)1VR@mJXfrlK+L[
%"WM+c^H)gnmIjVr_6"g:I.m('F*,Egpj-i\k)G@sf5H0%^HK=#GBShH^[QH@i01p'CF?c@K+!2,d9l0_j-.6,rO)Up([p40rP^GI
%r:]Nu+8t9gZa]u0o#;a:h9-c9p89i6iE,pN\+o^k`N(Y@qFAh\p@>[NKoQQ=pTio\?<[6pV:qQUl0!eNduF<+mE][b["%gZ5MMf:
%Dfi,%2uiI>p"M-=s7l-H`LG1krpIb;0>>];r:T@lDdL)gi@hq.U\k?Y3SAV?mIp!d(Y\8pC4CQ=PAAbdS:iCngaPVa+7.:&n`jKJ
%BjOmhI&k;rJbR.,:VYm\4D):D+$JQSX)E'[s(7&#I:nc>Z^\`+a8]j\fM),5G'r&?Q\(/JZsN1?hmWD8dW&aPe]uR^^"]rEq>0d9
%e9>igh7ieo0E5]Y]_Lca9LZ^Do@]Jf^].3`M0qSdgZ&"Y7Cq$YBt3'urptVeqtej0TC]UV5Ke=cn.Fs5#(-%Jh:=CJ;YD?)n)i,C
%8WUl4)LdfdNc*cTZ];go<gU5=*bIRf[i/sW61<\.eJgC<]<B!IVjkGHqtB^WDsU_h;8LiQq%9aE8V8bI[\MM:Hc"><4ja3nhI%B%
%K0F_Sg"<Wl^oRe%"b1oGJ,4p:Y@#'@h7FJ1r6q]BJ(PRYVr]%eKQ>M@eXo!H;@8E[#@Hm<T(cG<XA:iTT"\cn&Ur/5r8.+d=Rbt&
%Tl=c1.rQ&-%sfY%XB'j$HLI1"T6a=84ZAFo]s?bd)cl5gGg(+*ou1")rmT,!]_]Zm0AaBgq*u2A%-l`aH=M-nc#:=Fp!l\ee`kd=
%2/EeA'!35J1]i(>p9J!H(OghEnF7@_'/M>g#3=*Zp4lAcH#s#JI)I\p^%grZfrdQSq8rU$YH;mGq=f'oj(G]]o?I5H++Nnn++Ifr
%b=o6Dq[$V-*N^UeP0;'`a%rIKD%->!o;p'HZ$Q"STA72n>_9u)0#/QOqG!K.'.;PZe'1Xc^s%,:$r$(b^>DrY^\g:AnO#EmT&K\%
%d=osWhp=6qGl.?DRqH?#Tl5rEG+fhFo=oeQ;)WpOrhQ([-YHX-rU7ln2)kP>TA;_[I>3/^I-c`7rjfdk*rPVGI3.eI4?kLRqBZ)O
%rpe=T+-lW)()odD=jR&*BAtn7g'$VNQM^5LSs@@-eHB;tFg&JRqqTeYqQ)m3kA@Pl0K%9^gY6DJh7&15X?D%1;1$#)qp`=HI38@A
%n*T^_J)$[jc!Jk`Fl.Q7UX+D@n,'Hj34=t9jialW*;dO$GN4-7)is%TZpARm?0p]jmW6<f5Hk!lp"B0*lSJ=(r7pg`^HN2-H"N[=
%II)hUn:0%?`cGAYeFg(9h"LF*rY_'KoZnOBp\oHBcSKt8MYQqn5L8AR2ZM]"rLNa3F(eO%RXKAZo_<h3;6oU\f')?Nc$8ZsAfp@6
%a'p,!\\sQb&rl\Qd6@Eq_*7Ve\[0VhceujTq3_\DB/W/L<I@"0ka;l7%cCk>^'$OZd6>'rrk#YcSUIA`L4)*I]7"M*4kO.i./__N
%q"UV>A05S(FE'E%O2C?!jcB+K&,5hmGPC]Xgij^+mCqEnRonp(ZU+.qO8X$AIs6)qn&AYJg[Ej%]dkuMe(nV'ai91NeAJqkF,npj
%6oH!PVKAoM2B-Urp9G2eG43GX;;?"F2]L;d7X#c?%Eh7WL^+mlG;f;Qc%<X<O$Bof@E+fprO2%&[mP)g.sT*nb@c,+l#XU'BS0rq
%O8A*dH>`!ST+h`E'6De/D)P7tp&AY&qogDWSPA8&-FHtV/_LPZYUMg&0Eofs&Z#!QqZ!8EQ!oQER4?<j$9le^f!N(OIHKdlph3i?
%K'ntd-?8^nrH"Daht3o*q,>e]\(3oNRCrNHZq&rR+gZ<6[4^@=l\>q#3u\M;2C'><HYbT2M@Gk`K;RD]R5TlhD(n,Z61s#f?*Zas
%Cp:<cGj>3dTC`SbbC@1iBiJn5b^[b&O&gi-Ye.c_ZT7*hKSlNUA^TPoXGn-r"t#*hS0FCIp3C7KjF5sVVMQWl=q_(gjIXi=-HX:M
%fegMj8N&CZ75R;RRi30n_K<is^6DLY\B?8k;tsK?ke3f9(5;?>^#QVN\iAVh//^S85Q?fs^]&S#`M]IrA#-2Mf71MNE=$u8H.lcB
%SS)-M/$of?#q]b+ph1#T/qa1s_]Kq:0L+917i+@L8(1P#[W4U80l;fJE!`_]fk9JGNl>8H3>Q^Mk[um&)LJ6bdaG;;]j$!@OPg3?
%0MHD(OiIfq9SpbEhsHM>UZ^K5m5$0HDq4F91ljiMT)@4U5;XISka9Q;UE+1VNEg@/K[r=(,/;t#J^$42DTu#3ZMe!%L!E:0hG)<V
%9fV^cM#En]Ou8g$W&QD45;WSlS#mI9lBY$]\>F?gY1[lso6d[FhjP-2:(R$8>Yi[X*P2b#BM1kQE/eQ6JsWsLf^noBH^^g_pmYe%
%drEL\DU!>b4lHos<B_djX*-hIV.uSX/)bMQgG[+BHLnS5`HLrB^@RcMdJN^n2fE#MrpmCbhmph@./4r-&tduKQjp:a-B/+p"HW1N
%14>9S^Z1@2"T4&E!8n_Oq>d;7YXJ+J9L.it44am&%DkG1E2*a75dPCWgtQQ,'q0=cc+:e^\68n"U72Y[jSF_*a-27(i-!Js.@EoF
%7-_q+h`<u7\pkQhl'm(RmrY!/l*7]Sf.$,pg(4/H3Th?0Qa=Ep&?-`k+nb("ELg7rM!SCBn**k8Vo+V,mPe=@0oX>>4:S#[LNO%N
%F!_E!EXa6L%G[M]AJkth2ES4U90(5)]Xp.gS!b/;Yr$+!e%*,4pX1$T0'Jd-XRMehh9<=rmV83LAp2%D4.D_-c$?El>cDNC40MWP
%Y>]I.Yu5;<3`[c6=)po//!d:\>dZ%5*3<CK]<llmrSe.g$Zk!g@:b1a.8(>_-EU"KY/92R/h:;gg8*TjDQ2GDBCO=GmHD+:qej!#
%5W'Z[J,tS71,sUN+[QMW83!XRok<usHI_oCk$u-tmErQ2?hEh49euD3&O,F8bN`a42#H!Qs6/jghH#-$\(0A+O$>>:n45o"HN)^o
%$oqGY:CfO?Q1CHYY5gsSomZQ3SQdQSm!786C"XuuTcCcF%=JsSFoOsXl#(cblD*E'AG4%KH:`[[kA/)Nhb3/Xc+KEjRXNaWelUE!
%l'R0Kf7*;$W7cuuqJL_(o[Ytqf<[]k?e/:e=cV$JR^51n=3j=mSU9f-rF`R9qTsQY:LqWn,5[ANk/Cgn69du]k@pTEo9o]O7h=ih
%"$"O-2t,)_(dT76i=,QGSsK>QgA91Ha(u5KI>%SpJNrfkq`VfFG7==:aKMir(%+GmR>&aJhdi,C\HhnQe!tWZ025N:%SW`GW?G'/
%cQdk/H[7Z((.=qR!/k9\Saa[9P\5c:o'o3l[Sn#d\mrOT1XPcr"%`.8h]da7!Mm>G'1/uZqlPH@k7Eg$Wb46)m]@!6j4P=3.>m^>
%5g*9U"/A$.qQMd8;\en<S*B-,dfP@'gbJNO)?$Nm)R>?ZNA7)=VHN>([*3"*BOb\a0iUgAZ*/WCWuq6(:XiG^LM*6Kr*$^4hVdY,
%2XPMCO>c^YnO$W4^;9dD*Z&h2GsMTum.YnV!T2MJBchG:g/!!\DfB^m$?"RL\m1d!!C(ik/Y)G!-X2pb^f*EW3$3*XhXdLlJGJp*
%ltb@'qp)P8&l$$Y&W\@"h$51u7tgjDr]6g2cVG-AHL-S?.]sVN`Gn9^5NL.?YCU7pF\M+Oj_]2P`n\ikbru#VE56ZYn,!USrI]`I
%Il`C,ZGq="_0M)p*(&^EBWDTuC_-%UGr)cA9uYdbDTH`EEtCKN8+5bg-3Fi\nZs(:[kmnB2a9;ameHc=iX.aHrNeY#<,Ljef$VCH
%rQYV`K+3[Xa6,?_1'@3/U%uNdr&o,,O%6YNs08m`W]&tD[E?iI/9lh;2d8"k6:S;Y1d:EH&Zr_ean4mV_YQW)n.2JUbHV!.6b`!p
%*ZlB<j(Y=2@iWtX*/\h\f($QBg,$`1*^*.,f*AJ&JU*n5HXGC&fg@^um**I$++Z%FVGDjEi4=++Lkd@Xmci]go:-/7UJIEE&b#-"
%$g]S5]o@^BWf/gTMbSee3p6H8rB8lon6ccQB8a__:MV?-UC[d<EUH"pZhHMEY&i!&P$Rh(>`:U/]<I!b7\A'HHD!]Kn#\Wb)%Bb>
%Y`JMPZ?2Mc&jEP!2G_IF?h`o>EE+fCW"Es+ff6YseS&l02UFBuddM@N['odoL$=:J-DuRE4_&#Wf6:ugD[N`J)c$CHUOR`3oZr#.
%SFp)U=hf#Gn6<j6^LQWq>=Pdp"AtKWSc+jml*^FN]BXNqK$2$,?+0":'r?l2eRPoqR5!^HiRjODHhtW=9]7)]RfBkn$@heGYJ,>Y
%T2`FW$$uFH@g_;S>meN0!>tmBhueFL!,r4[E=gEIiL&*Cc2#3CmiEN6rlC&5c.o(1CO(9Xm5=<J69RMM2T_CF_>H%<o'[sVZJZl-
%Lcf_Y=$X7s`3n&*H6:5i,Dp*o!TkSjMdm%Q#G^IO`l*oeSc9M'FA=kgA*0kVp,-T\QS`kP4$C*6U(OJV:S5\nkJu*"^Rs!fBE!Oo
%rW7!r)fF-UN+]S"@$WaqEEaIO+.i;n:q/DWXUWUJ>BAlG9(]Ha#W&1\KHDCmJ-a$i0pM\+-^;oVM!sW;57N/e!:[pLs!Geba"d,E
%R.tYpr&?&&i0_#6o/#Kcd^E@&i,]QfFd,Y2@,1pfp^M-<^ZFfHWIt0jX!Gfl+smiNLRM$=?XNa>kRdCT:$oF7)VL^0hX1PE^".)a
%[agk;k,f)pU;ssr5C`^:q"JQP8cB?Ps*K1oYP.Sf2!Md/eS]hYo+1k2]D:f'T(Qk=&@[N)hg>puHhY/JMi2gCfO(/PnR:\T&uZ?>
%jNm;OIJ)sWV]^/.na?-15NfFmrquc_gXeAK\bi3^b9nd/rT*ssVuLRm7l$Q0ISH,cs+E3-2uL)?r',Y4X$"jHs-:;!^n!7$7a>UA
%1:C]D>Z5'BDI[2cV5asBhnS)`V;6$f&FT47g/RZ%J^bZlRr88[,eJWC->A27;iq-q.0[9;I*2'G\4r_W8Fu$OF?Y0LEEgn^-En8#
%Glh/eI`K\8:YV'rEpbjgbWW:abN?7/c)rkil?fejp"Q(mIP].6<la^aRFIZg;`YMI2F56%Rij(?N.Ops]p*r::YR9TY:8`$^q#r-
%PqIX4Z7/)]a4n#OFnJr*Yh!_k!Xm;&CTX-#E]_Lp^7!XmH2,"ZrH=p0eV',<d-P?0\=*:RS#NOYV?q*1j]bYpnSVuZ[9:fX9:_5&
%p52H,DU2%6l/gsTL+AaXbl^8h;V#iiG"J.*D(7NjbI?&:#pfnaiLlb10o'o%cFu,0MVhSN=$L?$egAsj#ujT@7h9ebQF:83BFn9I
%Q\)-jDnEP2ETV.+.U+ETS#ISVCY)1bgSkM<8S]OZN.%LmP*W2)5E53-f795/[O6!h6k"Qf$*KCE0okFNGXss+>'Q_9.X"9R[i85`
%]W:^n,h_=fT:0]1q*u-g?<2QN(&>Q'9l7JG0lUTjEFQC=Cfq9M2]EktLi1HVX)&DQIKh*^0<h;-;,`DpRh>@1lJXLQ?$\@)4aLbI
%)2kC5BQ*fVmE"_H9d(QXih"?=".R#FC(?juPjI^E:#*qS#<!WXH44)nTiE5W6QOe$9QB(%bo:7.3aR$7[mWdm`^\iZH_b'p%.hjN
%s$#]h055(MS2%<1kLHZC[\.dL#"F!K$`&H\B+rQq9AL1Xc>o+d.'oV?gAm\nQr%r??jrL>/<5*=cQ$Cb]/9Sl?>SUqkbQ&`Rgjgp
%YOR(j1gMi$AQ#jLX?C2/]9ka`R0%UpH]MSOj=d58ZZS!,$$V"/1K3>B@%(4oQFWD+m8=,b\NMB!`uIte&I::"ec[lkE1SXYk#kWe
%V\8/M2&`:A(AQbRZFgZ:4p>V3ghnR#S>u8I:/,$&K#Se-C@*INoc:Wo>1lr<J]EL+n<Yq2Lp:G>d0u_gZZq^?AfhZfe2Q%k*K?TK
%DNJ$P6HV:n5sZ%7qI%WK.=dl*pO0H+#u_n/dc.0A85UA)%F\VV\8gJ'UCXkpFQa]k.<P+:XNt^6aW7tI3jG0f$NYC[^L#@eHIiG1
%!H'C0<*71u[@rk%V:r&t9c%b`YPW>1RFDp<d:$/(9Ybe8:P9*AE'A.)Po&3M1/3Z^%P"5PJ5Toa\#u(@VPQo(.usa$\7lTfj4iF6
%Wu.2sC_bjp5jP8n8i@JAT"J9c@<&OAJ47fnT=mT<fe7SOZYiO\$rX^'XjCm'I-9</fV"F&YL@GG!PF4Ug\5Sq*7?R*<X$)S:;^Vh
%.Ug6G";>o>9BU?G["!:@.ni`V1)4VQR2o6%EZ+-_HI5c.Bb^3G)<Vj&,P,di0KZnUF_G0p>t0%m!n^5lq-)U&nCSq9Q-0r]>T7=5
%<+WI73c.#Hqd[XW?!u*T^+J+#;;(:QFsAL<9sA%p`=YpVbFFs;`rqVF"^$q,ok*n:"UR!8bSP'&j*'067:`HYR6lUo+6G"\'(enZ
%4n/o,NSU[!IlV:H%24r">Kp`bo//';(.-YuR'L<2mT>i@?)A`NU-fG"*lU">]=rO9K&gX\Q"g)2fa+#.nL^7h[kUTl;eeYQW`K.Y
%WFB6)0>DF;(>u8To3lRQ;hL>2Jq>R?)nJ09!N0%_^@q/e#U%UceT/\KK,:hCF-[j)`hrs3L)Ze.2\*16Ab5"1D4I'JLh8?t'RTio
%9,]/ierm"f_9ep%Pd(jt6>MHCA@t`rf%r?F5a-qBZ9_!Q^>"J$Gue*A0C3>QHT;K_',4-[N2I`&O3EgKF_b\GQd*>+$<6L%9thE<
%9H+n0:EA>JH>o:Z,FLJo@>AIIU%W9fURP_2MlK?N7b&K+[##6uA[W<oDpkc(9JXGEiuoh@VD_d?CK-g:Rd`:TDDl>Sm9So"C+@4+
%e>bVA]i;#_8q0!N/6eO9;E".Y"OhJKNW&08-VKA*K#<g7PR]&f9I3AZ#gC,;?qeeo*L?9SRQC3)N^/K"[s@2@PI1Z_ctGaMMp7t@
%[_lG?)IoY.Uiu+4MN)TpU)c:S'-&p(4njuAndoCs>J%H?A<*'P<?'t;8#bQ!FKB3&C/`4O^GsQj4u=njM'=h+^_LU*Uh%]310cWN
%N:##@70WpK*H,TJ9qUXJL7)G$`'ng4bHjsuXBE%q[F/q<J1_&3#UV4M_hqrUrKmrcd$tGJ.!C]Uaq/:LSH-NgD"t9'0I(45C<hQ#
%RoO5Pe<?Hc:H:?.Lc,E?ZV_;9h9G(@=2B$H)%m\-(tI&r*R1k;cF,"X!7_:qNHGhG%.j['rn;aJ9NXAmnClohA]R-jZ`1h,>n$h:
%2@)9!'6LuHU'W<.]QN)L`%n='(kUSN-sHqW3%i^Y"L,cA4L`e@n+jIBANhb)#IJ?&QYG'&Y(iNGA"(NMUE8.CS-A8,mZ,iS4_D$\
%jSr^15I@:ZGrnPW61`G1#/S(nPn=Sk:KDfJdH,QEK\Pdj9L6r@"LsJo3#%>%R\j&`mP'a]R\Gje306&:C%3/E)]efZJX:Jg)ekZ%
%7"qZL4^'a&g[s;,[$t._+EqlN)K5tf:!aMV/>S)=d#B\M(U%cgYp@<02!s&&rd37b;$(7RUg1[n>U$Q[ofJ@!ciZoY)?l\k,BLr\
%2JEI&NrB@g0Gc^e8#O(/o<%UV<suo_i-/BWfdX.Z.7!53G2].5;N`2>k!7VP<G#"UChnQJ<t#sT-6adhHN&]`F&)Qu,SEUL2D5Cf
%V^@MM0Lclrb#u3k]Z[07&BfW^K7G*m#\^rh=.#IpLY#kqD:$([B(R,I]8\3PPZ\aS@lK^V$a/+I?mW$PUZTU<Q4?9XGml#E6tO\Y
%KCSF6d-L6&HJ!=2_'<`TMTA8@NG30drQ>Fe/V^))03po06[RP@R6AE@;-5PobflLJ4>tI;U8^"02N)n#^A!NI`G%$)1T\B/*iIC@
%U[a$mLAR^mEeI(>kV9M$@i:u7AL?I^h2uI$ZWImbN.nhe[*WIkCkl$tBnf-7&-^W6Zs<1)@iOB@m:FIuBUG"db+s0XSXj:dVs[.k
%!d$ktF1+imnqcN:bGutL?P@*Q`q$WLW-9+`INIi9"C1#O,oc8O('uUH>P1'0cR^/YXfe+Xp+3ld7a^/Q<Q*s3G\0@%f(\8I_&#0C
%JkKOQd4G`0ep#Ts<02Ql$_,!CE5`"to]]lQWSr8mk1Q%j`g'HLYkq['lVR)(5k-)/PT,R#NV85u2cH22`Nlc(hh"hQ!6fJns1*F]
%#&7Pm1i4:(aQ!t!KQtQ65s9blK#ETQ8U@YX#RPG[P&0[b&8*tiQW%t,8o5Y2Ps^*QadOQh#=G$4<'))=N1l1I&f*qhH.ceUmiLcW
%lC_31\/>g!J#*4.N4G74,%oRc7nji7GVEAq2hd!;'rTZf+Tb51eKn`a/>nbo0h=OZQV!&HJ#@ru%'POc5RI?6/XlS$VY")s7RHG$
%3152BhLo[tRhSt(R"/\Lk=m>Y`)[#17+So937-&4+[c(AYV_]jL>3-F:a,>AZA)u"V2\Y!O28=tm_10<Sj-\c)<Sl5!nn@P2\4:m
%)J4ENA.@^R6(5?5dR!N'h)o?Y0bc)_MV$iV?kQ@ha!sYes#Q>Z,/aqN26TFb\Y)6m(u_'BJP]eX4!(lBb?qR')TVo$2d?nrc^6%]
%m*OGg`q>4tBjP5Q@13cW1.2jUe)3N*NL!`$Q#c[W!cHGK&FV[kCG^#J*c,*p4tGWFR"O_K3];g4;WE<G_(S7\ZgPAFNAh1,`JR<f
%Rn[*\'Mm\-)o$Ctk2_F4-3Z'\iNqrN_[c,8)(2X/+\7.!pY]/BaV=eZ?sD:b`)*L-@?*UG83%lJ>c;:5fTSu.m.33c%<`E6,bAme
%ENMaLQP/-q7f?TX)0.J<!\uE\(M8'"n&h0i=,=^oerOZIcCk9d!`5E<Jda066TIFW\r8Th"1m%fN2muH4#>M<c%m&\C>K7=1AUZQ
%UN6p"(I!hgjQm/6S)0g0``3jdL>%0,0L8#HA@fYI@CI[&4.FHO%"#]<`Il9b#u(Yir<'r'DjRer3kPl2:)MUTQm^l<)qnlP&hpZI
%]QM,P:`-!b.hV>.2P$a-D%n*<CP%:`G+H)ec@Jq5>Y/6-esHcd?4-pq\l4\co4kYNo.n0GGX7@UknueN-9@Xii3Pha#1F>_k1i)E
%Rl='^Yt<'4?0n`MB:mNL-J-P=:e:?koGkUjE<ZGb2%X/1Y1)HH(,^ek2Mt:PABZaIE.n%U&=e@0VJM!T=NHZRc%ceJ_[V[<5[e`E
%R77+fpRMa]g^X?_3/3i9Xt,0/Rb"O:H`[tg7(<JtYi^#Zfm(NYY>"BCpUQg>U&b=0gFEeE7+2;)<X>.:ZNp)*N=e(#$=KABUC`_+
%#?RTpOPuftUWk!`=Jm;\;Ur/W4s:&.@jYU9P_+Yfb_C/4FV^OK=d=HsARIZgJ7]eiL@A/QU&7%Ng'4X<RgcV'&'4em1C&UL%s&*q
%Bg#p:k."Orfs%'[Z==bI+ZjDJV:9>20T.fR?2!"rSDC+Z>!k?*G_EmY)3\#ZJ-1-JTRNDcl%g$+<tS\c,j!so&4*TX,fqmpnUAS9
%q^)MNPV3.>%9:f1>Jf>U7B6i!AFEq'0uUd@?[l8,]qJ]!3&%aJ$ZMFca2j]e\`X5fi7TeE&KfJ2[OJp^8YgZR>pBefAt)N=3&!#*
%1^8%A>6oFan.UuFXpBUJn`\D0Z<&t59VZAo7/1a3"YAL#CS&o0gu#r)i3[SJRJ(7ecmI!:Z1Kn/l\Yo"oKaT%K5<:XS>qamH$:?h
%(?g^2&E5T]Kk7*^18C^?P@rPm2!/4p6.4@e#WMm]bfN_Fr%XQsHd<-\GmI712*>FhcghWT(gr``\DD`jJY4,nf%dL9([$C`,M]OW
%I@aug+daXbT/93&(Y\gM/m,`H\olj6'*ZhFbKRm3L<Ib+h)n39T6qWK7jeE/*iqiP$Z\M_.Pm#$5\+/.cgNAclN,l-$7@>2CmnDu
%#,cJIA2B/QU@N=EeuK^"hrrK3cc3b-6P=c873OOD"B(7C,bf,%0L1CJL8557,Y.0LSAZ/;D&srZ!Q/o+'Q\TI)S#&5>j+^JR)&fh
%7)kFqW`@$S)8R6\UeE`BG;k86%%'"f66e4"4Lb:a%Yo!\7`^a#5\^'=D*A3,).3[dbOP&XKLJAREE#tlf_U>ZXX0p%/C1*Q-,c5_
%m:*9(%<`eu'1g/bRaub[=<U(Z6e4A4:MkoX?"[@M[;hc#0Fjmtiho;+L-pNr;INZn^]=q]&]5ZuBFG#fV?RuCI\`k9.FC:!Yn2Qj
%4=?jG!oQu*HE)^d7faZPaM^UiO(Ym+J36rA]Ve=Jg)qDXRS:M9Zmd+enl,;WKOC3PO>?Kuh4<e/3B\uq8WPkDF2;SFl2d[n\&q+c
%Y!>Zje&0dJP]pq9eA/`6jF2pT=>;;L'\dcB9joDo;-^2a$*Z:BXg.pD'IF0td.0#hX\=h#^>,UL(Bj>O)V9+"eeu!u&clA?*7aZr
%E?ST\PV:g#H;"J"'Ve!<I%X'3;GCt2p,H=4Q1tHe#>5pJ;@G=kP6D>MD@<$@:Ku(s+"Ok?LU%MHltY4=kba2ILH2#A.bB@$^/Qtd
%=O#%qOjaO9/D&$q=jIn!>ke/FSj5\m&\]u+LH27!:^:4_F#Nj5m8d.?2'uXX@3.39<t`"iW:CYS@HLeAIiCZ6+Me+@#p**?$EJs5
%@0idP!p"Q0*ioqgR$sVfi"E\#iY2)NZuM3]3??dS&H'=a%$MOo6(tWh<#d+8Xg?D0,31eSjUCNA@jqOOlh';EKlB)OOmWl7E"<i>
%;PE3pFf;JrRo7upn'OSn&\Ik#36Y=P<QH?%.UeMnVhQ'C7GRBt^^A(7OlSt!9!GU"eeALui+uiPU]>IZ/HZ\$/l=Nia#Yk(5`JU!
%65*rM+IH38LWG9iZ=YW.R(%7Oh<7PK.^+hg;KW\c%_*mSK1/TUpM,l^k`B8!KKu,tqc^p2_6_&lH.f6SBu5AC)F$?C.M@:J_Q'o:
%,EY&XBDQnCbg`piF6CVaR<cgrnt+h3Y\^'6pp^1u!l'FD\S8sEbq.+'cI<-@n`O4M.,9"li!$a3+n^FnAh4LZ+ju9&+$O%0-9ZR.
%;_^P)GaO*/#lDHJ%DhTMWSR[76mRf+b0+RtYZ!8;.bDlMfYH8lZ;p*l/RPnsFZE-*#".]&'PgULD\^Y(Gj!&0[<4ncX2:b,&tH%\
%rKrZi)dXOM!XP01LkIqqitPiGJdkd/H7U5kKS9[4?s)P^D8Ams;ZOUgQkD7#?ru9[3$JO^i'N%3U%m3O4`odgMIhM!&`O&*6\3WZ
%,FW;,S;u'S=iqfSJUlSd">Ja_J0I:<'41C1&W72M,Pb=OSjOX,'SVFk9m"<i7]$>n5d\dbAlKJ)-Ld]g.!LC9\#.LlJ1F.*'p(6*
%dDbKu3,R"TL]qRCCiVcHYc4Nk;Q&3N#W=%>j'Jl%GQ;6+RkiR8BuInLYVURS(+i(RK=c+=D@39<;beO!d@u!lpfgj+.=dhHm$c4&
%:C,<]j5;WS'/n'Nngng&^C[Y#54_a'C:0OUhp0MXl3o@I%,&9$7gYr.'"Cn9EBHcdrDC-<^BEKU?C;k'9Fq\-&e5^Ho[\;ijK&j4
%4:3qtr(_):6)j2o2YB+J1]N?Gb>:9.R57q:^HBjD$aC=%6hUD^c@]1sEi]bA-?VliL[H3C`8'/%#qY;lg53l=*gOZ+kDImI0SK9E
%bDLlcN<,!j-81-7jPj>J!X@s>=P9q8Bgs:TbRjP7N6p,[driMkS&[3En-,:.SDF\l0.[[E(p3G=Bdl<i*EdmQig<(<_@ClY[t>AA
%$".pMGT^RQ?l),"<TdfQirGHolSO2,+JlL#@/G)?5+.Lb!*2$UT?E73>o9YD"Df=2%7UhZ#7P@_Klj[)-bR4N:_F'5%@r?+"Z@pY
%fjRJAp]4be@EPn8L3mrc2$?hZ+``*uJKBJPX<C%q@ig^eS<et("PEEi*q^;PHsejVW;puu3K`AL!(@OjT&-k12qMOMiD&fjXh&c]
%BISOpa@\58\Mq(^J2Xmu'gp]3Jl_e[pGE?RAf=UPja!D:c?\G)TfdN&!:ZQY_#esMd"TVKjo_`0@^X&LNm);]1?o^rUX(_1@;&T5
%%Q?7.O0O$;'C(tt(P$Ui:+!=b6-q*'M(>hX*<Y]Gm+p67IjcHK*XEV_L1#_&2aB`IH:#\De`Lk">_h9aXp2HV/C:5*R@saGNTl!b
%.j09U4uL/XaRnNc?"NH29Il2S7G.sD:Z+D\#f]jK"0BaGWZ2eKL/.s*2`[iFm[Us5"^QZOq9ql(cmdfl3<F80")\;E=cA'F0mm?l
%6O;p]6HU%c"H5r^i#p`K6.LZj87Pq@=#gcY?4m4iTb4=\ILHYRRf^2CFl1e1OVQ,_o&R$rEXfSu\XcS&[-s+OJ<ZBR>hYVO!o>^H
%O+?&A.a<G51LQ-)Fo>*Srqn]^]mKG7G;has^VB[<e#u"9p"Q[[)uJ(s1Ipi\S0/(^Gu_iH+VmHH@bFpjN[Z8B^haLU@WZc:M\q'k
%J-09E)+o(e#=5_]CgQYLo\,FY,b+j[2TGH9=/JgQ=AFo"deaE/RiK&50ZS0s6Q[b[?!`jF_0-QA4iD(*3)MJ##6fPmZh65!)-p[P
%;`00BL?.I"-&4aZ#rgOQJoO&;>U!kVP;>-LWt5s,6OBfAH;oG@'rO;`IC6^NeSYhU4$5`e)Pf_,!:oTob<s#qMjS8kE_,gUP2gqO
%NbdL<$r`g0B6hdadc6m(YX8[5.Yf-lf+Op4o3e#jo9bE-?.hCK=>OUY#BV6qS_psnqqJq'Zj%MA@EZSFR]>Q`g4nmEf#:O1TM%2H
%`rppZ[4e"Rg/nD2pF3l]:u&IQ0sin0n;qCDHeeZ5]enP(V.">Y>5@CQ@`<#@AFE,FU*>25L[I]*U2d#V=<9/b%Ug-MHui>*aJe1e
%nuSo%_7@Z$?K]_h)P5<K>K"TB;jSA`/SLZ&4%IeY6`'P%Q"BJj*"HI[1AaoSHDF-IHo:20/:9"8,oXDC4@"jcf>2LBq_IT;D;O3q
%I?sr<FeBR[^r#q;.j=$\/'M@<./_6<GtJSs+?gP/cdh2V#X$SaQ0Ve4@DTqZBZ>]\aY6mP;Gb05N1J2l2]DkXI&%B:D$o>t\a6c!
%+;_*Df#oqS(EG4j@FB.YFjGr_h1h[\\d%.TNs6f&iERHJJ-.pF<\g8e@]Ne[_oc95!ZXd):2Wuo:>[&+=&"2Qm@@ZA[3[SW`+@]8
%m6qmRB(=gg+97W<qaBfRm"Mb#o32'8<QJeY<!$*sCaag"%Q!*ps&;c4_r2b@M2+e4fS@*peP9+h_U!#IFf(kVRq_4tKZ7I!1M>e+
%c$H0cmjGZmj+_dnqS,2836oI)$e]qBd/_0TZY^^`R^-he0u8WQb%pbC>WS=nB4acQ/l1[2k!=r!j?@0]M-0hl!V8hl'&-ECI04PQ
%V/1*/TQB<./kq#k?]fW3=cMbi>TOP4BZCf.CaqK+o5l&P0O0UXE&O@ZZ6faj,j;[(HXXY+\jh!)Asd&G>JpSNZ_.CJ6g#!-gU+8*
%'YN1T5m;$EQ)pK<Qs38kpXL<]^j']AkP5m]N!B2TF-spFRC>3abVMC2jm&7'`HSIP<ONkN"9hc8)!f`9H(^fEit#iik"!W"&3p\T
%HIcoJSo.&Oars_do*P;F*Ch@)>,`Xp"qATV)0'V_'<](so6>?O$jYie8TE8DTQQ0Zh'+:3%O2:b.2Fg-XH=B#-V58L8O=[GdcAU!
%itY^A$U[TY`1b"6$/`(6W=C4%Un@4ug[GIbHm+*8]ul7p5.j)rqunZ$JVA.6#U(qAX01!6`G;E/QX&`rLc)W(E]"ObNK?9`a"rQ@
%6<(T;+;9f5&o35QLE;g>)64"+JES3\/=fGeLgO]fJE?tNek5%T%!e$!O96K]FWG7s'kSO"42)KgGD$5'aLE`#VODWD*8rb`qu*bD
%0bfJk_0VE_OdP0.e`l)LlZOucPEPh^MXO^35J/efU&ih?H(J!CHRT7W"-]+6#b[t2F`P)&Y=FS)*pCdEN:Jd!2UI646Tg%(YW?E`
%H([#;_G;&cm>:J[-8Z*^E>[Yg.0U"^HoLR_PiFkqa,]cHXbt:p^dQRY2Y)#B@?:g?k`Zn)l!kFC&*=e9@WHcVJEHCVXqX&4+,H^&
%9E;q)*Lp.m];1q$DK+Tt2F`a0:l-l&iG;SL-'Ql5?Ic&'Bor]pEX5Ke_'E,`nf?U*7`3A)cF6/O]Q*`YP6YpIj!fa+(RW$cW!L$j
%/H]BPM!V>)5)@?I'_W6$"<g)0XJ$d+oGS%/7PL#FPu))3!!@h@6'$/WLFb_qd9*03"bbW<8E7-9Ba0cCii(Y5%f8LsK"O$MqapZl
%k,Q2SJ7_jW?n[$I.iWQIg$c`D4L\UPe`oH'%9^08kRZ'#"I4GE+ZkQD#ul#*-WEq5^2aCOmoiC$'U'`qbK(\32'&2-eb[)9/-pN1
%aZ`%+&R%PY+u-6<i_b6(7*_I'ds2l3mDrng-V0r'(`NPuHe4WL6>Pr<*aBahnY5*0>'L^_@LCe7Up=arkNo&GgbcZ,+H22WDk^X]
%q&IKqRpa*p10"jp7)AB6EZ5<5!(](V$6^N\!CtEbTVA)6UuPj2>_p[[1+=9fX"pgikuZo#jZ1!cZ[&7%lfs8h4GE9Z,L0uG0_3M6
%'Jo1HA4f%rbfoQdNId<2CB=MDZT)4o.^$ca<ZpCX3!/#>ZDoBU$%.T6Dg-A`;WP?5h^&GYb:YI=-r_gF4I([W5>"jODcbbR.D\6$
%E%G8eU2VLu<1q.PO<_:'`hkCdQbU/W=PU%=&P-R8mFc,:SVIBV9J=HC]iG:<i[dpLN+d;&[+GsYLHSY76h$P6+N6-s/<e*o1&]+:
%XEU6`18tJ@QuG%VRb.H>onZ:Oo<MAgjh(H*2E[.$G<o9`&?$NLA;Qc,^ol/INK0r#g.C)HP`t-//=4Vl2>jPY>*\4mBU0hSq@R,V
%lLYh1R8^caZDoLW8oAkfQ7YRETh^M9HWr_Tq2s0X97r"oVCRZnJ:McJ&0SLc_$[80>'6(Re)E91lc8CkbZYhHn^CSdl"ekDA1WU+
%1r'=[=GW*X9,/hOctT`;]I]-0=%Zf]:f]j0@2[$O;!U4r[S]4Z!L<phkm2]@(o>.Ee*X_+'M8KL)>=k:9lW[r[Q0q7d%tX='ZKm!
%-:%M:/4M5J,mo!C6HOe$>#?.UH&.h4UWX!j/-Hscfe[1NE-s%$2![7.)Gl`%]e"h4"-^Ia4(/0/$NT"u8K*ZZ8n<o>7k&$4@`k]&
%M\Or%haf`E.\rbI9r`,t&lf23DM72FQQP-jKK/K1'Ej@P-!tdCkc-6tf6Ad2\>hE`"urp6FEBDG4(SqYXLB.kq!)j5^X:mKGRZ1R
%X#)/X^>!S<L,l9#a\dXZ)g"j1Ck]FBm"qHfh?VN9Mo4#(WVC5YR@QMiQfctq63q_t.5us*LXUQDiHcn[8m'P]SOR,lMR$n^6VpW8
%'f9)i:%gf&<raP;jG"nFlpQ.Xe1dgjnHTBcZeg9PCi]_r'9Ro#!LqpK+[Udq&RpE9]iVC`gV(str*'';!lc)\WH2Q'P`2ZP&29m2
%:@8^s:+m39D[,Yr(kT*t@VmrAOfq0u#3?'t)oH4L0![LO1t%R*g2rB2.Kj43^'oR*rjJ)5emYn3Z`'*(WBg_5:tO)=hO98Y+/Hj8
%JqKgPW"Jno:)pcn9Y$9"=B]?WeK%tOah/icI=<":cnr8X!a$Rt#M5faYF29J7D#Ibe*n2t^JN>M6-Em]L%CG(,+&pO3Wu3a:3.kW
%(*)jh\lMs.e6/q7OS?*iKYZufTm=*WS"!m61[t'1YamI[90.6'WXsEo!$"l)2Oo#&jE$1q^F"r%drnOf_!B)$2k_?=)L&T!Mn"_#
%K<>ib7,q^UHGoc.4p6=@(KL`<!;Tah#"nr@#BF,Na+u,u[AV"jfUbXM'ne]u;2AUKUi489XN=#q!QC`HP7`43D)LG/FWX`\:(P_T
%q_;<Q<sj&qU&g@4GJn^VO%ca-_fZHL.Q:IkB4A(V9Q'KM&9$U?3.:WY(pdV((mtFE+>`3bEm+Pm+EPdmFE1I0SUjkWA!6O)^@(ST
%W$MT4nQHLN@N8]M^<U4e6]-SfQ#q6j>_mNj=bSWIT=4kb/:[msRYiVrlpn.mUmtii.d5j\#Cf&&B7j=3d1#1H&qo4C'Z^XFr<2lG
%US6uj%N.mk';S&'QS'%+H@TNIGrQnLM(-.eP_l-idq-+re_^%_^]et'f>nR+Q4_&_W/2)\.jg=TW61\&&P\-<;jf_7G6rm\,d&Q,
%4!EoTA8S9c(jd6_9R$JiUUGsaG/cO.ks8+Xa0N9kN;GT7W_[m0EE#u^"+ccmS:*ff;YPK/*ciHU]#*at%XQad:s<6E*oGGWAg1cR
%d2V)aAMs8[&:TTO0NK'"`i;mu5iXo4\V!7m+fG,Y0i_%[+F`%b$%CsCn'umu?V4:c<EWT_&lC#1``h,:.f4/#PX0Sh;C#nSi?;0G
%!-bff)0KTt,/l%6hPYZ#Fg#&P$1_!-m($.>#q>p4!:N^DT.3]hb7L4Z<qY#F^lTL,Zlh_YjH._\f\EYT;+#=A'S=j49S=CoFDCia
%"VF#oRG<14@6T1oi]t-Bb(E7,8)A)Ddcd[`o^IJPAcaC\:fmP6Mg^,kpm5?:o';WL]R98"bKiAW1]1,m54DW,?G60qiU%Grs5`Qc
%aaF#EGAk7qip#:^btie7oCm`i+5^]or\r7G5NRhnTQfhcb'o<&Rh2lH]KA#`%]X$WX?a,mG-!LmEIl(bp;MF7P$cn!O($K=[rUUo
%L0m-e=L?+fD=,W,ob]k0F*M?G@t9Z_GNbR;pl;6]b%#gsWH"dtk".<7(cK9sHghtuiLT-F\mo+u;)K,*a,&i/_,4a`%1"a`h\4Tr
%d,1gg7<OQ8d7k_q@T$;ml?'uMe+$R5%c7W*"hGt(Nb`W`h$_JI%2S*!3Nb'_F#d?_CJdg^Q0,S;i7;%k&\i1-8?j-n?YM/Ea2!=b
%;ohOjR>A'2+?;n.8/gI2EK!FZ0);/"7X6Ub"Hb8[4s5n6"NQ#pUc&^3j!L)=`GWogq\*jW$KjOMNH#i!D?R:#mah+.K\3dXiC<Jn
%?=VnO$iIKl225TgcA=?ZEI_4/X7>W=hi$!/*tGY=;]<PT.#t@fo%L]PZU&8`FkWmO&,V7-q*#<Ij$$9*d?nlMfQO)INZp&f1IcfJ
%E,oHO)>>73]5SY*,ZYE+WJp^nT.cRjHhE9g1Qc\Oi(*8RRhN\9:!a_QYLU7h(o+*Q#UdT1P'ptj.l`LX4cLtE1!X4p[g7qj(CE-O
%0rutZlPKEWYq%+=m)>@BE*e10(s`[fj2,(10GtjiTIsiE0GHoO(NY]a9AY@0H?2_;W/J2]3X7C=M\kaI6=!:7)i4j6jE/jS^N(Lm
%:@.)P:kA"SEJ(e=c&[s&0Gg5)_3F\^\9L']-$Y>*ZU"l_]Z"-p&NIDl(/$^SU)/Q7`l#OSau1!q?&4D!D@kfHhI7B`qm`08kiRT-
%G^:Ji=GoIf60+3(BMk/DqN\@2WWG9gMo0lK^>eB3WXE)eKU?#\<f@"^@d66[N9=kLE4aE[13&kb)"R_KCI!)pmis+P6rZ;-9t.QU
%ME-K/'K]#DQ;\XB(RANl`53H$P2\AgkSkedbm@3!*6$/GMnr7!L'LE#TI:#\"1E!T0GHI,Ws(dDb+<UN+=P8(9k9t'@j,k;!ruo1
%-ROAXN5\O#])n;tR@KWq?"kj-ia!GE?m\@%*TQ>"9[#9P4U3\ri);fM[.8Lea+]hhHIYp?&q`KQX'C4s%'g<0j%;q&PX-&#0i\pd
%&b]6A,r*,Xd9RjaSDYn+6=T(XJGBj#ENPrY^<dH.=.I)rN50WhH]SiWk%^c$/mQ>:X(DYfip=id0G-N,k)QsL6^k9=O1\hFLf+'N
%!0UH?_6Unq@9TUY!F*hp`5/Db*5kMaMSG1rO-?kuIoI+@#Ijs=1%%HHIjZ"L.-8LtFJ^-l7E@S^MHSS*?8`Nm,(0q+jNKcGK)F'[
%U)ld8]3:+P80ku++HC*kiTBR;dgY8>%ME6<WE!KG#Nmd#V@i,&b$f\TahaiV!ku!Eoh7?(oKS^PK5[-`(54F$&R8\hCr7Y<`.A_7
%_rc<.oddP,)^:!94$BNsO`cGE&5:""1#>>9XEoUJC4H]<0^KjJRmAh=*Q-B`ZOGmgk_onkE"gD^:^eR[#LbgQL)[.kEk;qm6g3hS
%ob>,-q$4SeZqA#P$c>FY4f_Kh"&=[J&^8+"VZCqeKif00:ctuR$3OTp;dQiJe[MBbYR2%XZ.28m%+Kp9Lf-Be";o;Y67E<Q99d$m
%UG,sY4KT8(K*%:$qogDrgg$h(nHkEKZaE4LN:1JH/":LL,0C9KiN+/3:^Q0Pd]Q!TV.a[,O"f#7VG\1hE%,Oe$]?^EG?NG^*5oI6
%"Vs,fDYCWsmQr(Ulpi[$#2fdC_]TNI3"jA]66L*>Q]*0K&&qMGY&_.i<odGVO9_P,U@j.#(p:d-&*i(Iq:$p90IZ=75DXs>7.m2^
%hPgE+Uqp0F&G?IV@,NuKO=\]88pB72(_#8.X;d'OGZ4.liX;@;C:_gs,E'&(`>4CnTXq(RZQfc0$SSfckgWuIk!::87);f@dOS+4
%Q]>6+_5QXOo+imnnbkce*5^V>Sr+";q_./7iNo-oJl,o:b@2&QFKm7/:-@/)I\m>[@B]j/a9gI(jM3t?0&47+RI%M`J\a5EK-lt:
%2`fHW]a+7O@A/8j(cW41M[)'-7[RBt=(Yja=&E*^2=Sq2>ERMu2t4g2i`*)9^o3&8cm>WA@>C,^R"6-DDXC%)$q<gm1H@+mN>q0&
%712eM]KBU+[b6NU&S,H\+(:0S8:dHl(g=J3!i&>$\3u=m7WNBT!be<G%"17s";Y3E3[fP<VsFd\@"`I@\.Sif8e"7Shua1`B58gW
%J>%r\)^?.W?n=9f2[('QL_s5F'h(Fp7$Veh!m\N6QSSZKlC7,E_?&RV/Ct7?E;$A;ci><H/TN1nTJhL`c6U1ZgeaIZ,f").+hACX
%#?2>pSI5U?#_N-p30l;I@K:#@OM'Y-Ka0.9_^>/.JQ75@%/O?/SkN[-qVU9e[UB+e?KWBj^H_c16Zjlq,?$Pl+\qtD&qNXF&]qj;
%9RH5%r!WB))CTi[U%(Ab*L+8IT`gm5k5D-]?Oe58h^@:<pjV3#>sd`QD-/ja>dV7Ac.p2H7RYt@cd&o4g?2utf&'H?Qu(1L!\c>4
%Q9!@lVW,_Z7Ji#'QnJa!?gOScI6'!f^D%>h*o+Gj-n>t<^PN,WH[\<Y$^:iWj#D,Sq%p-IPjiZFXM:_;#C!EOMRM&le!-OLe,u)=
%$gTI&hutkKlS$O_L*TlN8S$S.anUDF5qE(>BDod[_t-O.AbZA6>SkgqEW+I/OT+eSM.$b>?iDN8=n9BBQA:e=#3deI?sB**kq>,S
%MY'73Mc>s^@SZcX[Sd/Q8:NK"R"@D`r\?o48?6h2P%U(H,3SmcjoGmR?9!FS#@Xlio,!I`<*aJBntHQd?:]QE%V!6sr?Y-q<4,$g
%9*rZ:L%Ue1$F])u^Q]:](p(K6Y^5?PqFeD)*s3ee79l'g?]4WEnO7$uc`Fn*e7i5Lm4Z@I9#g\NSBZVm(YW4M<>7rS_6X=P,pB$L
%qMWV?Zr,\Jo67Vk\95r$*nK)^pkoNbQK$-_Mg,dp39Yf/p/2of1]HB6Pd\1Xrm'bf*e_9a3KbQ\IZ]pe::#Gsr?</Z^#Qb!IQ6t3
%Z2I!SB)2ngn&Q!Y$a*hB`5q.A^QCUg1B!r+^%I$@QgqWGHR=%]hgq;!SmT2j6,#YWb:XbUe'g3q7FBEhcgPC]VN^p%'#q_UPPjE%
%XQD=Z04[N$]Spgg!fY)Z__5.g[rs(m9q)g)"i2jEo,LhoZ,Z&W(<\MO0D-7*Z@h,&/^LB'1]4P`n='g'0>mRu/:q5XLWLA9^D&X^
%n3QQE'N"+Ri)_q-R2<[mZT)?0\.JStWG254_(Q1UY`K++0A]+@WFpfiDGPhn6nnO*j)a?B__9buFb==a?V7TA42ik2a:[kNMI-XV
%]spo:65n(`]-^q;@MKTl'Q?RR1W;#pRfi^O`@n]EBo6=,rr<f:X;)P3?f=$4I_kQt_cRc@*5<r$M(UX"O>=!O1qs(g'[(D=%FVbL
%r'Er=A<?^eJ<`8gIOX385A-9hk]5&e43Oi$@@2DGr$&1:*HkleKp5>"Yl$gQ;O1_dV1=j!B:`I%XXSkbQPX*7VXs^P^l"HdcS,$s
%^fprfY:;o$l)_&\IBS82c`]6*gWSUP`BH[pe:Zp#W:&Zp]Ecb9Z/25P(<3+1nZpXAniMX$RHBi6-(;cZ9>l'P*^S@H%Gq*mbHE&J
%=nrP:8[tf7m!rL>?0L_bb:a;ibu:P9772>G_.e?q.A.b81qsS0o+a*sOSJD.1r#8/5&d4k9l'V4BDLYsa>=bc^VKfoks]Orb:d1$
%el]0SEj\r^fEq(U!\mVuU%ouq$eUbQq8J2jljK+d1kqA?/hFbfkrX6sZi"9g$/cXO^T%#]U0!XfQ3i7K'!rQ#90mNejd3tK.;-pW
%^Qd0t$^P-kr%VaS]k@&2>QUkW9lTl[k#^UV\Lj7WkZqYsS`X"k@.%*b?V4b:"jJ^':4RN7r'J21lU(3d'`JYfJOjl@-_(^9?O;%l
%der*Rb]!g305$-O4DAtIm;TqO")s#p+"C0?jHk/?S/-`1'\(dYQ0/t+bnHW^Jn/Pe4]m/Wkann]8U_i<S;haV(hS"\nI*u(XNWK<
%0/k1V(n%)1h7:;u(jql;?0Qe3^(LdKFmMlMlb'p`=L]AV^G:;/D9HL@3l9)KC>\f8VY4:NVtM.F3X9:NG\gNZFCt76?;%sA'&.NT
%qYJf"WGdT_daoP3\-])**?5#='D`1l]+76cZ$E4bi;gb5BJ+D@_lKJ`c55)$qC^EJa/39m+nP*8\P[>AG/jRfPqP*686'nHng1DR
%/W7]:hc!fC^'JmL6!S)N+iL#a(12I0L^=]$7)[4<Hfjfd6p-C-M<R4B^l]'6$=CfkF1O.%mVY`%JM6.-pkj^>\&Z2nBDu5aEp^1a
%qHduOKN)9^p[222Jhq[*AYM1s.N@PYJ'=SR"e/E=^30m@$/Vqm[mf)1jD*u1H$d@feoSIOp(HqPEaEDG7ClT**/aBA\V8J8SA!_P
%Q3Fdmlp^lg!&M,@p>S(fp;&m*p@;Y-C$'fV]DIOQf1QH/@%be]]e">ZH?-;tQGd4%3EPZhOV:a`g:>_$H=Jo(D,"m1klna*j$18I
%6TUA#Nn=Ep9[X;"RYjT5TIHch.!hF^lpB&ll45TD8R^X0bh(e9%0DY"4n!>Bi1T6:\=]U&cHZg3@;,0=3U]ouH#`GmFlg=X?9B7c
%ccj$pk/=pjb97\hJV[r(rliMHSSTZEH/[(0s+#/h&_aAS_%'@L8-PG_5`@+UG*):C;/s&#doN@(S74KKfH@tfAWckIRiP!1;L9bP
%`Bm)F*2L5$7Z1q"=]@CD5C]BfKu\mX@8QOcR5Q)IgO*S_+C-C@Bj]ePK9B<5L$4I9#j+2W?RU2dFV0kN&248'Pe7^7h"sde9,!9q
%n!(J\U#<A!:<EC)On,aCQTlW>0*?@D)Ac"P8t#?r8m[5?8m`">%*F^0s%LPXO:*V2T]@D5"tqW%hW[]?(Ih`D3Sj[BjB\p"'XApo
%7b@.HaK$mIA`S(IdH_&'$6AQ?)sS_ikenRZa;_Cr+QR+a,G+<iaNNc^L1_(g1:R=f/I6V>*+:W$9ZXiI8gi]]Gf1:(6Jc5$M_cOF
%=fU\NLDGK'QP:=>?hnr'YcgYMMn4P2aLNrfhLc$nbf<B+,8Tq0itWA7)iKan4\;")_T.T2'Y'u*aGUZ]o#Rg(GA>ls$QC`a<R(hE
%h$8!Z.u3-u,Q%I.B.dN1;HS#"A@t7WC27\:=[:?*E:HOkVI74RGo`$A7@@c]]f=>K]F"kK'#oj-[b.WTCqP^9j`I?Z7@XV.9<dpr
%=)UCEbJKB(Y?\_8`oTV$I0;Ehe5KGng4b7tZD*4N_Xb:ieHQ=upM"X+i!$iT"B,XqFQY:d#2UC?X.9QA]C4Ger4BXh]rhk]6uY[V
%IqITW7N>766,'tK^>.-\h^(;HgooMFi--A6M0&-;!33K9W-:f=eZZp'HgI[ShVFa]S06YD4i_g+ga*_)7(c4]@t0ZCWdekoeO6ie
%@GKtaeO\:Pi@aHFdo_"0eNmLX\m7W'Am]AdfK0_%Os&K_MeL:0aEHNt,.eUq]5S&L0c/@m^&tHc@G1naL&2WFd4R@J8n7DXJetk%
%8TmrNMH">0lo*@Z/qRB%Dub4!nEWEngV2loJ_k+C0:#k9Hf3@XaE8GS8TSn;2Jk?u3l`:h>`!T#7SeiOPCLr(LND[d\u;PN>l2aF
%$c3BkmGaqQc$'=$:0gg$JOfQ'W='jnBgJ^+ZT8EO*Q.rhaI,j@@!?"*SPL'$c0k58YZS]=:pbSp6%4I\S[0q,?+<BA[m?mLMHXOH
%/mQ!:h4pXkS\?aU0^/Y@9Qn**P:hBi#hK<D0&Y:LkCZ8@n7tGfc8<+`dgd/Ll(R\kdDbjid3?tL4od5Q,e=St%h@FS)#ans/nu3e
%`]AhAF>CgCd%)4B^(BKP)*s)2*\hK7Et8uQ@a;OrkYd:p*sB03bbfY<!aWgmZNe4]TZ]LH&S2@T>qGj]p]Z:fMEN?4%(aKup*f'E
%SJW'P/6G0]og5?F$3l5iS3iRQ=mj)n'Y6mOf6X:?V1HWl4o/"Wa>Kfbp.W.:G"4OY#:@ih*d+u5kg%g2hALDIlRa1?Ud9TT5<5M,
%J\RVu'=[1HkDTkaS37\O0o9rpcXkX=<BQAu\^O2qK+V0N3B&Q$k$6G)[!XnG]65p<)r.toId'Ot9*=#[&JYYi>N07^22M!Y]]MP2
%bBRG\rOW:97hHp4M@>C7m(F(?_br2OW[qh\Rmil@$/'h]e@@[DP9d)Jq;*eQSN:tC^JO)KN(gebVp89go9bFsQ`7>A0&%$Md,n);
%;!1.F'\/r'V6):@gf*SdN%>g'_46G95PG<j>VQ^:,3h=YF88Y/0&kY#]0ZX?0'a7F@P>[1P]Ee-rn(K+3,pS$*+mfV31%(IBQC`/
%IQ(5Y2\uNZh1[hTN[^RUR<&\KJ0u5Y\PsFk?\rjgVkW.%3#;[eb@_CL.bRtePrP-.*9dAEc;jEuVa[/7bQ&UT6Cgc4'G`PcFY3f=
%!J<F7)25M+WH/BR5SP]HF"&N3b2''F,2/;A(F_L)G`-,1PfFNW\N$=/-2p3#$W%$PMF!cUbT@l](ib,\.46<FcWpr*cIYpt1.YX.
%]X^SHE1gH\F!5*Q:Sp0DQY:jREA"Ob$p7gOF%Q65T/DFG+^c]SLiY"q]lG:A,nX$T`*.*b1*aV3E8k,oa'tYsEGcsO]9YmUMe_28
%#)>)Gi#_@nAtFg"PsjBL,0o:k2d$UD3N5!_g4_L&;VfWTF&QdZK&jk\'YqVu&EcAPS6Z]hnh@M('Ber/am!1D(*I#Q(q4\f13>6Z
%Y<e_k";gL]6gEaC\3+7?_2=]fShB+sSr6Q#@qP&2m+tO"k8o42H1$h"H#<tDZlm\SZ$G<R9m'gM\Lb%@(DO6e9W2YMK**PniKQ3t
%$&ra>gmMQpAP0$PJ9_iPE6q[/5Z@V>6?g_DbMU1P][5f(;%1o,BQKR^e<[/o[V%6C4432RST3[>6/#QP/HI\[2O@@co@iB`6Rn'#
%kKUtI1'e)&/d/P<0"e`V&fDY,\J4i,[6d\U^c_L^31%l!"42mGRIlL.VC[;(q_$V>i`pT5i`/:79+lo\h.).Mb$Luj+jMBu+cFEJ
%;`m,Rn7'\^nDi),=6<bD>HAkI";]>U/`p;1Qlj'skOOMkUC?9i!reQ/&*@+fKOR$!F(pal-0rL[Zros/'?%G7`K:;]7%ClBM`@%R
%eas;feWFMuZG0\$F!9,uEoL=0Qr./-\NE9]XCpNtMV1ooS1Ea0iDdDJZcH$s=6<b>!1=$$k$0$/`/tchZP58h=6a#pL"Z)aS]g:p
%,,^qEQSX0\I\tDea-."l%*j\P@pFTnDseck.O4@Uiqqnr_>(!(r[4rL=d;GDNY?32$M)Xic%V9U0.f/)&M?P[qa-^_.u(;GF*HT`
%(Lc`.q>Z^5f7[Gr\/Hm5GVCZ.Cq1cKWB?C+_Ah:VkB,9X"]MSA=0G<..$?tqKVL-'K8LLPHkWK\FQ\?*(T;@.'KAl@_J1JO%K]ff
%!-=4R1J9?RJ?&oH/n0@c=;8<E+@*'UKcq6<oYS9d7?EGrPFFmr+;`p4=a&cE-.B*CNM+;q`ZANGolP]oe'C!n\M4IZ]Wnn1gqA6p
%bM9lE36B?lil2.0#Xh\@[KQ[AeClo;DV;SFqO&'7VFH<4iM=!=M/Oo&',Le(FW4+)ED$mM@56aCn.*0b<<WF)i_roF>Y(!7$pIp$
%#B9CULKfWoTY8e4(@48I7>?`E/?6Kp`#o;&QKXS@[rN8.`IuDGgFS6g(X>6:%F.)GLj.@$"W);>>+h,r!8IB?SsC#r+bX7j#RXh,
%1eGjL+cB'aSmD\A;7+H:F8fBA-,?^(qHMl50Z;9'[m8#FmM)I#H%7da#Rg')(mE`?r_+2aE%<_\c?tO*fYr0k^%Ch]HAg:cAFrI)
%P@+OR/^>NGa-lH5Yak&agTa9_>BK9rphkX,b9DU&k\fpJjOSI^>;Q@nOiK^!U.j:!n8NC[f+WEU1Bbppf<L]\RFr\L8otFa/=YS.
%NEYV?\RiW">L&dBDRks"WJfh\'uW/RD=K+D$caiLLKWu169ek]VH/?.(=?Heg^CqM.65g]r3kCt"8E[V^@8gqEFlV5&-^6CD@;1/
%eCOi4/aejnlZQFmLfsm+&BqR:\ah/,fG530oa.`P+VB6'33+Wu:G@]se/#.d=QkIf(.'8cK$kF)QjD7JUFg`+HV[^4gRtJO6<egB
%`JYD`i[^Z7(Hu%[$#J.bZRrdV,FkV7V%cncB/3]@4L+l[FX/pn\%JYU;,`1*G[[mh[0+;<4na=:5!O:.OX],`Q,OO79^)4YZ,LqV
%YQTe7^8&4#_I8q7C:+k3D=moT#2;W?o7XmpGnhtUF8ki#HTUG,0lRGN34%5*OH*^J\RFT1^=9]/&TNCoGN#]q/@/+WF_t\=lG6^5
%AN%OAin>_?TuC6*Hpr23=q$:WY,o$`qlcnd>!"^4&'e@[R=+*PAM(D=89aN][0TM35:q)7hEBD8@]L6lB9C_fa6,E`D>&:S.p&h^
%1=11qW`k1o/uDhC)E]=Gjjopoi2P8<Z<1l//("tGQ<H\fkD>uMj-CWN3(GPD533)>D39ek%(4d?mNAH>m;o=0ITg,Dp:f0niHmEK
%G:[c<PX00N.64O'6*6'7[W2&f'\'Kl'3QH'Tr-Y]8OP0OVkun5dPpP/\n,A#YftFGRhjCuEIEn@lVF#J.d'$BcS5@WD/\W;9]ujC
%/^OhA6:"<b9NAo&M\I(s__/m7E9q"@"YVGW`*pjo/T(+U_[@tH'\!g\e@?5>1PT3gKC<*\5(&EW7EZC([)c/I"WE'$jCR$1Q&iA!
%6"^=s5tM6>(c8Rl;=Q3j5t3r!-s/eAf,IbC;pg3pa3e?$'.nl>1kLR-q?@:%6jq^D.*`22/L'@s,(bObAO)3DV6p[DK:3Shg+cRE
%'dU0(IEc/dm@J1-:s^D:2c[:Pi=;];K:RQO^0_.Z6Q#a-h3h/n=111Fb_:H\TMYno>W@n*Qf+H@hp9fY+UmMdmU<.=T']9@ET*Gl
%Cpo4[<WV&(4!e!A]-D_WUpJl91Ch^`mZ<rHR)MlT3pDGUK=$ouM`Th`E,PC-Rfu\CW)XYo/>@>W]14To_=++_dRHc-+KZ%-lu4/@
%@%/1Nhbp]'%c9SM68gp\;g,=s&L^DPRZ4uHR;"Q=P(I@j%,VC?G\2^U5HZiL_\8i^1-:EZI"GlEUpaFrl%<K3_H[kq/5I101!H@]
%#?0\M0KY>dj;<CmI;e"q?C#.T\R!m"6-+^5;io0tYMNL=Z><7mhr^St*DVk;`3RI9W8uEQAaq>,cM9dW)uRO1<>Np!;TU&H7Hk8>
%'JH8f#XOVt4L;_#PnB7da#2/$Z6N89:+/2gjpCb6R.1tN=b&KN<\$)]&c%OHM!``\i%A9?TMm#Y?q?FHR0Sj*n^2bKiK4;KaL8"!
%7[?^mD&b+4h%:kJ'%mc5^R$4(j:5Kq*s[M$#t2aV@?B:W@IEAfOG2:Y$H&Nu?%Okflld("m-aL)Mo2pb5_bgYA;RPL@I?d]\n4`5
%+]!Q\.CPQnKe0J$D3+(l@*)3B,BWoe\1lT'P",im.Ag)B@_DOC2FM1-JUjTE(\1[)B`d%q\7:Y,,?qZVa7eFE^/2ioTuen=S2lma
%<S(*HTd;d3&^/s]I%W['GRG)3<jU.SM`2DXMZRp3g=V;@@`h3!6Vt)"J5[/6[O_9dZkYJgAGdu<@nFcsbG'rDC<\m=i:bT[Pd0,*
%17$[91%tpLC[0P\_8Z4.&nqSpjnJs$LL_l;Qk`eIoTuJbJi=A/=XH)u(:P-$h8#>X;Y0,Q7X&mCV$W+7]kJ9$iV^7S6(Piabg$8c
%9].@2a@L1+.7sRfVGf`W17SUkhWF&r-[Jj-\h%lo+qu)6,dlBW#8c!]ZLj9g!/48W:7T6'O2VI)Y3^LrK,Q2o;r:4lP8"d,6K71E
%]u="Cg,tmX/WpW`k=M0Y3(hF':E^mL!7Sd>$42lY:8^#<2On(3ThIuRQGDV$b1X/d,m*"7mD@4thf<TR%'LS1?`/'9/fS=!W(,<$
%_Kc.c5c$jr("k#k&?rZ;q]1$j&q2G,J_lH60(*9]3t5Cs(M_=QH.fFV2(<"F+VVOjE$m6p9,fg@h(:_G03P<k9EtlY*5A8Fo>\qo
%Fe1R$i,>pl!E[tU*sN4b`?%k2O:dX=b2Tdb=OA]hI">$_1K&`?2gq^]rQLP)MqStb'jllBS7poifkma^X;=kkI!gV%7kf6tM[@6S
%fi<"WYf?lP"Dli:m2E5/![7)I7Wu9h3P'-1Nn2bSAKB`47"I@*_cWZZXf$lXaDEm]rrS%O9"4n#?BF6ASkFum!RmBa3]c-dZ)cdm
%@tWV=3:j\.@NWZ)\n-+'9j:h3P!spX\$_g_XkS%._rMskNP\ja+q`>;3R]/u^$@rQKi-2&-/XtT3mK;Sr@XQ`#9*^jLbn2<2bK?G
%e]L[kLkSqj5B>-AN9XF:GUIB98j#uC.A)0)n'-b0\5B/IPCStEg@njNY't7rMHS[8<&qr-#7r\HE5T5s,IfR$C6)l5LiRI8FlMMp
%!a[uc><(O^gt%M`)HE+g'FHc)B3'7FLlupN;BI%rO,YjsbQ@57</&)%d;G$#DZ`ui3)^%lVrV@^EbcdW6n?hVEFhSde@ak`@+H4b
%%"0L.%q!e#U2?o4-]p:>cVm,LSEK5AlcPhh[h,=N)2=/XgOJ-aJTFR;VFLu+9ViR'/X,')r\D$j^pc%^D["3i*;^Yl"C?F\#ssHY
%[:'<4pneY'[1HG!D!o.Fj2F&9:fJ$JP?*3p-t_`K^fk2-+@2A:P+g,C17?5CeEjOf^ljh)"PsfkU-U`^r&k>s-qR%)\h4(j(#Pd5
%p5juaK?CA?q?QDk$o'5g%P7r@1Ke6ta&bD+()aF(ljdp1Uo]h#eX^)eQP]gO(Lo;*`-<PoQ`1.Hlcdf0A9:U([:-qj-A:0<#M0q:
%Ur'Vf@AgIEMCD*("Qu/9M&aUK\iqqC#@K7+65CMjYP?oY([:J#og=bXZ)_NQc(nIhQnSTsc@FZDNb@Di![3:A6+2Z_"1!:]P#bAe
%Qo9A#a2=g*KH!G>(;QqK6K/:[^jIgGGdTg=OYKe#22I7-6JhVL=>uQ`4Gu-e"bHqUE`/+d\9Bh;Otnj@M)$)X,6$i43^m%LI>?hA
%.q^%o/G>:@(p$6SeR?TW4Lds=[q4E+S)6BWSIgEO/F>`QKjZ#A'EVFL5inUiR=r]uMTPYo$*3+%"%%>D'&(ApoQkLle@X-@:YMI7
%<'06BF.Z6G#dubj(+!jB2;bZM*Jg)b0G`2A`F9WWZ8K#'lq7m^mp[uGZJ[nqUn$VVE7q]R@i],0,5h*=hL(st/B?&iK+dB!8Q5mV
%FY33\dd4Oh2`g&lAVu9X&Ie.G."&Z/*S=0*+;P,BG"66%)'_*DRa\C1,XWi*bE`nM#UU6eT,,%j_ZR*tL9pXb=5YeN$gb=BmPNSh
%I<(OZid8[Eh^j]***WuPY*m8/,IlLtH.192KX*k[MBAG3ro43uCBl^Z*JTk<<$=5D#g0smEM^1N6S5o_Hk42mq)jnrVM'DC+"D<i
%p9!&^CriqcVs6-1$,>^GWqbZK5=7NIC1Aqgg>P!_fK!UUeJ2>k4Z6MpEhF;ZHd:q#>RhAEE3N>Z2BsgsCop'QaaICLj4Rg[ql-(C
%MB%^sC?9AB\`HSq!)kW8QaL/eD;cOo'CK?4?@psoMe/@D5`c0l(=:Y(!8YV;3l;'iP#/o3$KCPS6GsF%5NY[7@6NuF'NJf4:FqHW
%s&cV:gRbCm?""N+ZA]/LVj4"uTgG.^"&-r5!d9F`_l@a_a+;l-Oc*e3n[P\aCsP$-_R63uI=<>57@Sq>;6i%k"!K"]29V-\!`#:k
%2+VJG>Yc$>]!b?G*$`AGOhMcp-R:tfJW$+>j,h^?+X7ub.UU"f%?$>[)FqU5NPQ]&>+P#&U)5!E2q>PDU(p*;\G$$]5e(MNG_a/%
%KU:,Q3&E=@TY)_lbpi19&Vc8Gic.g1p896,?9:dJg+,t>AP'm*`-,8$!ThZ\5BV1@8a(aKJq>-ZR*V[4Os72*5BD[pIZSPU7R=6l
%6`O=ngl-?3&,`['NW\*)URfrT3(np[nM<PdS<04FKtIS$5<\0eHGK^dX2FhA$V7$uR^KIphhNb@[7Qb4Q"[RK&.!O:+.I0B#d51n
%P7T+c"(HX$W<Y;A9"B2Wl.]c`F)H)!pWZ[u]:_Y)/I9KV)X9`X&!]Z[rc-Dd>7hM.]ENq,?(:iTW([:G:/c$)?8dM?#:i2%EBm!@
%6u4PI$-6[#22R5`H$DsZ<#-ABe@Ki$Kl]Ue?FsrF.G6H2:bYL,+&6CWML7%s<(l4s'iu4Shh/uYfkm5A>dV[5aDdI"6MRp$`V(u=
%P@NQKb0[(&Z]eT;fMkoE+(EbgOCKX`/IVoD@u?CBQ&1_La<=\=`rY*O+uH3"K@b<+j]EKo[`dCZO3.!9W[]?'!g5dSpdh.HaLG[K
%GT\9q4kKF;q:>ht<KMDk,<-ok15Z;M.ZK:]OHu:3%tr":alYCW7B8koWNXYXk__@Z+PsEfgr(=)pa>\F,Yi2A%s+9j#D_F':m0n?
%gEk8<c_;#'(XK]WEP)tTgc\_l3bXdI^^kGZ6X15=`[i#mCe5uqd7mS!Qr2T4W<uU\F\qCX$^PEA)tWl6ipfqJ'[:P4!0oP<AUfHA
%H?+t6P8*,X1`YCo%1_hMmp^(T!#]6NqY"WmfL9h(B/2Q.>K3C'r*f7"4<23A>jd)aC;!jl[Z[][Js9CEK34$@)VPJ-N$E?Mkq8hF
%BI<p+!Lk;QGEDrZJCT\pe7\o>)2Ytq8\@4TORt[LUuS\1FWq,O1=;>r2[25I"*/QT(%8t<.\a.P?hBq_,O7H'*(,+S:%`LoGUqRW
%p]gJ?MAiEhLdbdh[ij?r=)O'3"G@m0.6]\+=F7gu-d_#k-iWdbfLuC,Qe5:Ibu\b5C#Me^L8AUh^k$t/T[]qBL>eC8NUem=g^d]:
%4^g*\J:Nj#%teEP.(0dZ_\DFG:*lSn+"CuDk$4I;!nbOSF>3q:8as/HM29r'-EJ-U\Es*CAMT><WZl#,@+5/r5cTVt`.Mp5H*A3V
%m,1S\^]gZ-Ai`\_!=CRANP#s1:Irt>\0]:o,maQS-JTBcU\_E*N7g-3DkpV+.Odl'1Glk@M(u-BPE,cq#elK"SIr%ldRjdk=SiZ8
%IM(!/_]'5SC%41V-R=(?e2ZT:S4WJkUl6#Y3$=&#&_m9Hck]7)*Y3O#9H6J_;(t#I\Y>'oOtTi%jrV$#"Ln+rA?]s;4'4:^$Jm6T
%A%B?*B0XM<f<,`X>7!TO*%H/2-F4@2>gEFW,!cpElEWsb!FGnA,h#M$0\.g483GMcGX"am@tQJ`]%!]9"1'.],)/ugc=_mpAgL%Z
%mAr68"#QRjr?^-ffis?r')1MDMLrSOOrR=i%M\>Z#CXGuK9^B/J\fsH``4bJG0FcY4&Z5K'sG99@d8S]"7pJSkfg]Z&3'<upt2$o
%&%51)'GluDa2mmP<SIS>P-]5P1!,,/)4H*[$b4d-]nt2"$NW5%k#-Z\mP$B&l`@pj)^8`tDt4Df5d;;u.Ks#m`M;Y,%GiV=27a9.
%:ciaQ`0">g:U?!bEGR.&fF2atj$73K0r@AZZo.4Pi&s,LS)ih]Ch1mpO#X!eIPar&plpMlX+]Vq,bh<lB=&#ULI4BgH+CsV&V+ZO
%#On,&_=`\FS:,<"hLcYX*(.FED"r8YquMs.%D[qiF9'nNB(I&ZJhGofhb):f'AfWcpgXGVBe<l$WcsL7pT=\%l&J9fW&WP6@cV5"
%fXc]u6>A9Z]qAoPL`r(\15+Q,KVEflXueD4"0gUqenr4MS*sV-5XgD^2LMQDH5jCT2(02G%?1EDi@G\,3XKmX9"#J>^/1OKp/M>?
%@@)![[$-gXTa)hs!-ubRV,?F?Q;t.tjMD`V^sb%G#t^EPi;3W9q0@p';aVM:1O$YjO-X:bSDj0A$Q:772CfgO0fcTik'@;?<Kgp=
%3Y08E(//9QN`3?&cP.6n?JD;n;p7[llsc'F.[9X**@2&tD^OU#.-`N:+mp+-,?l!V:KWW.o)Mg]lPDl>1nUFGO?1L1YZkO:k$q1I
%B@!8Rg\YSi%'^4^qifhd'd,N')e;BnR>o4Zk/B"bQqZ*a.#q#rjLAuHl2`.][3en_7q-P0*.*lHmikBi[\L1b@(DpL7?`HeSGO8Q
%\0_@oDL(_pkN4a(.'%r=$AR>(,pXa0]BA"@4"0>+`B94p!DL+kb6im9BP&=K'#EM4"/"/D6?AepM'Hn^AkK3.[Hj\+0B2&#?lc2h
%-b#3i%tfRBS&/%X;@jK"dJ#=(Oo8qNU@5+DFD[Us6eK-MJruSd]DFKLODr%r+hc4^bUkolJ7U'40U-M3'hFucH,KUA/E'RcE2mS3
%6_?!jCOn'n?%Y@I]e7@M+5[`,+admI)cMIoK#.j,IQo*`63%'Vrr+m]f4Z:CTN%.2o86EG$<BD.@XNf1+@6Xq&m\%SSkTjF&HJc:
%N!Y<ZG/&C/KbA@$*X=HY`p3#@;igdSbqXYIf/(94@UBZ9/&!oF<9T<_+Ds60kAfErif!m\V%SLC!\a\P`IG@mcCBf(O#i</pcT"U
%TcfO,]QKcNm;uV,R!4NfcR!"!IPEGpi[XRLWL+VHNT=DJ0,9[fj-6<>RPd`!*>0M"*mEW^S@R*D,!LF40Fcon),]_UNtVj.4A$m\
%*f`OOA-M0%BQ=u7RbF?i8U,to:`-_T5qnN16Yr4u+[n/JDUBLo&_`qsT9mN1KG?0c"=VZlc[rM8qII9@W^$oKZ3*jT2(G`ASlpHN
%-s=).[#S)=(X+;OI$."%k]'T)Kko4-;2&:H)3R<UN;GCbM;&`HA(5g@SfJs<A@uLfiYsVSXBTS:9jr3t\^TsKJ1WVKROjpuJA>I)
%0b_5\"s%L22AN/lQk#:"51Oj25iQVL2utXN/`jl/e`T5=cE6N?C_:#Q+H;k61I1*a`+a(VNSRt4@SQ<_$\?q@FOuQd'PI$R"N@Mf
%2I+QYM[O"Vmgq:Q!eH"^n,#57IbHi(NsuS\Bqa+0U]`1L#OhIll.!G]>:K;;cX!;3))p7ml)[`KU/to\CY,FG8I&kRZ'&pgck^94
%?4tj=:3Cq(3.p3;F]AVX_*dPsq7,.P`dA#EU')eh,b2ZbBS76@SQPa?RDmj&[=c@JZ%l0L1cQrs\,c&dV9#l""^MCW9Qr9NV:_j5
%/-'8Mg7\EjSrQY/"uF^qcHKgMZ\>%[<q&Re*YpfaF<IC2S#emGkG8eVS[?HZFp14!/#HU;4DG.Q1Iq5s^Q?g>iA(!.g!Y'"3NO`%
%8C,M.l3QecQp_-s>b&=tSa$es.3bs*<1[kViG.-["-K;01(<VC,\F0==bJ$Aen/T`E6%#YAt[C@lj-DWoFO.:i_3t9iKD,u9+pA_
%Jbs"F_jhu09$u:c@!^>9&J19LlUl+_D<n''m-CpqVLO^46i[qHhg<r,_m7ekKJ^m]E0@P^qq)+B#/s1MmuDm-gb\=--n6:sAGSM9
%bL%'_$b4lLkg:CE!7n\0,c2^e6Cf)8ERP7GDDcER4</6Xgd`np>D9LYUq(`,'@W20bSQE1DCY]kSYE8m"0bc+/qTh-I3e5H`!-R6
%7=uQO09GPT.?#`%,3ub&Ch<,;UAVc+\Usqn_I]7X]7s0'HSB6N3d?Ad0k]BT4L#G]NFOfUG\H35KXhNlD!7p209d.2VY&nJ;9T`8
%E=lX'I8rfO4lgQRrNI8k/3A1_-73Fj&VhgtXt98T7c@H<N+hMYMBL,6(8f>^jl"6*gmq#qXZ>2l3oc#R"$EOS=*@pRc8AT0q#r[q
%Rcm!Cq\5TYKkXKQ'/rhKr6bdkY"3dCoc'mXa!pe\SDiUThW/*\-EBZ.>>jKKd[/i_"L.=0(b;A(/6di3aqZLjSH.m['5mC/+P#>4
%e(Msm)T!rJ(>J$J?:J*l;.E2s\e5qjNEp+0`HP<_h1P1'F$ql!ajRc=42GMS>-6Z4bc7sb&049@M>]Dt\k[ZO<0Y3Y%W=Y84Zn&-
%7Ah/Z2Urf_mUNgiNcVLbIWNRD0WU-h!T4Zb.\'&eX<pHP"%V.22\\NkHR'?4LQJ\#2X+sV457Ri<J_oCE9:'P4\!Q4,VO3K@P4Lb
%qKq3;*2KuseJ$&78<+[$(LmbmQ,J7_LZftj.NAGG5l27AP4MU*$@Em.UUV`n$91kPG0S,Ap]IX+\9i'q.M/pM]_h-:b\o8lf=b>q
%&oHW3`#$)3'Gc@hb:GbBdmgLnF-d$7L6$W<bMfJ"5/%;r8B`80.oQ/[fB>(W.Sd;0Y<%%e9R(2lJ9ES%Adnj9F+B+0p8Y$sn$E=r
%.QI!T_M;[56qAah&@Et0)Y+eu]9?JtgmSdsg9^6qWjYgfjU[la;jSk4!)D@oYrp]:5i#($;s[!E&2'(4$<SV_)M'DNE42f`?bmH]
%,7'E=`*s;Pmc\lI,^V)!7)'N]WVfr[$msW?b`/Pa"?j8^'4%mt^:O_XGkGXNd+&]/+,[5b'!a"gT-amH*.aOI)rZA(ka`;&o%5R:
%]oX=D8PKUGMH#\9r+1:C81a#tD4$^fi'WTKCfC8hP>kPI5O29cdY1C:(pr$[3PkldoAKJ>1[,Z.Kro)#382T_7"Qa?fZ5K?:pi2i
%B_t-<Onh\'\$<eYm</dq;J'eo;?QeU?jJGcI@oqmV:\1UE8]]]QT26S>$mRqG)GBF@ZTU0badm+RBD8:QTSe%9-I;T*5l+[&>pd2
%+`>,5WC`<4=$HaH`s%rgm2:OEm5mi<fG2ODn`N)i0(Z_E'SeqIo:?hHNhR[J:$+@PfjS/V.0kf+,'j9Xk<4\<cJ9]dn(Xs7@.OW#
%RATYo?+iNPJmcsg+WdXrRUPH'\_356eI,3\:\[&g^)3NEDRX??E(ChQ7jP]lm0`5t(5fMp(<Cc6eFbBmk_cqoT1!QA``SY6%>c#^
%]/D0(N`5%(X52hS7[=Y`^s-GimLD6cr>lh]Wb?M<8n&fL5^6dU%efOrbJQskljsi+cY)QX\g5I2eBS_':>J%1RN-368Q-nkMi*\L
%4Ft!1a@<V:&+"mco%2SO@oIVq8Q[J\(gid^65=%lkk$,*>;8o8]go\lV7M7]X%2EIZWsSDAST17#"eDM-;sq@*IBhB,nV$6WHjY.
%<LTRef1h1TM/d,$(G/DA#ie`7)J"UJ&d$F!eC)\q$d_8n?BUPGCaGZrO%2tlR'a1H"F35&.1/^9ZC<5?Zr87roH-!K?'DX2AT^W\
%aXPTb<-q29FU[I!+h3s4<5b+Pq1n(:',EekESfY>Po>5K!#7:^LI78X\Jp5?lVq`JK+5#O0?`-#3,q"^F<f^c<(R?#*r1U)@!RR-
%=GuXW8dTj33M`CR,\rL-4/l[n/=r4J&9NsY1.KB$d;0'H_(k#o(7e:XT?:"h$pZ\EQA"e4ePLn2"gKRS.cT:F6BIus4cM-qR$)6h
%]SFF(=$:^[MZ])1i]:k@M":AGLcC>a5B:^.B&>loR1b0BEA:WIW)M\*hOK]QE=[luW[JRT(I)CbK5=:]Z9(e^>;m/7NU8"^JdaKn
%PltPJ[#gB("Ii-&S)C9Go@rBMXA#lm:*_(288Ys(KhVn_>p05"8s?t>f;81X/SaXVRnQ`j<*MA8kG+6nYBo"5XH($S+Xk.Q9reVm
%!O11n77AsWeVd"[ICgrjGQ:#13hOGe$(,Vg`MKl?Jh;F`dh^_8DkK?\hsXmocGWt88$-W2B#9^#nLM8Lc-+&hJ7[:H35kiqcN9P-
%p>J%DAD4%8XK#Pf8Pk_d]]LN39pq9j4Y$h`R&X\(6^NYBdT/EAMX^u9&HVe&br<h5_ojNl'r8i9$SC]pe#pZ,8SJ6DooiB-]'2W2
%[da/D^>e4H:QOhXe]o_RBt>#QN1hMrRnak5741KZ^bC]baY5dIU^UkN*m+s)j,A;?O[)fQAQY-mT;9<`b0-3-ak.R9Z!%E^&WIK4
%eQ@7A(gL&L:A4JN*70^YS&^F6O3+[mJ:d#olT(dhOq8R4$2O7c9)92jNa"5ZP#][UZse*3,)2>KZU5!DXW+&TLgpNh20H)@-.?Ms
%8nX(mROtZCVshLQ>q:HQ:*>7bRRdibA`BtKiF.]\hfB:eVQoH4@DN_:E3;lQ#e#ilEN3tQYkWl&*?%ARpp(!-),0*GCBo1>_P4L)
%&]F;.iUHCh/gO&Q=>j=t9,T=$EkDo+9r7^HYu:u"AW43j.MZuD>c#6@>`1]fcaYPa0oHL!+JB%T"NB^_5R7UgXrE-V"9PDCZpn_9
%51`XEQ!2)EcuNE1jhE(;4Gd.lh8Z<>^".+a8K`Q'pG0pOINkN4gs1gK\)R0d8rh9W2G[c`G_g7rR_RI<"In&n("GIc]2tL)%?uO?
%d'.oD-huZV%p"gKnnDd1X)=1!&2b3^LpdB_KA7+D%O,t`J=KOaiL%!Bem(@A6^JHPRd@DAaMrK+dI&>Oo!LiF4fOp!a(uLd&sgja
%N%>MOo0;jidtJ578KdHCGao\A#K8hOnYFkG3V0+A8L<OS#"!42.UVJ@am]F,;OgVQM0+]CKa:TX^t]tM4>IIL*-eF\^/q:?ohoV?
%5unF([klLALdd^he`t-1iI5O"r*f;@G\Na1>a-m9qgS,gqZ=^qVG%OHmY?P77'aOuFZ;>bZ[4cWDV3_Y"T0VVQ2!)lPG;m#mLBL'
%nc)GrL6<);iB)B;,b&NeI",Jj`kc%1BWq93qEbM"'_N@mPhA27/F&[mK#ZZ(<rCI_ks3Is1(jmI^-EcDU;D[1*Z2;,.V4hjMc;$5
%\@@0TiJS/DqGqLX2'3-7OT1F%$qNI7`DOaR'W_g%D@YR8Res>CPToZYoma7@DS)/R=5)TG!56:a0jkGa.c[&HJhL)f/Z=/&&g[?m
%%2t3-`S+4p`C'STQ=]l80'7%X@:!@p#FLqZ);K-enZ>`#nkbT_X0hVuGKVS#Mij,6)%eCMnQVUUqT0LEctH!+5Z*r-h!,6XI]A,s
%2TgBS';GJuQE[&"0;?gD&YJO/jAEpPLH_IV"RHHqMeCh3;#jN,[H]:U,q!!`U1cGk4MOG!,F<b?$]rXd:6o!kUR[>e0J6ns,srh<
%@I.(BeO@>?[n\-FQ&[]BM;*$Q23hV2W#!N;+@8ka!L^U`KPrA4Z^!(Z$<^&N'm:e>_2@JR\ud6A9+pup15fZG-d??<<e$p'b"5ku
%;2bi*'sOFbQRUjDXQ\&-oR"$pP'>K`Dhl4b`;)hc@ZDG%3Zam;-f(.^`>f0=/Fkk^qoS?RMEo/mA[7MiR(i[Olm:XZ''qc^J"3])
%nk-`D_)%'Kp4J_8`=elO$+XUJLu9OqSo4^A1<18C&Jb0Tm"qft<ha8te:b]".1"Mi#Ed,4;&oq+")m*!5ZM3COF^2Ab=(T+?6gTt
%AETZigCT67'^mV:6,s>C7bLBn=K,U6E".aE`<S7N[KRj\ahsa5-eK;0(>T[]=d8b$ZNM+BWYX/8ME_PG<eD\V,VY<?Ik<J!9,<R8
%&\.<u@9\[Q=TgA^JUq,@3/NP=KtW?Nk^o$NkRXtr>)OXt\e[0Ii[9SGW(eX'Q`8:55#p%85c+OlTHPEp0#_GM6)W)G_N#"N1eKjT
%k7:bE#,SBqQ'A=;?s:+uL4XQj5U1oJE[[%dPbX4G>U(:,"f$bnKis>_5`8#o3D#R2O%5iX:*X;D(t\+O/jQ1WWuO9fQm-h0JSX-d
%OE^9D,1n%EpVtc1/,(1.OFmg.KC4$m2AV]1LrY.jDG^hs+9Fk<RX^nh%fp!VZS>;h(%N2l9XkWf`:E/3ia?k[]gPrYcmP9iP*]Zp
%Aa4(G%qu#s%O[^W//6:$JL!LsCIkucG1RuL\m]tB0:@a`^GP2;&Xt2fX`EPb@H:=V%/)aMD0!+Knn$DkmV/s?"ngKpbq7W%AFsF?
%?R.6u;i\D)+6bR+ht_X,TR@Arf:YuVJZUsk:DWFr<.t0D60/_OV_ctZaD?(MHjbZS8W<(-M=?1[8h:su<X^.?-p*A-qu%#%/?6ML
%.dXi;]GZ8L+PDBXfg/S,&n/C+#6XNFp!"r,T#?*gU)I13+j.TgqRK+p=aUNe!=kWr:.X[ZOBS#,=!c^S\jCtF@P9-mY"DGsg22Y@
%US0*e+T-cl_`)7rF_'tS\P@l#?-P>2JDMD_T.6N<p9jG(#td_C!3-D59ctrS%+e9AB2ns)`"s=>)B@VM_&fh>;%urn,\N>Y0,3R6
%"HX,D1+da-]Z+)>+%P:OT"$K^.mj.8M?cT-$:.poK=^ZN)$#Nh$V?(3ftf(OZjs1'R'W&phLf'?BLdCjp.^FZW.G"DPV//m8?%da
%GD<>Wj-IrXdZ>lqT$Y.S\^4u^i"4:q0jSs0Ne5pE7P-/Oc7kaoSi]^$;>kH+A#^.V@?_[C:M.l%)[$]Y=Q`7\]j.-5gPPiq8eF()
%AG8K187$tf5+NCc^CQMf5pOj3l0:XK3e`V<<0Uq/;8ILWT/th!"mZ1,8JadgCUO:uCZGURb*0XK9]bL]iWCas=W0&)8!O]=o[`"L
%'R<ZYUO`j8)B"qgC;<1'"Y_d\rZVRODqcc+.:dcP81T=k#,iuMOkA("`<aoK/pX`Tj,Aq^_MWX%o6LU,,3;oG&GjKqCf:ZIW,+/a
%01t)+:b"uqEkE'WS05\JA5l&':;UNYi6Wo0=-]QKWR-<P&A_S4-mtk`1eu3iUHC(tHc2li=IbTG<[Yb+'sW?3V77V[hK*$TY#^*?
%YU;GU!)AMO3K&iK8>uNq,Y_0G(A49i`6mnm5)9QWS.-GU%1$PpJluM9frDlVMTniR@u2t0MeI$/Zq*f::Lm=ES>?M_R,nSBkhqAp
%C-@ga+p^Phg'&CLVmJmrKt-J@&d:OtBQ'VAEYcf7=b<dL2;759<P@@2&?)<QN^1bK-<X2KMG[o]NXS=?ZVKn,C@QQuh3):uJH(gG
%7k);QM?)736ejld9RuIJ"G2dn:!/st*F#bRonnn[kt*>Z6"uMq/L+X'AX6LRG";U6LVOPE5>Lm%,X@!'jMNqdd44K[i,pK=VF/@B
%h\18B3t*K.3(e94G"YC1jHFaB+c=986.=T:f]/5&Itq:gKPd!fJ?lKAPU)HWN5;Yl_SHA`+UUOE1cr^dNEh0k;3#B*4*#NC;4f+"
%?!kDj]3[alW/2mhK>7b(G%J"<^e*3-JlX(O!XN"PgJ\(n7rJ%u&gtc,KQJ]+BY8I<VsZ>LZKFWr*cXTJB%H$XP5,+o7d9E:?kV0!
%P\Y#3"p<6l\5[-KJM\d47?LN>,]oA>,`MJ[HC3CBc1cbb,Uin^_YS/,?q3GnOLN7dIlfc6c((0=RD\lUUe*p0LZ.#-Fu`Q-A-9s_
%b</bt8/mdRYkttT5r+4G9]2<p+EQV@Ne%?oi0\;J0nV39]#QGJWSJVp=H#6i+Qe?\;oY)2R"N2KaV;X_So^EZ6O#bs?OX,cjGJ1^
%IlF``7EAO)EgW?;n>b^6W%'n6^.15/\Q0Y)m.)Q"&Ap,]'#Qbc0(2c]gEpd.!m1\V*8$;TW&)=C#9FRGrXH>!"ta@3p)DM:F,jIH
%h!uk%dfs"d1I@gU$>b"9.sVJ+NYl((5>YiN`@s]'rfNb<&fr6P3>k^\;D4tXQ6UI@>l"e1:=0f*]S0H_Q2&e[!R">?cNf.SVr.%b
%XINt3G-#`V5tEa<<K:-X"OmjZ4:,,b!L:R('sd-jj\R"V+?O[u?Lg`Zf3uh.5l;QnGoe97D2M2N)Fd#ef]_l01,)]i<J5Btirae:
%/r.hcT*:R5.SSER##Bc"RP-\A-eCaNK-r%:B)t"99I(1L]WYgX,EIkUd=P(f;8/V8(arLo7"nF(,*NhJ]GN>Jdtc$1B"6ot/L3dt
%n$(m"1I_CeVV$=\,E+e&T]GlRi12s<6rbo]73kCdZj@J/]Lr.e3?J!``BgSEjM9/nNbiCiQj6W5Rt6^ROm?Bo(-1L1"j*#P6S]A]
%@Aq9cf_ZfaGmoV$C4n:6\6tGO_Ch)k(:b[3gM'&,oTVY!r[8I@&NCVNS0@!*dA@Y9*-sRfU+6p<<$lX:cB-,J<4Y"2En"%HFp^W4
%eP+&e2Zk7:1;S,@>W=.%^eb0aDif@m)%nsN"Q6%?jAb=hO42/%*]q7_Y6).N0]ZCV8l<ZlLlt082[j_3-$Yb#OK28k!9A:P.(^r-
%32knk<VUR$8;cKDP6R'+,XnQ<`,:eCB022_O/),#Tt"j9FY2V?Qm%MX@4$bm!frD!6"paO*#Zs7q_s-JcVfPA:rcL7a\5OO/]2r?
%3h@Uq<'\J)?U@dD`>f,1$('b@6B3ENr$gWM&p.GI*!\dg.Q\Os4@,K7/9p2Y$s)?,.7BA_Br>Y)j:ZHq!=MhC(AFptNPj7AqeHBn
%%Smf#/L]%,6ItME86o5=[E`a2UF*N#c?L$ZPei;',;_ubBh'%r:F%u\VJg8\fH4A1686DF.#N"_7OID[;I0K7S=IupcPa\S;]ZKQ
%5plBd:^q-@'ODdY9[8M.FE%S1KMOc6(\bJ<8o]ZF>]p<'IReSJ2Hu#3LMT6?jYL:aj8k8,W2761>_`3W!\4aXJ9^8d<Et)c$riaE
%W*WBcW5,Mr+_Qnrd$Y0c<tWFA5#N75-_*dh%d=b#3;bG:I?[>A>*V7=KI3k`L?Dt(nG#iQ)oWGN/1ha&3#mMaaYEr2:LXM^e8U@]
%MCT/c3=7Zh#8'`5TOo&#+@&^\#]UCmV-o0'Nd-F,0\mG#Ja&>;?Lbop@1"*Zae4A0T%)c!i8H,)#gs\S4D@YJKan>KGo$<r1.ET>
%L,]8FVjnMh$PhH9k`kEj'%h.)?`q$I*Anh39"nei",DL_&em)`7Ichk&ApfaqicWS6#_Et5t4oE-GI>Y=?*"aG_$F(WC0&M=/^)r
%3&.YU'Ib"3@iDo[Kh$h"<h/[C'RY?:'-9#;7o@.^NFR3?!=99_(XFeP&K3oR_$Ubq-!oC=_Ll=<cN(h7L;,-%3""/9\UFf+S1<)^
%6pue8pW0d_r#>grE2c=E#014o\b>)ElutJr$4IE.;PqAf_$.m)Y**jCYi*;1n63GThuPCF<3a.n(\+),JnK);.<-J)eaj5G0m<`e
%'Id$:5m/PU06KPLX>u4J#<mt$E/k,T)7ggsHk;p;@=\sKL7Ub`%h+r[Oh_27IQJ$!`%ZBC"WZ,>VfE(LGbiKq*7rMnT96h/1C3K4
%N8>OncNrH]ABPkkGSQ"Z*<3X.4&Y%P8HJ,/htWJr04q],QcO?&rha:Z*lBUbaq;J!JA9&GBXlrfoBJF([h35NhaUVmmjc<eL%6R+
%Uar"O_b=P([:UUZ)rPof9^ocUW,UYNP$\sk>IW]&m(6.t5[5bh2j>nOLf:8@JaAt[l.lGTd0GGb1"8/"3CMbu^'>"C%HB%=mt!_Y
%.6L&'^(9/r'Bj-2qZbId?c"V'DhoiFJ,qWC9n5,1lJ!h<p^HC+3]f>n'^3/lN6?cM3(%4[#ch/`hoIer'[teKLkO9_<g7O`e2&Gs
%%-8E@'WXBSni[OB^P5sGb[r^>"djjg#6Gq-5X&d9pg-^i/I+HP'M:S[q"B<l?i]*#F*`T"H\7`+r6lA:)dt<4IAZ5b_2EqN_7bDs
%cJb?nCi?M"#Sl(J9;-#dp'-)$lPZq9([%URH6[e[CU=14(alSNbtu(s96(06@+%m.r5eK+4@hfoc/WQ!l"sCRoL?b'V-#7D2gm'9
%g3Qd&6,[`)=nZ;.8]3AHDmUW%@ts.eeAA/'hM@Agr,G0s`WRQCVPe\P<r_AEQ?T:E4;>rm_XaQphM@pO#,XZBa:9AHGX^g#/e^s'
%#38MT8XN>\i[lQXX:]&0hOQ,]hPlC/??*XH#i],h#@eB#_C:L(QWk@iN&QIc;;.c(GZ/u7j\a6@]Q&,ZO;X';)DZ?1icnth\RaG/
%a.'#l@%_2g]\<b9=UGa;5&U)'E4iI3(fSBpbZr^f@(bau;6ZdM#o%jIi*(d'7P(H=-pom6;ZKhU*8(h^9b82,\Y:e7'GjB%,DGY7
%I&%t%jHBRKO;ZGK@(^3I`::im@9u4fk:#1$=[TF5K&TKZ2.IXgMDmD4!e!7`k<fFSV5l)'2auO8oW=d2,A)`d,%i=\'XZ35b_"jA
%#\]XS-j7L.)jE(5B.2UNXR/XcnHOQ[+q2DZTr);4"lep><6m<2Do>;R'2q30.IrlXh(oa`O;[=^;7n>YNmO[-`L@.?k@ZL*oH^9`
%.#^)^@%]1jDc"O-5DSdK`!C*^;7mKj:?d@bj%U+bj@Yu[GZ49H4]ZANJ6@hZP_.p).gP%X:3!pTQ6UIU_Ka\N6+_m2NRE\hnoFll
%?'AlD$\gUJ.]Gd[US$gh!I.ZL,?Oe\1?Xdf=WtF4'+.d06[0g^M@P=aGZQ96V@)6Ui5YnHDYW%l]5e3O_='ii%OZN0HoFLY"KnWT
%dCW96ST:)4]Gh!n7htB.4;S1X]0ge[.%&Yr64+B/*@^bMJ\.m@4G1"9J\,XM?G%`R'H<hJQm$Yu$TKNKRKIcc_"hr$oE^p-_r;#<
%2q<f3gnKFEK,Ol,S*V'WL/#u&fhF?b"l.-0],_&M3)3D9;F1^WX,u.bb9V8\FNA@>g'^fFQ:fmD/;9`@0cg_<-&Ca1+M0r%]Pp1'
%-3B(t-t5+I'^N@UFq^9!Z4sR5hE]$d'X8SkY),2,m"T5D,UGhEVXt<!3DdY39M#eUVhj/n1I?ZG$JCCi%)t_7aDUiFS8gU/lm?b8
%81HN>\0:sbMV1]1*$fXM0Y8cn`o+R69IQ&iV3p(,iM)c>b\dcfjcCt.m%sh]K`7mBh710YOCSRLc!e&*X+GLn_^+07;MSR`8TW[)
%&q7@3V;QN$4KcPEK+J36];'P%b(6UFg._]B\P^joU2WQ+.;Ur2p_]M`.+YD1hC38")6SeQc!\.TXeH@BL$]'jZ7AOT]8=B)$rc)%
%-<$"g!-_@SSC#Hph&p\8N>Z[o't9n#$3fj0`Bg00"a[1jR/7BKc.*oB'HQ9DVBE0p!dBj"UG1FC\=:@]L$oRj2as\:&J<f9U@;<Q
%icYu<S9'P3JqZR6%CVb_ae0/CfPV2qpRFo-L.=3;V.9S(05*3B*4D?t8&k'8ghqKt%Yds<DDmDD9'dhA$-!S&2m*Jl*Td,rgho$8
%A3i:3ghpcdBEYc5%4r`FfPWIi<!>AJ05XX!Bhi*K8Q]M1].1J'HmsbnL>*.@K!TO+q@PP3:5C4KDM#KAib\%eh.0[NdMr>CN=AAn
%;1n7Z8P:I-@Cmt*N$<lg[[ZPJEa4gDG*D,c2%=0%h*`Se;.7))18GE7I913OBG=juKB>!-DDtg_S6`)'h2^D[W4&EmK>:b<4M;VM
%2j"bb-=seI32Bl#]0YD[q\a91aE\Ib%E=)?U]Q8/Fu+iBDH#>.]Te>7.;h(lUhor?fP\25'dBoXG*>R`;R@.G)^#[07hq+)r(m91
%*Om$m7s5FO'hDMu5UN_k3GP#2'X\n05qHAbpOL&P7=s3`@h3/>3^FO2O!/[ZAPLl0$eEiJY<,CNFG&l`ADJBZFg@"#$@A5YGI*6n
%UbJfHa23,]L=L-o)-1sZ$<HmL2nqXt"!3A!fVVL$,t[fc2.N_5_s,b0B.2S*A;or>-'D:`\q.fYdqXoi9mGcOZUt-pR(,_[<.Jit
%\4kiqT,Z+]@o`$/d6$H?-p75`aOZuWEu-F"VVp5p_;S:SK$=bK(Bt#56?<eWF(G.gfk6++<^ZuN/l(mdVmtM)d]lbRD@iOQ.?L;)
%#%[u+m\&?Hk^e6E,6bpmq$\"%)[$L(S3_1.O]`*T)`C^u,?I;$U8N5;a:63O65rugm]?)F'oj4UXd&?06fTMnTU8ZV!1os+^l$+e
%#]*P26#gPf$j;D+G$hE,-J0.>76\WJVU/9lnL$$GE5Jpr5Z"u\FfCnk%"t)WK\+p4\?i&!.g.d86lAKN"E#+nR&0q(j&6UM;#G/A
%8?e`'D_")GTl3k1ALnjLHeM99hR3d:$GB`pM5<2d`Z8[,gOQ<b4D2Ld/lF4:d'Q:pPW;+e*j^OT>I2J@U1%pa*&3^=i\nW2C'#+>
%Pc/<U!k:C.W65TfHW5f>`S3jc#C-RiDB#h>FD]7K[d,%?7g7Y%hG*E[_:l?TB2I?R.S/=0a3cBdPe]27nR`!3>nqi];7<0^R`N>p
%+V_[EjU4/m2TVs%WDS^cL!g*8RkuZbcgE*N&WT:n?]),u9(@Mcc".pBVNro'fu?1u[tg\of-nED$F1,[Lpk;3A%PHu+Bf1`Rg)>(
%=Y[>k!b#%rm%-9@JWo6!(u'^p0FD&Ff9CA\XaPr/9rgms+bHsngOoEXMQoki`X8;HCf?m$SHTta+X;$D9?,Vu.leW<<:p_U[`SA:
%?t(pND'DmuL14u*<AKf!W(ki4Y50llfHtYV"Z@gL2HEu;+W/r6_kd5dK@n0ki5A9Bf^AU@6>Z6bY>S)h)hG[*'cY(L;.p0UXJ8p0
%hmml/TPY*H)\bbu'ngErY9gV46eKCP3P\B%[]p2X'h].I+V8Z^g^IW'Mn^$,JaH'e^ERJMWlN15ZAu.P+Uc.FQ$4Q>T-A*(631s[
%J8IWr+Os]t[N2'6$g7RX,9TgM\BYLj)]P1)TG1e'U'itK=9,e7bac1+"5$)C*atrq_DZGc)!##Od4:Q&R_rnc4AJNOON%8,gl$MP
%Nf[m2B*PM5js+?tMQT\9,DslFFD[bJgYgdZ:&H8*V,CZb:p0$9oM2PY4@Rk6Ms.rDiUj`j?rNi:CY)ElcmSVB81#NBQ,7<tKb\8g
%f;@UQcR@Kf>T77'fMtN[&Rn#I=f'3n71pbV\Cr&<do9H:U.O4!Wa5629gQ1\)0$gEZ*k@c)HKCG!#F!74%%LM;IRcL[7emUEl$3/
%*ZLMt-?.\;#;f%b3-go@nm`4]$<@TYB5Gn]JnY<!NSl9#9KNJ:?3liT@ApH+\g(p%X6:cng?<1$U7Kh'3s3kW-kq6`VH=1_<YPNA
%aqhrQikXaj*C:]"'P(EI"DtXVal];tg/162B)($^0ip@BO^+FW?QcMQkh34[8CSVB)j+Hs(+eCsM!LtoDoL"^)@8-Nc:2mgJ[-\E
%2Uuu7EK])^=Qao:2&kf%%!!MafnhG9'JUP1'd_PY!4+uQ">Is48!k#ojqRD*JQRm/1.BA]P($kJfh%&S:ECafbrJ\1Q!7.ZCsk75
%nJ.R17)"bDEs@hf8T5+g6-2l*='\+tO^H+nY,3&h8\lhi,9&+_o,<nM4pOQq*DI-OERU"P6ijT53u('*VU3g<8U,<(Ce4J'^00F"
%0g+1KMN3[PXH=&j-K*NV[62FJY"=O)$8cqN&dLOQ`^YnD"n=&t2W-:2NhO8@KU<XA0_XF;7q"joMd==%@&V^#kj(8Z2YgD[770qW
%eHKETfSE0FbMs!EHRr>/6SPdG_ON)$G#cHW'G29**_mNtjoeMV"qB$.bpc2CWK)d/A28EY,.8_0@L3ea5r/ifbR>+'j@UO$$AhLH
%>6HaVOP%i.gWUeF-Tqe`2CJulV3oo\8cITe':Wr1B^HKIS(umuE1OMQ4<Zu.GRG1S`'k:u'GHs`c?.kk.e[.>Z^VDRAlNT&*.q2o
%m\&4?&jh:<@KU7nW\5kH2C&\Y&D93+$N;/g>:CUO#[Yr>#S%g"OcsU9L/")R@]Uk0lmdhB$?==&bF!05@1s\OTPRPD#R!o>F]L3_
%M$%[RL.t9/*'4uqBlo._:b6FgVJ;E6#IGhI.\hV((,cUS`"%Jq_KhBWRe%o[;lNUG6t,$#U.HqCnnk7+fTa4hFbU&-Rq?!*DQ.#P
%)eFbXN@,Sj7^91;9W:(*@:;P&MO^_'`PMhIlTQg72COB'>8\27M<oh54im_Z5Y%K4$AAqB$SJO)8D)FD(2a>19k,CP-qN"9.a0:R
%2J'W79:d>9'/`B6%E:=/Kt*6f@1t_u%%J1J2Mn19Hd,`Mj6Upk_?P^H)J2OmUde97/;:raPS+fm;OL#UL,/U08D'_>qj9GX2KWBQ
%HVl&)p+fQLZ7-DEfjP0S7$4]FZf7u,JqZp$FA]3qM2`UN%%JOe=P/9q2c^,Kit_7p\2M7AVN;TL]a5H4&V;-4B.f11(m'*%KFRCL
%/:o!Q,@H4`F=@h\g@.V%+^l%k-!="X$(K_O1g1'mL.i\dd+I=d)C;B(g>R?fBGLWcL<doQBEj,a`b^A0(*IG7UoXhM&iP[[CgNSS
%@5D_!oc4@.65TG_$5,6o-kU<NK[&JK-$1DK`Y'N#j/dBGP3h$C&iQ0='c=V^As!`Y8Wg5K$Y?:2.2"Q9.>Q94Y\=:M?m/(n0T-6h
%a:nq"A9fUK@?^MG#:E'p6m35m$jdk`7TpKOChh!t7$+XPF!lL`*=82L,=]7AW)3[8N`)"(S6\UOJRM?qJqf7dYe`dpY/paaYm"&_
%ChT8R+1-c/oeJtRSku:tfU]*WfVB.#,_;Uslh6m%@69#siQ+!/"].I:ia@rh;_"I4J5;n?&KR8G^l:p#(;jOD-^'\0VD-XBKeFr#
%d$dP]HjYL#D+J60iF$__26$p4%Q<'6UiHXn*FSU[V+,^M_'T<8J\9?]K2''-_TPaqCc[ImCbVtj'Nm7i+D_TEq/mDXRk/-(:GN$h
%-9DlL2CK1r;>>lU,]"ZD&B#7hRoY*qk_b$f*dB;\/P+MJ-ZEhd$jiC7`1hcJF1r04_aWkRYa48pa**Jr9q`q@$XaNMn;?_;:tT<-
%T`X^>-u=tO`nd;lM*d,s:tS10kfObW2YBTA6jeWB7MmV;Y#*b]V]!W/,]&Wo]p&X3A",_$)%nhf/K!e_MM0g-MM+^U?d5u'@FKE>
%6b\8-%5RB47D]7_,J+WrS(^]WedMkSaL#K8K[&G0U[(b/'EZBV=f,>O'\YPQ[!1I*3]!6[/8T>4GnI/?(,f=8_=A!BRo5_)H;Yoh
%+`S'tmi2_)e1N\R<XfmCGZ5p3J?V+8YeI("OjkkY9mK5:GR+'LIJG%gjtPG=^9_#]$9"3>$:l$?G*X%fEt%CdAf$*8c=2no"RJun
%0'3/dUDP!\`*2a.48ecM>B#=G4d)(KqA;R8)t`eOkqmJFCS]3P^m75mdsakpOfoAS6ItWDn?q6e)t5^ocA:.&QF*"&i#1l=L^^X>
%W7PuN%:dGk-5T\l[ihlfU^J("2$d2Sj"`k*KQJr]GP!nI&r6J(Gh8m66:p,o`i;)l'^ckW)?e`oB\/,+ASB[]bCe-VXqC++PCl2-
%;nt2B&4O/74Ol$Nl]>*2'U7pVopZ]WRN,PLGRNOMNcFcN$,e^L*iQ$G6<jbH4II?tK1M#/"h5$\WMfgKE/%4ImhrhsZ@AnCkgo6<
%YZ;lN#rsnC]mPQO*NPj4/$q/O%;Y1Kela4pB>E*f(rZf_21f?E;,:&k;>>]33<Q\7U(J6>24c%CC5'#aa(4q6+^-,=U'`e@".^S/
%cI\(hNVGfnJ290#e2X6eY@uLCZD%.n_5uT&-h2;5APGeN^aV7iTF2=7'ZM'+:^s-:MD^Vf+VKMe.?QTc$=Sq7W6EKp_AWUubOD/E
%i[CLV$=Jk_5VH]%4+9'LbF$ra?VN73M=("IrhAV<b4*b`,F='D_lfjrL<+6YEkPAH`Q0VlE]'e[fVu[:L(g5ieQF%%B<]oc)(2ZV
%5rr^Uj;-,-TKiZ:ct\6(dZpbueUUICpdBh;:4alN6`_WU)JC`)=Ig-09_#,KJB;I7<t-W*i%%tgE,<V\VdS&"Rks\OhbObeN"i91
%+rqiU.T/-Ld;S&E_du1.5)#s?8e<"(7B$b0+Z'G'%T^2=0WL7k_N:Vr;,,DW'LXj5W&B_b7ApEAY=3F;Jj@^71P"b`'`f#@)L-_L
%$P]2di7Vc,eB"TK]M$@468Q3W(n95l3P7.]C9LKeMG+JgE0=g<b:te$l3rss^1+Z/'UBX?Wdqm`e6YeEc9S@u*5FN:L.ND.IgIBC
%,5u^(OZF)@S,cIIiZJc=i_a38PK.\J8"Gb,2oM:o$"h<iB`Xu`[>GCY1GJ)dc<.P2/F"W`i!kRTE(91G,jKQBerb(`p-q$P[2"I#
%6>#C7e0F3c6H,50_1QH5+OhVZ0AjdB"saSAb"rB/;=m*WTN7!K/bj#dfeW3aU@fi9I+iAEh&Lf'F#$>-SsGa9K:XEV_]@fPEjTM+
%-4[Li=U$sIrS]#CYJX*[)31@<'Qk=`>;R0\1rKu/)sWg>6%gbBSG"EY.,m'0ndEsU!DXlu06?D-a]$QAP#R^5PMOe_.U5csVBoDO
%_57n!)I1=O*[lFZqHI(NA@&$t"c>/Ho.5[H.b6GqUCKo$n19H@eV9;:!=BW;<3YW!!rL<I'S&%sSE^5n3f7k%Ybi-RcCh%u(UWfP
%dPU;&N5d;3e%c=L,1D-"SMUe!"u?_,&<^N;AK"Afm!KP0Bb60/kiu%9@K[L'BfLPjTM#loi@`[W6p5W>Br\Gjkn3_`**$sQ;6O0Z
%MhWiI3^GM6+p%Hchm'#Y@tV]>=rL@4'2`H-Wg-^$=W/^#PWCT&QEEsi9.I)$ZI.;_.*_5dnd3T<V8lHuBIg+T.#B,P((FdbJl\7I
%8f'e-0PZpG;hL;m_@0:FW<Oa[k<5(C<L@I<-'KZ=K9Jbe0jBHe3][;$AMEBJlP)uqW<OYC8D&(O8CBrC=_9qI#dB<r09(mi,RJ-_
%(hjPg!96J1eRJ%U,$d$]8eIgk&pNUL65fi2>_AFVUdm#rTE*D"7u!(@&CP'OX<^5r-:5co5amYn0&=C**Yg8"i1ifA$)d:?<.7$/
%>NjIb`+5dVJ4CiiP^K'S*K:V.qN`r$BS.[2jCeV0,^5aY7um^P4i`OOZ52&Z/XAoJQ#7<o)Vi>j\\<\c'@hku),8G:hB8SE`D,Q4
%1W8K</XHbR8+>;eM(Eo!P^hoG/\#HoU6,mZd@q4W_"fD\(/8/fKj.[,UEJDC;D`4LS>.W#d25^&@?)#'#iPt$NBpERYG+G:^bNoO
%P\?RQarOHCkc1%9M@i#=W'`t6l5s&[k`O\2L'Fd8@1Eg-fNgt>(3jMC[GbU6k];T4h)GLl7W\\tK.7VmoK#9mVPs>hDZN5CKgf[X
%Jd[Rq#tn3)U!'+J"K/3Fn;N?i8^Fo2KA_5.-8_6/"J7],K[,EQq@!uTH8`U".OMM7At[MA.]C]sTVDpY)!\B4gaU3q7X5*=SLeLb
%o"),J*>CP8%V)&>63Ef0ai>ZV*:tSM4!6?o.PGDcmL+bM"u4EmTV9"EWDc@N%KmC]B5#Z-`$L@F"bR#8'3>MP/Eih<j:a*./0S=(
%"\i0,E?,CT:h<#(K`k+ZS9#\V=uBdlJgT;6QWlGrd'F%\7_a55$o(,##(_<YB->QOl(WL,$3EqX/2_MXkhD9JdEaFlD%m*KXeD:-
%m/Lt`hmM?*r[^21h;pG<,7tOo:HuV*r3B&\VTnA`5j2"phm_!,rpp&8T>.&6NVp75f<8LE\%[=iVp!8IMtODVro!``p$qqJ%BFDr
%I/gl]oY3D,oW\2Dp="LLg5i;EqSVUUs'o.oCCbjbebeeUKEP6FWa1nbcNP_Ze>UA`Km8!73,enij4WJe''8XV):]Pj?U,nV'<lh(
%$&D%UbK:t/'"cWohF,lOCiToXiEbIT\^D"m5TqVK`tHb4-P'#q1k\4C_qE."dS_"r;.GUOcY#S=$&QSoDk]ae`j'Lel(POiL:Rh2
%40J"a^HMN9G5r^cV8!.V-!_?.7RVQsU0\@[;KrXi)Q>mA<6#OAF0)PFQ:rI>1];$Dnd>/=o&,m1_,3nu\7URgOY6R[&N9e(rQ*=k
%9J<V7nmG?/hJJ@RNJ7\q=JT"ZFDdr,4R*lDcdI*S20\MVm>F9.*NCYZL7.HrkoN/50?#?g6/Hmmo`==m&Ljf4H]Zuck_Z5%fFspr
%;2LJXOF"`2+*n0pD'L>C05[0u>*YJ?G\[r@q9AfNcrD&/504I!]0><VpA`jOc,kB`7+=5Y^Q<,D+-b?:kS.0CXRmG(J:o+b7='-B
%`lM&DNna>rf'Yp&c;!_%H>"_KT8@"+Db!ieH\Zc$)0LPqM@\AOCt*ES-D=ABg9K%HPU#C>ePVN(beuejqjj=VCK&'SBKR#WkD_-k
%j!(!9B`Ce>P#IHO[$d4&kM8-6O/6hpA>KNLhoYsP>399ulIOUb__1Z&!E"T[_KgrDq;5"jCI0]:2mtRU+rq@=1OA8sC)gb0&St'_
%4<SQe,\+utHcL(^@8Ldm,t8#;ar"*3#h%oBr>9$W,:/B(5#(9Oo"ragOhj;MjOFZl[!1sHqcNFMZpr,n(J=EsktN#W:R-2Pb[$<?
%-cG@^UL>7dQV)XnE*IS`Ng3@ZW4^(mBZ_a-Jp^Z4rGqARVPB`tdg"X(+h`%1>'=`,CNYg]0#X]:3;E.fQqT_o8Jbf#5)Sa,.RWs#
%oPI)AQU*Y.&3BVf2k;T:%aG^T(2PFmqa^JI"*DasV3f$?(JZ9P:;>=TIg'9Ia<QocFJ3e`odmWn`YB/.jKFCO9co'[^c5Vg3RSt+
%#R7e$KsM>ROc4s:%Z$@,TUZ[&`d4S4e1gs\6Fq<m.8.oX]JYV]8p0\Pg.3#Pa&;/F/lbA-*\$M)b5M(]n-C:/^M52Y(Q(E8*hXV1
%4,0NP&eAm04]hOMO?T+jnR^SWKp_q5TPR"'\)H?l3:BOb9g.$uh.2]\m_@+9et-r&8ka,Fn(=MTDLIHncGdoNI-@D8ctgG5@Dg%I
%N8l-F7Ym&;$8HUnJMsZ2)[iQ5,\0d3kdB/LA".KF]cfMYHlAKISEG?Jan,fQ5\^'*I1pH;X'R&%lVtoeN3D%U5p'?@@iYHH%"3)O
%_^/DsN2*[)-Sn7N2[f%mh@Ib$-q2]HDb=$4"^dEMXsu(8BRK7c:++q:FG'Q!Cq?t*TYi!SgfUXqH3E)\W!cO+Q.8TbZBUYB(1I]"
%HLH:BnT5qD#UV3AT;N4^mN^.D<Z+TNZ5l0Vc]g5O>%IF6=@8'(<hXg]P\j5J())ZsU'&kbm7]kn6MM[T1<![`]b>-\:74TmEN!Hc
%<cc]1d'O!oSF$#/a^0h5-87Ts[G!6fEREo,f^cPL!(]>,&%>=U)8`,>4BC[!m^rm+:/>U(aPP*8\2+7,*?h5I:kmKA$_n5YG5TFE
%+P_bd<O3?/0Ctj;njn,sj5$S$a5JQ+846-H`J4BaX`7&o92<XP+p9RrTWpPCFQ(SW@]1c@ctt'sRiJZQm!CVs5m<ODD7PjZjA9?2
%_hOkr-h=]C)].OOYo</`,c8%a29Cbe2nMNE0ZqX@7:dY+C`2'%Z;p"^0I@Q"\O9(j!>=]HS`V%r4DDh0No4UAn]@'7I8:QsE?^h^
%8_>(1MosTf@PM>P7>Xq\`jqhm9.'-fB>T)AH$/QmQ42*-RR(,`aBbJb4Y&D'IW)UZ9eR>D%l?><T3?>CG?U3Xdh(mS7:cPINa=q7
%!X@dsQ'd!PE?.K?7?)j@#:h-%OsR5uM=%1fL;bUF6m?tsdPqq$RZKXi?<bC(2k>/&%YX1pS!Zk"*h$i>Q`M-8midNo)beXIc@+c5
%"c*TQJUiN3=A#*&%J$1rf#^Bu9Ne_jbTSI@La7b#lnfSH%GHBnq]F4%5)<h76rFJ'Ca7r,a2nnT.rfB9+:SuecP`JCRS:[g67o`l
%M>QQOR_O;t]]DKE9cXs\6Df<DCL<:]?TH76V6UK7jnMY]V8Y@Wpa5<b.bc$-cQulHUmIV[j6P>W,4(;9qUrsP1HD&2^Cl]4"N!Q`
%+O:7M)`d1o]N;qijL&a>+LXt6n@oZ-&^>p]lk"X378k1(e/mg6&QOe),LaU7NS66"5H#Q7G.>[L[5,SV-=[mNR<sUJ<'.'e/k&d6
%#D=#<%@UT!8>n<sP+2kJ&)I@GggTjO'i^[qD"<ie;lsW5P<%]=4\mUT;`Y*X.FAh?i0N.E)@lj3HfL6sS2hJUL7Y0`<`Gm:`^>Qb
%2mX/"%,Nm@F*,FqWa,Mpo4Z/k5h3uEn[RcMDH&Rj4A>n+'oLjSQUa1[D]F<>UQ)Zs--f;B%t):OGd-kc-3h_\k+;6o%6O)<LVVLf
%WjrgT0so9q4i0#0OiSXXc"kIThYrXfAsAUHVQrd*K-al(jr0r/aWt[]:)(07)0[(^I_IUil/7/@;Mpa0$nfUA"N.2g;JHPp?1NTE
%R$&",WoAP.4Z-/85+9a7l]j0O=Wa$fi0)=&2IPO?H@FV9c%\.AI5r2j8&)mAQ'bb,*(B"Da])A<SuA\R<h43=K=X,=hK'G='(1fX
%ViaGKR7HA=G<YJ#DUYYYUhl7Lg2U/?lB"]+7.d%nPDd0(CQ\;oig.su"-:JIShhr]^`s)IbIo-gkt7`9P=%+W`C*dJm/FFT^G@K`
%=5E8_Y!+=cd2`AC?9f65jTWVkV$AbHb]7K#XOH\ArR`V#d$'mF9:3YOd^-Rf!B[(%!=1n=$%8bbO<BG,U&`=iY3t]14re=]anCLh
%c)u08`PtJ@\,(pmk9X"2Jc!i40?JT*`I*A`Ha]7b`Aa5W.60Q8W/P1,f.sX&6cE_=j7*4mI1W`Q&sIU*&k"j#2lJ_VWFrh2LT3M8
%C`451VL-?q_p/Mi/&G?p0]=XC0#ijkVI([IWa'W;Cf^\CW/0>#VuBWA`S_:fZ(?eL"M`$@#no\nb]jQ0LKM3J/VurZ]1lSrS_ZAc
%klfPM9>ON;"+`ZcIN1bpk:Bst,LDp6)hcO-*FY-n.MJ*'hsK*'$AdK3RjWA\)?MS2#$4p`5?9fK4:7Vsp*c2uLmZ/MHadX7Br(Z&
%'d^G.,uPp_e9dPX%M5]G26RKR73RhZ=a!bD.47_1./,8o#@;&o'pV/TNa[5`e`#Vfc6iT;R"?AJhBFX`-]M&5!Kgd%FNgQ:*Eg^#
%ilr[!J/D6H'H-T3&GjFg'5&`p&mm%MA5eN-S]g[_oL/8a7$:@e9]RWP5bgl*<s`.-#]an.$pn%glb@l`.@"o`F9kVE:LZ"M]JU"d
%?Q)CglsPS61pDMoEAWDCf-q:D36T7F'1E$N/-WSGM(ZHBW3(].=W<8)H-[=DGW9J9m;H`k!nA*0<Yn7a)A&HFF&Y)KM$%49R5jE]
%+M+O%@M#1RbS$N#)0fcsAfO<A]XM+k^)Z>hWP=AhXO:3!RD&*6+$Y(EgO:dXY<`oG*.hKCTSmXuI"XX7+;T)"'JTpuJq-Z>nAJuA
%7!9$D.JCDZlA,d[/ou4>p,S6&P-]+HqU-0L0.or^8lXd$G%l0$$h;;a#hFVVKg`#r\F;Y'G77!*e`mJCAWZT81A)E&UeLC*(o*O]
%P!q6aJ)Ai#RltUrIY(<hqs0g0)SgH2cJi;JpB':c=]`F)(?//T7B$'8k\Cn[)FpC#CQ6J47WE?FA!JF]^^cdEA!d`Z=YN[3(.^pa
%+NCKLd*ED`7^UYZl5RHC5_Q^*AcXD-$S+NPp-g&c/]AWT)agu7*K'[+G8@W0WAkI47Yun?U%BIi,)NW@L$2Xt8iCGrrMW,^l4Tf;
%A.]phEAW1oAj"jfI-oc265LaX_e`9Kg`8=A+-P(J4&Pf]r_<amB'V(*WG2qelc5d?`@9V'D(OX\a?elA;jlX<7/1;R*Z1A$X+UIe
%<\';nDOVPEgI/)t(U7`TWgH,MkMVc[]X3^3Iut7><F!<97NMurKlP3:)eda%#6Nn=dT+g4,ar5>e+<a:1S$58!h5dF923)%kZQtG
%`,Qh]n2_+0[T`f&6ghmdkZ'^32npJHFHD'9XoDMfA^KbkQ`Q_ln"k"p8gC,=VO@Cf+ApD,/RBr#D1r>oaN(`OAMZY=s0CsBFKC^L
%fgce%e.R<`Ju$>sg6bE9FpP%ZYc1lUs,,^=,gJd8FVVMI3llpd4%"NF-42#+2oaW7IRqKur+K_nN>KY]P:m&D3`.GjQKDb>P+u"5
%(sR.Wq/QJC.GBF7a@4BVPEmJr>7[`3Ap299/"OJ3jAZ7&>P,L'FG9&HP4W!o8A41/^2YEU<h2dCJ;qbRX<7QUEKH1IUC!@(X"V$j
%amX5NFS/Ih/2]00-f+Ao<f_8sj`#n#U*fra.]/Vr9>,9L-)t_?$CeQ(=/S\0bW^jD3p3(%$Pn'prcQ_=;2(gsgs"<sC]s$(Dc;sf
%Tdka'MDA%WA$@_AaTP.K$DrR"QZ83L&2o@VjXV$'"u7pp,\%k>aB"g"71uV.OLFF.6aVek,KIPtXZ^rSYX$4F^hWddP`T%J1s*[e
%P:(rb2lm7lg)qf6<tViD"t0;Y$J,KRD!0N(LB@>)e.F'@XVA3$[)Ner.B>=0%jH-1<+U6dLGBd#nUi:LUH&c=bF_+cW3^=2+c&uQ
%o8-g*"-m+1BAkOXlue*1;.QD-adHGVecY;5^4$]5&nJd>rTkH`Q8?GIF15Ybmt5qgEr:/6Ejk1@N/I?mLk?>@q$$j`?^-c%G%IC$
%HGuf'10k)li#kq>La.*8-5/n4!&P;iZ?2gL@`_;ApY&W7?;-#J@X<VhUoGqC\LB'W,/$h;W_!^e2B(THZei\>4E;"VBe<(3/Q=*P
%3`26fCTKukoKraH-QSZ\WC;fk6*E_:gf3.M3Z*I[=ol^f1fa5nqiIXQ;-8o@=sfQ=BJ*<:9iOtpdj!He][h8'f*ZhIrVLnDTj1_3
%"OWT!8X\/IkY.k=n;T!,.@@(2+86f!7?Y`)4_1gCVaK9hOX%n7cj`#g24EQ/j"`S\cT16(1BV"tDOM+5/rO1AJ5g@e@.&U/_?KcW
%W@Em*;MEK87,k([1nf8;^1Ya(@%nI6$_i4=.;'G9_5A6EEb:2])CS=4e&>+'LOeSgKHZr@T,5guZDdQb-^Mb#8m@#RX(Io,eelNq
%bpPo!cdGjtZ-7B;-H<,/LOs[F&>F>A_6q<Q05AHW'&eRj,TU&$P9HSuS.`l9?NZ;r<q$;3A9)YS<V[8&09Ul(X=u-q&VD]e#nXX:
%C$WE5:?V9F,`+=FD4:G!U0[q]-;N)XN(%l%U.-u:a]4:ge&E!c_"UPJk!=hK:gJblF^B^0c^Q1#RX(o\7Nec[4nDAapHkZ\8)_T6
%p)XDSolA1j7#lR97:j1UgB9D$Z\j^[HC1Ws?@[he=W-k!j\$jP4onn`W`DSdH;h86Xj#u=VM[5C?]@b$@dO1dA)TRJ]ECL5N2iLq
%n)'q1Whh2'71'm"3U&^@5o\1T<PM9M-3NR\;UVUDZ65fND?Bt(eFe[@B*jr4=VjX19H:\,0+OJm[C>5iQGGo7[-j6=NQ0?[=1JU9
%ba(#pY,%aZjIg@RMq0ebAD#sMm?JkYj\4B6OTMH+nBA36-55/>=^J$>&/o1k,Mq\N1_#5k_#!_5aNA6_#FJ"=As%c]#M&Ee1]].Q
%o1ilJ#L$s`#<UOoj+3A'XED5^onuCeCF3L\Qp8fQEuMc]U5bX#Cb$ss%"oLDFk[$tjjIPa&HJB`n,u]u%8eC6/-3$gr5*5#[^SLH
%jBYgpa%g5?!%O;%=%Qpdf%)tg?kB:h%45ZmngtM:QVPN&F&Zn^dn1dH9T3,NA?n-b[ncaKm1Iquiun_k`I\?BXdKHho"BSpd7hJ"
%Yo[(m6D"PLT\"3WiWi_UYeJ=A5XH/r&pqK_5cg7ta[kLDEDraIhKca;'d8Ni/!chQ'ouB]X;Y#tKOD!-1tuZB>`nE1WhcGRH?%d2
%,.8G..blURSM(_XMph/UqE+Q_eP#6;9EYt0^`%=/Oo;4L2A`8(mNB6^@cgk?]H<m(\H&\QWZ3:lQ"MnEQN"S/\Yej"@m-W^XBre%
%,JfMa"s+/-XJ$h3e<g]F9Og5!;Ie$iNQHe/^os9T6;h02liEIV`N@<AnEh'dOm(b)ZNiP!Y7PYZXb5\7I<=aD9:WK5h[r[\6L8oA
%Z)\IM?=%2BJq),g<3D+iGB!ZJ$(NP$E3tdae614!!#6pp@,S?7HD>F;Q4QNL/Q(?EHD'"lLk?#kSgT73UrtB&@>WA?'M2f&,&no+
%N\p2Ip=.(&M'_;/E>BstfhNY"Wqo:Zm_+&cck3+?Uk9l>#S><Mr5UiSbC\KsP`<M$2T73,!utGqJ3R"d(3R0_!`q9/X6ZPA3`Z!G
%=;)?h*q^EmX*Umj1FL'8[LP,U,$Fa]*3TuXLRU/)Y>0?[fl*sI,_8)"N$5G6[`Qsm6][I*/C967URF1hZGBke/*XuX'?#!Nl7QUn
%lCXaQ=`m:@Kh(!fkU,gITlP/T+5L]*(_fh?RL?=0>Q?@WH3`"D@De@mVO1:A];U7o,3',;;NeX<7)$GkgtY1MUQT6t]6"&/_U@jB
%nU$OXqQ7nD.$efo\S?[)6(OMOM<;]C-o&ks#0@/[,KFFPENH_F:b4Pl]Y_]I3Do-o\\o9c0_7]dMe44>>-:tG,F`fB"1pkVW7f(>
%igZa!Uj4H3g_'VX[2$PRe>O9#No>1$"s&<"D/uK;!M7q6d.*dG#iS`'.pW;]0U/U:\A90,'AoE3;1ZX[Xli!E=Fp]QU*a3Rk^->?
%6T![s?u/ncA!0I'RqbJ0_\OiE+nT7Y9hcb"[e<DZp!V8d$iprB[>,l"$c'N7K>iF-JH[UuWke9AA8&c%=4*%k2ia.EZR53A&Z>dH
%:XrS412-<n3f6$Ebt?<R0fK0EBbO\uW)B182-M7P<k0.Q]Yf%l",o1j42.sgNKfS$&^=DkL.V\&^^#nbTI')Pq.;e)?W'ch[)<E*
%OViEU`@71jQu.\+f_rV-:p4qKNu#teSeUN>Dp`BrSW"_,SfWG'9X^SB\8-#\@*"XM.lYAZ5'h(I&]\F1R."e9[VI&[ll+q1oH&nO
%RHO"\08=.:P"d-9#;K"=K-b8XEUX.3pT$7[d?\F()@[E[hbRsLl>AU.mEfLj6YrKpHJli8[3#3Xa;d39FNpSTW[!s9;k:Jba/U#8
%'\mOg.%ih5PL$M]UP:`?15KmsY8N@hUO\Yrp+pg,Q_;R8DA/XPB?cmgml3akM6Xsf'YAV^$t,ufai+uOTV6&ib/jAjEWfqI:rofY
%?/"[=Q`'7phbe5UcPk^/9G%b4(/d'LB]=m#"'V8:D%DDf,tfNXE[sKC)YA-),Z6YrP3"3LY/V)lT72]Id7%tsJ&a0bQN"ao+:jpq
%#bY`8/HtmK':Da.\d,Z3+0`P!)>#rY5":MD&Z?[BgErBPOEuS:WLK=GU7'<H=K!WC:Y:b'*NDKTodG7:!.<<JH-3HIX\<f^7T7Dc
%MN+\WW\%uLZ=h#'PW`#a]t*I&>2"9H+J*:Ud&l,F_1:<!BSai"gXXY?5`@a(nV\]R7c+<%LWP3,\2HAEk."!Q>#t"<MU!Ipd%eT1
%7c@;h#*$):1$`4ZS+2]T!G\[gdYc^FDpu<L8>$rYQ;0c`GrP/UT(D8*10TZ!;XX;;JY6UhS1T_)j.B<Vp4gZk@^$Hog%1Lu8mmlW
%9QoQn6nfba];HeFSG^tACl_S?Nd=K!cbK)<qA#`Ylr*hA):d5+jZ'JrM*8j585sbq!%d*QG0NopbG$Z\Hk2!3k_\B2<Y.']EVb(T
%RaA7r"Mj:C1kq)!BciH8:j!jE9oB)dI*oab;>;2kRs)[uU&ZkY/K9=1HF'#_KH!X4L=+Q"0%K?EQ6Jdac`sgF7*fH@?oHk(N/"qU
%eaBNY@&b_<)+-:R)00;U76I#PRk92EbKS*:WN$C@gCbqT=gemCPk=fI2,9,*.ZFVTE(?"T@3:jG0jA0iR)0_l*j[;>-GlWr0&"F[
%Mab3C`_T3+@@-Ia[Gr=qj:?D5+=f$TrPIoAF,$^S)4Sb'2[Z&eA5?*#"bYs"XMI"^=-N,?.]&eS]!t')?kdIphbiG/Sb[peT@QKi
%9mN(tR&E[EfOf4j5/nWS:A;Pdq&X$Ak*H)R:?e5SF!+M3f?df^Yb;rkM27Q[E&B$]YL/6LUD"/HY^=K3)*Jj<;+M_tA`Sl&jk/D<
%rSCECMT5(mmXb/D]A?O.%u_'14ifOUB+Dib>`7HG/9g6*FqD\V$!.sq-;CK9#lN2F#Zjd\@4'9:LmN7SoFU\S:p%nC%[i-a4!lZu
%)Hfh3)f5ut"g6l[/2<k!Cc.0:XFV3<:kslh-c>t_.I9?KTuCo<@&?u)*208_FJ4^e1FR#_1#Q0uh)_?o76oQ:rMW3qBSf;fQ]&gK
%jc6-iTIpV3bB8ud2Q1P>j?1"-`D8m)?-?]TpmEAoU"EeO!!2DRif4+rNslqfPUp<@F$kkTjMko",WF;4&5^XJ0i3AS/(T5#C5BPY
%2PbR9Lu'occNcOL71P`U,!Of$=f+X&TSqj?.jfR8EMThEXQ$JJ=m3[S2dqEZ>=>d[kc3K*epB?5c*<'i(*r6N-_[a`DN\N:=S4s3
%#F>)s-93]I>#K\9#t+pNmNl%=[H@rj-MDh6$DD!>Op#iBOuV^"p.Ii;o2.S5=f/Ctpe%.!"68T](3uWLNPd$l7u9\.jFd7mGp8Gc
%-:T.HD\_I:hTNiFO:P<t?$[p]pRi3>DHnQN$XPB^+<&s6l/$bpf:0$Ulq,Eo><Z@GF[@0?Pu9K!'kIK+g"+5'n`VOH-lhs-3E0`N
%Qb9gF7VAk7#Sc!*8;89ARK,/?M4gtI)'bCt](O_W<,]=['3jTIV1JDYKB^!=;0.%FW%4/6dZ]OWCt9m\HP6QE%g:]&S0Gck+I[Hu
%7r+pC`7'';3p=[J_,BbmWmr>la@j%e3*M[U'e-@1+>QftP*es8*!$5HO<7W8f/Rea1@LIK:4-I(Mf1InW1NZe`OZ\]((E.(*$\88
%MX>PfL?'6iY+p3&oSt)VRU`1T6ba?R'*e\t^!8uR?U5Zr?PB:NpPd5tK7QsW)@`cr;neDsK5*75c>u]_koieeEtJSn6^o?""GTr5
%HHc(LM+jlSKMW3jbtP(XP4NtlO/uip)cf6gJ^1GcJ4*=g<:pfb*\G]N$dJ(M%n>(YT>RV&;BId3Ug3@R71Q8^Bem"u/CcFV%X$#0
%&>2@FY%CV?!b_$ZYlm5HK:R<&/hh-KY@SCrY,X''&f"RgUS;jchSZ!E:5q<8jG#Q8.5pRd-:710K-ODrVG\"n$m<S_f?gq@.A]M;
%Y*uH2QJFTBH76+rC2^39Br7ZAU+OOS3jhUO[S%NbW'jGr'+i2Df^5TnmPK$l64b[Scnn'8E.eRSO:meW"cK2\h$o5hc+X8+a;;fn
%aH4(H@i6#F_*SDnf6BT2aG/Zn9C7HG1E$q+W!n/^e%DZ"l>T/o2i^foT>^sFUZ!VtfS9HbZ0HFnmqQTB#J8Ve'OhqsO35qnJfG&m
%J_F[Y.Iun>5BYuj(=2=bIT&;#.N2GCQPcQ=1"geZA7TFXe6CrBD[?`G*=FO!!Xj%Ro1E@`LaM(N-[V^G*!RK,mBo]*=VAIN@TQ#%
%)37r>G`V</l^YdYGQj(%/:8t;p6'!EcjiE`F4GS--M9_UPTCB2WUl8Un:rf*dmTi?Ih+DsW`_DD3$:7D$g)q6*5,j\NZ,Tq-s9X%
%T>70nU9l=Ac"4XH;!tspV-k(o\0UaiH0Z9o3I,pK\>_DoW2)Qh;1]%NOUm9m>V2Cpj(LF6=7\:;KhLe!fAIQ'=G#t37bYD7Uoa\7
%A.;!.Z"O(n[DYj%Y]PYOH#KEr(*0U:2C6u"9:<VNU^).(23c-orAY@r1a^PR)*cN&VFaI5e!p]=6N`ds&:NH#\pG]9k#gjs=Q$*D
%?0*Et&rE=6BNmt7m5#\*k_%LV"3E\t:ntZ-EonWOc*;,E(G9FS,eYgGV"Vn+)bsHFm\!s4-E<CX1TGmgZrI@4T6TRGBP&-HM8<o]
%,afCK#B+;m`G8-tSc!6=7^-nNQPl=u9LX,uJXA$E8)-j-Ph?ec#`X83n!%S_Ane>9^qpr9%qWm6"&)%B*2CUQ<kj#n^dmCb`R5Bi
%)g`*aZCI=5*@l3^]?IQS_=A?)X&'4V?7tr2c1;7Qg+>,$B--BHV9\>Dg+O,[*ep*g]hYW$T]M2!7c^M9?<$U^=QquC=Q1&\lp7gT
%K`Z0.TZhV=orNtZRBIKj$EAg5HDd+@.V<'KY"KLUS`#;1b(8S,=IC+\((AK/gCnqJUkccsWQ`6EZ-osL&b+RJc\'o@d\0p]<$5>X
%mY'Ue3%>hO.`_q$[KAF&6rm#^3t5M_K#6A4b,]+S/s^S-">TR0><la?q<$ibcp=TQbQSH#/u#&j3m$p@`4n@%P7-EV^c"$8b7_WF
%?3Ni1#`3PpA.6?@Ac\PA6e1BL1@m4tUK,hJ?*fr914.<XYadNO22N3>Lq5t7XsRR;BO8kM564F.N!7WA7Hq$_WKnM;SScAUCl/p`
%dD"7@g/)c]PhR!B`I@qn2T2\c%07rb$+6f^=[/@0kX,(`p%->H7Ga.qiam3)5mL(%BUK%4!.(*q+A`^6_#mj/9HPf,fL`.\\fEVD
%:Da<#PnlsGUS167eD"%J%PS%o;Q&8ToX(:e"'!O\L+mo_McMAr9VNFQP$$t;fHnZlTu!Ap8Q\FqS%U?6&6lBHO>O3uF);kcJm(>e
%NR1]2ep,G6erY+jE3n%"gQ01D_=Q/d7-3;?R"\H,Ng63!?>s&QASSGa5q$t-C8&*EX%ZA:;7:@=h@KfR]mB:P0TY:L^+,2@#YO?s
%Es`P`Yn[29SupPmX+i?/8.&4MZ'_ScU<\Z,+gKaQ*Y_bQ)#er[==Jk10T06(fW.G,I&OpE-lj__;=.][1:;V*R\(FbM@'L96\isL
%I#^6]P*IHueTt'>YB35fTH9(>3=/)[*DH&)bOC]M3"&`(U:H\kW-k@0I1)'=,>L4=iNkOF!u2U>E25WbbBOolg*Ne!;!(2-]$[);
%hnDH^Fl[8T_"0WX7'5`s>-hDlZp7LIT?Q*PP+F>OEe>7TU9Q"@!<lh#(!p1r72^H'Jf`2HA"[EIM%@1[>X)K@gs'=`LE-@*G\<eY
%@o.\#Y?`VI.+Z7%QLH@;cta=8Y@>qU5qEUF"R]E55*`D_]%Ka'kmk.OK@m7qn;q2!3&-5hMjA*Mkj(';W`YW4^4J-tMS]#O#SG2>
%U)l4MR^,d8k_j8%2"'TX&qgC_CpF.%Yp3o,g#MNG!W-B8:co^8p@437=m(Y%&EH\%<X.Ai#\R-ATjXB-QWG4eI9ujWL!(V\.pXAc
%q>h\MDHGIob!`W]@gO`U%n0O\fT)8Z5B]8,cQS(k4=d27BGaQ?%gXed4[.NBeE.'IHq.-Q/]2G$\3/kdJtFmnZ9a1Q.hB]uO<f4Z
%&CRcX)4]M,PalM!$jF1,m8hn&NY@V%C6D<m=%Cc9fODq=n;LK3^?3A.=5tJji[;ct%62$!o>KbM//R3%gRg0'Pb!pOQ\g$Td[!t<
%:ISHmM7A<<&oo^CLoSBt+>64f3TF/4W$b?R4IJJ909dOSedd:K-]uMZRY_29%&[f.,b(9a0A3UgKAgae%LJs#.<idNA/L-=!lbj[
%mMAJ;-$p7PMbX(oRV#Hlk'cQn:(1EC5mp\W--@dh!/3.sP+]qBGD9M#UYpUoH;XV'7Am2k/k?#C8L=F"R?gHQiG9Z2,!'3f&E9XF
%"<j_Gchl8+YNM#WZF6H:b;,1;KomrR75I/bW*ZVLU(rL+@cb2b$$oUtS0B4%^=@#(),5Gafm&qJ\iSE[k`q`+e^kOW!%T\^SOq'"
%0@`G@a\;!K5VL7uPWePO<Y?flSdJ.d.Zc9BqMjt;b\otA;uOQ=k89@rpg`_/Uh\-B.;D9#$qWc)3-["^Jjr/fR^0qU0O04^_%l*B
%31>GE)IuUI)@/`3#p<1Z$\H?('K(]]L:<YJW:9t"O4Phhr:aZLhD[+jj['0@;e73J,8G4IWJmu!#/k6oOg:0XQZ<lo-W<VYTSHAr
%VWuC>4,/4DTg*5X`8#,cKeUUXTEGKmZ7)KYk=&,Md2.cQeuXXP&6-ufJNl^6I>q.U0n`-31#\jNLXnsYR#Nr.hUK^l3"8@!4t0<R
%Y\]b5j;ar1[O+N,?3_'aYHD??iq0M[!rbQp*/ep5JAT]35OXVLqQ[^K:F4Q-5.4Xt7=f!DJe/()KfJ!!Q)p"O8T51'(2+P]=pg)J
%Bh^qYd@n#j%pD4gNXB@C=La\CX501/T:<;lrkP*I6a5/&WF2DW8AL@,q9V.1[sTZqZC[(C/6RTB'NPnH/G65;73T<"L8,'Lib5%(
%5'8tV7>:5c0FVF@<.uNZ!f1<cGH</4Bb(QFin.ij/D`ua,]>ii7PNX5MRjc&aOmY78V-7XT#Zk!a.H/@0&bW8Ni,^DFp'5Ic<s='
%3_7\M/^$fW]-8UX$di,&Wh`W-AuVAsC%bZ6+Y)m_%766Zh'Ab.2R&r*o]ier)f]B7$=X\a@b"[X^CR(d?27g<-2$>^BEk\S@Jo=H
%l9TU9,484.o1Z2[5hs^%9EPH;ndT:t`//Q(%+<0,o[=VX)E&_i*OnqOC8HHKZadiuc,ig<l&j\7$,W"M=?/@#M&fP#YH(i&5kF_H
%KgaBHan]u7\GA]59hQ2!NshdG6PRsXO!%%lMSoZTR&C8rBo;U#7ROqPD!g6fhDkI]RcZ6t9_SF:fhXJ;,P7F+fl6UN8#Hr=`P,:V
%QdM27d#jerLNgEfL80T!:oboJf*QD7ib1HKO54agajhm-E\+*_h<h+MJKeu6!=49cmj:@i;?L+K9BfPpC,\CQ7dAP\6NVBD)eg`*
%QVTRr66)5WS8(Nm(Pp)P]Ku%D,CiVcc0$CoT6KF:1n!1%^282Dr'ap>(JVh)!#MU>c,:YdmnAV^Hij]&0N"$`E,'ur>pai_PYZY"
%o]ig-;P!USHR5#86g\bEa7b+.)P"qH;%'oJh(&AK`(6A5hnh)_g'ttAe^q`^p(68S=[:GDE<NaWB8ZcR`aD?(^#gj/P+5S*@<-1+
%F0CUE!>KI@@3Z+*M%cpDbk09bYFCid(e:u-kH5YfCuS3`,^cY/Tia.*F'XeJkf2I5%L1*;E[K4gdacl/;?@`be80[n1!>L/Gt-'s
%3I4s9RYKT<!-^rK$dk3J]))()X)J")cHj9%pp9MTmk14q\UO5Bq3NHf2s]d&U*`^/IXZG8jn7<gc.V4Q#7!SFZMsjiEr)-shu!<T
%rQPfLa05O?VnYGXDdC'VhM:grl<i7`hu)I.o;cM>qY?>]e!m\EbEM7ahXIG(<knXW`VF*Bj$=XBp"?gXDUpI*=T,*Sr:p-bjE@$A
%k@`u(Y1K#i_QQ0$m..%R&c]H<l,B+jphMes^\V@2iRb3\bO=VRrd8bc8m4AbT7-b;k(.]B-PtR>NBeH^Auhj$j4Uc.k6klHm5?hi
%,uaW_Jnb-oF&Vl/Z_nn;^Nb4ue@g,WB?q@;"c]s94apQgLS$I`Kr].lF+&B+jQb:WZSo`L<tB/?ac*qYhY!eiZ^[9hju.#RRq5OO
%2P,0blMB7:kNg=?op`]+5P<%B@\%FJ6C1b\hjiMm5/d"=ds4OPrciV#?F&4ief-]9LI6CZ`4eB[\c2R#qL?.mbIZbnhJ0g)an[mA
%m./]G(T02>IpTKke&IlG'9:\6Vff\%q<E?aaIs%Z17O'=ls;X52`&SK+5b!n-=_N'Qf#lYI!t\QqK2]#ouW-TB;Z.*lH:Jtp#Y<o
%fn0Bs9]G?VqYK:8l?^9GHIM7F2.r6dEK'_1pl1o4UT9:h="hm;Q5u<91^XjrhE6<!5?WKFqIm(TD;fU1Wn]81b/M%D[o_[77$[Z;
%qP8t[kFZ+P^"b,Z4/'kM0GNoQ0"6@LmWH(R0"9Hop:B$cQhtFIjl5=KjVCR'7s)9Ds#@Br-gO"#cbFpXo'GY^8)^%D[P#b2\m<g0
%q!'4ir=N<4$RFl$2pXZjs7u!aj&r2=9Ufs8?Jh?hHK_6[@B'(OP?0DESt0+MH$FMe/N5?8DU4WQok,6)lV$BEKEXQoTVB*cG\fP;
%])(j,Qg:-mS;&%JlX/#oG4Lli6PN!Hhs&\eeb-]Tq#"R6ATlDtFM>[O..&q#k8$HP]R4l#h9"pXldM&/':Lf9Z\3gA)D>I!:VV/I
%d(/rWq8%fuF:37sS+WiRPO%-)ji,d3qJs]bmQRq]#qhk-dFI@%S!1=M?[lTV'oo/5[JtUF2u;ilO7Lm3lAfT+/@Jf_5B+d]j6+sD
%hj'/jjji&Gc1*Osf5KO%0YWjJH7X*S:'s.B0:o;\66DaSi%7Y]DrVM`m]Ep53mZQ+3OXnL/<F@j#R_CMNODq)qdIVBpgJfqA&7j9
%_aF$cc,"8k*$-k'c/oQrc#t1iPPjM<m,n,_qI[i[G3XO($diPOn&Ft*RkIR_*n1bqQfDs5_/EiJI2bY]aT_X\qYL(H^>r$]43J/g
%j'7Xh3f8?McT]M7hW_Pj']kMob[nubJKKC8o]YT*r5nVXrRV3:Y3h;>=`e!DGoOAf\)@f5A3O@m4?IntjGR]hc0CaY,qA66g%i`&
%QhaBjR0sdBB7.!X2VD<=qMe+\=4]*s?_(PP^OW;%Tc3L3f[ud@D(5(&7k%Qp3gW#$qLta4`t1o?#^Fq0$iF>CF2!.d<0L#tn/[O@
%I>!IIMg![[TCk^Gh7l2phU1]h"d.CuQeh]/'('7C/tN61fp.J.`rQMgMDL]A\#&<q)pV*$%!U!kPHk)&(#LXr<kH8O(//?+rA>ZM
%E7Q!l5InF3T7=O<?_8sW\(lCB;tKm$JVWa^kBHZ_%Gs(9S@s;iIWE$6=C9q_iT.sQ?9&fLXh+b>[[kceL6_bE](;\drV5L]duR-)
%;Jiqo*-(;Jg''CBh79;0AgGGlo!fni"97>&9ObX0gS2+.p=$8lf5`8/4r+t?G3@@.R*<m)lF6/fICCo)lFXCoo48LqkF5]&o<ZX5
%ab%UqVJ2\%iG(palD3[A-?[!KOnHu*3dLGcm,mZ\94l_DDJE3"k<GR9oT6:8B-oPbf*f+q\(oJtdXp^G>664kXYr%rbH&f4S*fk?
%e]"T@6m0^^gSFAZ<bI!'FL=MD]%YpZ(5NCJ-.8-0:;_SQ.a?^d9I3q_N4q_l\g8C4DR[S_i-3dS(JF0rC:7!aioK[s@aT2qc+=n1
%,62=;)#'.@>G7^\5,Ll8-'R!so>Nm+AXi%mMg![[TCk\qM=QI\"tm`&gUUFNe&N/\Z=G`&EqSdD/BS%AE^sS9*lY7fk[\LZ/B[3e
%MFCZ'R=-X/4r37H\8CrE-sNS7]HI::EQ4_(ieUfgeNTj4PU2OH'o@7g@o4#D`O;D!`u9kVqNt_hQ:tml:ArN'V:ihTRRM#f(0k@5
%CUr3XH&ElZp+*CpL`<t4&FX]TRiK8>_Cti^Z_sE,T$#NSfg<'(pX^%9hl\+#4>q0FGE)I*;9&HU-o64ap,7:Mn+k[h:U'"tHbQrO
%CHKAaIWsTrHZ<mUY&,t!>@Wlb\_<XU]cC2/$Yt)tD9pc+>j\e8[Ac[[km%(?g\+2SI"Hjt-+d(c_#6!6qdWV!a(W::fH6me0q.Kt
%1p#,W!'["H=,UP_->b[fOYu:jjk4"lk?jgQr:KVoc3E(FK_Dg-(4;qDou5I6GTXO%hK!f8D#N2Cjhld2B45(!egEDK/-=:f[,'6]
%?G6Cpc'tW=a/.JLdes#AE_?s$p:rMSRb!rRNBO#Z2BfZ5gdcfq\^^UAXP3](e:)<8rM]['okr2E2Q),=%H>R>M+3Q,:uO(#k\__2
%G>Y((SI+:_2P#?;0`GoqNbq#Y%hA)AE4,%e4)FeXjKC1B>eOsRlPH`Gi`#k"5MIG.37?LI,SsQj%K#+X&=VimT[Cctc388kE_(Z3
%i#,[*FT(0lH-YR1[X/Jpq=\EALqCO)[f1G4\N[WNI^-UiEg,kJ/\+u9fr7((*J#k-MG%t+*>*5#[eib5IAYoYs81+>^HXM"hqnCF
%X_`4Ms4n.an%LErhZ(2Rj2'UPqquqXqg\A>hm\mmi;rYi7ggWb^!Cmq/LF\>f\64MpHIKJchFPqSY]QVl\/1!ZdtW"A3[3Bc`_eF
%o@2(3^41U\)B>7KG]U^fDEk?[)0LL`HM60=Y?nAmXtH2+ICY"ggj*@=;SrQ:rp'?lVG/YuQ1O-BcMP'KVNlT#Lb>OC1OAC*@XAL9
%hEnZU8aS*?]4)r<QgW[A$eZ`'G&J_^+u:,&.j'1h]j>&pe>1%U8+#_*qu5lU5G)5PYAZV9?9e>NlMBT46,3-MI^TP@3%cmtT)A9J
%iml:@[1m8o8m?1J(ZknM=eE1\(>@(]D)Z:.q;dJkg1)hVNQ.iC_MZ@<E9NkJp5KqQB$8?Rpor;gLR0[FVbOn:IV5&NgUlc^k.gf:
%M^GncZKU+mA7H9XE4>%EhnioLpQ</JAT)hH)d`5mQbD?hDg;*>RD[nNZ<N&"0se+C7BA1RJ(YcI[TEXf)d_C@n?P&TpiteG[`3ji
%[4".!D*`Iu*Id<+&s!`FipgR-^2oLc-99OmK2!lt#hX=)M'[5qG-HfLJ/N^<M-l/55+]n5NtuSAH,SY7hiHr52d`/H4_Sck?]J@7
%PdgU3g`nQ@0?7Fk:[RViS^=cfk\f0#0Kh#kVRK[Z4o3SJI;)X7o]+8hIf93*g!u/\+uTBO+@V>A.t7T.eikU6CIEcF:M4$2..Z%Y
%>\=fmo9[^=XX/$j:i2I9D>3SQHL>qKh01O(2`M8ulXpT.nuePZ05-CGN&nc3Zau2r);)B_H&$:!h-#uUL:.I.RL@$:hRl4JYEqZf
%=i3tiGV1V:cAuVa(.HeG]1l#^^nh3u=X"Ao:`SgKJB*1=]PL0*Lpn=fDYJ=5Il]Y\hV0c.8>k-d43%%$lkiCXYd\+YXer^GB7=d>
%f\8-hD.WEaN4g6A8*h'h1N-#("XIruP.B2j(4;qHY"qf2:<l)=3a36:bg3um_cZXPRF:?G*6kg`h"\'kc>HB!19\q:::0oYg%hAD
%j&t\B9l;pq!-Ii"aijAGYLig7eb\iYM1T]IrMJ_c"QJS7e\r?leGX[?MG5%.lpr]^3pmF!dZV`=&YAAVg]J#QJVNk`6Z8RH,6Sq=
%is\)\h6m;rBK06nm-*SHM7e;F\QLHqo,[p7dLqE2]BcMU-'p2@>:=a/)l(I.^]qJ&_p9E3?%;b:]^;0D1^Yju6FU5nh1M:M=WbE;
%e,$LE?@,'(&iK]/"ahnjcAi$T/XacTLO8^kmHI"&rOZU"?a;*WJ?RdQ.,;I,/DE%+_BZP.&!,<V^EE/^k:H-_?B6aSB?,/*AW*kG
%k'lP$mBsL<2Rh<#p=e;FBlaXbY.Za&fB0Mn0g<JDYXbkB/\m@u;0?cmbkC>W?CfiOF*i%IYKm)fX)mNFWH3upZQnbjJU8@Dh7m6$
%4o>6TA-nIUH>RQQRdB^Xh:Lg2>@iWp3l)l!@Ikoa$PV`JU^Z&(j%A\.1&&0j4,>Dl_9"h]k4S<GA8K7&IGSLPY,_CQhk$I1rp\<m
%8QRQ?:=!g,qNjY%c^-RTSM.6G9=mpc]7n5!GNKksSBn>XUYfSAmGo^"\e*VFlT@6"k2-F%Zh:_I*jp+ZOt\nW*Z&aAo_%d"f6i!m
%Z:GOo[GKD&qsjKVo_*>T#_)8(/jGo^m0>O,^BLYb`AWd[/u]3T'&E!L':YHHJrlUkYHGW%3F+;oPk4$a"nj%,`o8bV4**&,0228a
%JPKHPE;!'+H?SgnOn6e#DJEVO!dLF3H2DHP\U2bJ;cBD@BEOVamn/!(jG[uGj(7*/hn7-`&/.$h.t/kB\]6>slm7:dQ42WMOR:=a
%#>6c9FQU@8bDWFEoceDQmNYr;:$?!B6CkX`aBg:K$UsM\.,)j45Pm^[Q8?2&6IB#'=5WR1p<acKhdN&Gp2@EGb>m23A+tS5mtZ\F
%A#>087[r+<9BNJ>N;Tor,I0Smr8F>-ZT5P_?AF<q.qWjYRqB?p-bf97qX!A?`HkBIL7Pn#QQ)m4s*d'p]D;$Ylp2A,IlVC$;r75k
%EQK3/rGl.`Z0X-aD;nLkHZ:ETXo7)N)",CLZlngq%;r5no59rnm]=Gj*Q:eALe!9[o=1fX5AET\`sa[!-u6N0&\Mb3A[WTa-Fu0N
%h(?E"fEiVe<eL<khbQ^eo5*[3-)XBTm_[*"qFg/'p@QP[KV[uhQ_8Gl5J6EcD)[r/>gh#0L%ooe)0)-.6T^?kEUXf11(G)@hHQ&(
%na<JP)k"tf^JI,\-;XXOK1rq3>dO*-mEnARrB4e+#Fm&Y-"'W#I$A<[],a</G&+GW/AWne7(\ZRoQ6cBA/"Cb.GB&uqCu9WfPBAl
%\%_k?g%>R:+5=6@2^dK8=l#XQ:AWKBgHJ@,^FqH/c<>.RS,E99jloi.a[R?#-9EcZ@J/9^fr+^a[cqYk*^;H-ZI.SA;K7fhr5\,e
%bEq*<WMHbPHiEE.R]RCS*hDuaXclt4_XPCJg8lR52gsJj3Y_/YnbMue_teZRlTW8Xh1SnEUCk.M&Yrc^r0\LqrpK?F'gj0K!pSt4
%=-m:&?3k')5j2"phk+1Ls76/9T>0<5,6.3!T.[jk3eu2Me]l@hjTk5bX,l.fDchGZj88;YHN1\YjV?qQ#q00=?Q(Thbtn-%?e\BV
%fk<UQgp$XmlJMVO=?UF?I.J*Pf\Y`1_dOD1lG0s\"b*;?No,?T@.IeE%_\Xp%YA%.e3cIM=SS5g3^O4h.brOWnE5tgTD1-"*7d0Z
%2ma'!%nH7)mT<iA^S1HWdVmQ,qh7(Kcg[uqq$.pj5(Shj-dp^uL\\?=&mTe_K)RhQjtu53o!SFX"$VMM@*im&3d:N/N=1Jn8]3M9
%mO7s#5Ki\iN/iA(hd`W9Hha7V`ns_PF26W+61_981An-mV34p8rK5=$214sHf)4-L]#5)+[eg""jOm\"1fr]B[.FS<gV?P#VqgQ/
%>O6tCY8`5ISSt:Gj%9UEPpN63.c]Gghd"B0VYaToZ?gQ&[*L+XqJ8m*:KkCY:YO\)e,/UaeuYunhpg,9Fts#cqU<7_5>Kg?[SlgQ
%&+gO](Ac</i!j]`h(&0t@(Ya;0.sH1DFWGK[Y(IC52?au=e@mj!t]pmF:5HV3R8LM`,`CM>9M_Yd`4FRi8Hk<Dh7f_/>J\QJ[PZ0
%osEOu2tQqE=&0cBIr][S^A<!4Pi9f/4g(tAIs226o[?lScfCPme^Gf1J(!V_``6C&>a'*cO*VK;lD_PQ&u\g^2j6.>Q.qWF=-5]2
%LL7/Zc8d9]J"/Z*^HOkl`3mV65J97-p>=Fc8LM"pSml40qLd<Ws#.PHK[\i!r0s)Dm1h*Qh.$DfK^n)iPbkHG+5684+0joHX1n67
%s.&QRBfpKZ2VN)W&Tp=uBA1`-JTisLUg%"E_cuc`7h9P$qGt5=mDhsMU!R38h9U?;rN1Kas1)cD5M5_$IJmR2GP:b.ZKBKlqP(La
%U:<98PjeQjqLN9d?5>qp``>PFDR,k>a@F_@5,eG#aj-!?SaDD@5E1FeY&nD,QTG(=6fIjf@/*7*g>tWE><g,C[`R:[HYo(T`>NqM
%n%JPbDgVN?pL(c1gj]"+]lX5PBu21Mk8Ao5@$u"V\JG*>L/?5q(h7R\D][%<n+kq3'3o7Y2<iQMT8mVjC#s>#l(=#N!8GJ:gIddV
%nD1;"-eG9BDf]3nqY5au?FO2!DKi^:LFII$,&(OFK51kXb+\D<@e8OiL*dbj:Y97RX/l3&#EpMG-@MJkeDfcP&5s6WoXX[&kuE4J
%/bPB$RQNRu&naran"2_Ws8:sh/6Lf;9pn0Eg;O$DDYCNNl_05RULk>&@>W+J_$p8+%N<Y6L3BNL8SI-9-.g&%.j#`m%/4\\R@_1i
%nFN]MYL]UQf?`1?B[IWVkK]ASqY7BmAU8k(mcsX8A&!::[4V.>lJ)!\O$B[@gRu8M?(e*D,kDJ#cgo>e]3j"$iCi%dA,I@QmU*R%
%Gooeji.2gX@qohX/Rg:6WB[&@jH@n#Yh3C.+H/%$,5<hr&@2%uL"gQKF)!IG4q':p(8<$k$DP*)4F[#Re<N[^eNln4+Z/oB#heB/
%gCc?8*G?T_g-[LqY+'Mm[.U;CF0&1Sj5Dt0QGqUDd-e%pUr+q!dHcM8p1Tr:@34GoZ@0>?;O^5;O"&Kl;SuTuiKS5`*(lX-$*gr/
%pqu+h=@$n?BX@3qiR#jM?69]Q%jBBOLb&%`BYH30he407(U8*gdp:<K8!iK7=E0m4?hm5N8ra!+i3rSRHGkkd+ihUl"+H<<->ejT
%<1/%m/>9%6=H2#u_(jDRE4f_XXUl8uNQFm1p"%8-/N^]2K2oMfg'<GD<,uen`h$sEE;+3:]X@r,;[<0B6#!CIB%V9'>L0`:MQcXC
%$U[?e4P.:h?%1Wr/E)5LgUD+fVJ1AD8o('VnV)[nXK?V)Cr/Gs[$*$6CC*JJg<qS[D+@Uma<mqF9/hGUNNL9*Q5Ut.caN7oY%:Ps
%$L)$leNep>JM=YL!u#DPTapJa,CQL>0CAP1ii#TAhI6(^c".#dCg.1g>tYi>Nqi5Um?5N$"J8i3U^rgV]L@U$1dW$//T8;8RSd*!
%ZkR#?2/:%fVd^^(d*<08Mmf%Dj*##Ac><BhREok7E'sNbm0&Hc,s$TO;BS<M0sW4^A3piTC0f#F%'JT"o/VmWg"$engYn7QpL.kW
%I^2<3AS`Cc?AqqY2a:GSHHCh0N1`5%:@AEC7DYq`g8AZ.$)Vd>49j5F]1m6%$F=IhK;L>%B`<uf?"6M%&f%9p7\Bk@#c55!-eYq-
%P="LNV8@&Pd/lLupK6%ihmp+Hh[$]WbKlJi..(",7]"@?Udh%t&0f&$TPfL#N5oMm?n,P*IE]QrO)6CJYeRW"N=[$BTH0SCbI=C(
%jP.L!LEkB)H>8qEm<e?9Fu"XTo#$h>BKjf[BZJ*"e(VS1m3Od(B:2jmKRMuYb[5>*g!)oTI:AE<lE*g1'=?ca&+>^1&mrZaCrXsM
%P/](,TXOXCYn5/:kM"V,H#3]QE:pT/<of]@9p$R!Rm3]_*oNiI`hJq^<?7*JH^l#%!<=YAnu_F]40\kjcc-8HD6:'.bB<22*?5%0
%)Rn\4hj"`_F.;\*DUO>X:i1j(JD]+pR@#Rk[aEi'&su81:td#s^*?)`)@pU6#VL]n[I]hV?B$Kp#3O@pVNF99[_GK8-?hWnmK,Cj
%rGV(r2=ZGZ!h<]VC$dFhTt6ApkYQMZn_c+D,!.?`*s]AB)tW/!Z*sP)IJ_Mr0#US*&P#nbcD'fjeq:.NR/g0/#ofPBB3][u>C'a4
%Z!A\a.`%C4:/g2[,gWo1b,N&]bR>KsiW[W)XM7-;`/W[BG9sYrGSaa<aYi,<D[3Y\5]\1#'[O/"?CF.,(<;KMZ2-q'WYq5`%S733
%VbT8#RO%'!PARo<(X,2BJ[SY7.hTu-4J3!&*kO7fM++UQq4>>g@mtVZlUWPb=;=SZ=miBId66f@]_L?=&mA2O6GsG>?F]bL7r%Y/
%kN4F*;PW%Fnk0YM`rKumTts(pM0/9;$OKn:\8&#>"S6Da)uFqpf0u0)+dRRCgaXT=J>-ko[&r*6]Fc,h^hr,`G.6K^0LHN)e?n2]
%Ni8jm6%$GLHYrq#I(u3c&R5R(fs#dE:E@n'kG*9]D*<>uXZVbO"-o];ij#UEFKuVL'pBQ:LR#3ZQNV'iN5h,&D4;k-@>@:-Z^!,<
%`:V.U&H[]@UXOAi%beUW2V"YkZhCeq*6]VIPLI;@X\Y7s[5$ujmBNdf/P`pJQ<A!YY2g+o;n0VM>s;K+I"(Wq]t,=6j&BOZ[rgn>
%f?;M4Q>TkL4W^[k/9hXPie!2"q]m^"2<IVl57`d^*b)e\kR$2^='`GZh:QG$'t-7<.in5iE5YtJmGZLuLhj)gcu";S0T^,(IV;e'
%<jV2j"?t4DZN9&uj83=`%bu`m`\Cn1b"[4+,p\3gA+A;Z6U.sJqZLg'U#d$ZF[-!Ze9sEqj9KDA=4?s>$>eK4PfhuS;n+S8fi*3.
%%(O0ij+e&H6k]0jI@q-B.W.<+OQinR9cRRnYjp,\$<cS4Y]i>JLs5-R5NWi-,JkmGLh#IBP=BCh^^c1IA.dh&.3uX>g9hR8^&be"
%M5#ns!:-iL5\ZBfC`4QEk=csHd)A=I[DjgSN>M`(imoF#UIk2$KJ8F?0>Y`X&QX%1NbQ4U8'aL3'4>k]mg4i_+kcXT7#Q6)O_qG\
%:4ZqBH$N?XE/5HAFEHJ"fjXA"OQ<iYBGtA!kXqniYUn/hq'Kb0hT2m?(IcdMg=eIt&6pgIZ>RNmqnVT&]8*<CR`CEpD/2$e]D^)_
%&d*X7868s+%\S-`O>DWMlT5_\o5qsYQ4]T&K%E03`l=.04pAE(Bu3`ZLmb=BSaV!4oXuDXc>=4OGo7^2mGSpmK?2"5Hs8.g87[=r
%+D]@]h[4-'?e&uohuJP8)2ME$iKQ<Z:W&t?/O!<u4c(,>>r,&O?5EL(KSu5=[PB['e>+;T?"+6;0U_VNo*:'pRFN.]iEZbe;on`3
%$T:,8#O8uAjVR*)0a5dra@4ldSg0L>'&qj>V4-V=Rpo(8!o-0(k(*]u`YbtVp)&GqhepCp$hhS=i5Z*r+ARK#)cSmq9fBZYDMO@5
%>l:fK+VLN?Ds-B^[fb^5VVbtoV8%#0I+[(fV,I@K*]L':",2JMhilUTc(8=\BG)\`J\UNA:DUZ#\'5N<=5.sbNq;Z<lAh"3m0f!$
%e`?`kQ6<&mKp!:upd!ttVMSn^9BZ8e5nX9p:EEi,[Tp%!i^sWQh/W1j<e)#Ya..g2QH9M+2IIoXZ"-dA0$b)GTZK]i`?:l'amurf
%l,_\/Q38]$$ojK2/LT[aJ+%`V/:DFMfFO[_Yr!6b]$C<V60ae\o!C!3<Y=c65b<d&HFuo=(O,`REW)5nO0@._&%R,0Srj6jYhMp+
%J>;gscp[(+='X2fU@Vj?\3DO&N*$@4pi.$e\Vb?f<tQMW#HRlJXM5e>YP7sl^V$?g5Ko<m[jr$PT@K"kPKT*&2SHqU44`:!o[eG=
%dpHF!S"gPS'f^BZr'Otj1"55Ms4P=[qX!dlX..j*C%ustP'^jM5rA"6LjnYo8:S>92uVj0/OUNXZ:!M/oNU34qWg;Zkq?8ME?K',
%0GGo6U$9>k?#Q(E-Rs6!^O:D,Wr;gQDuXm,HIMR*Gp?BdY$\ki^A>ahjiR8_ldZg'cdp\i]]kJ-rp.tRq>&_<S44Vqs4Go\_c9gP
%\2dfB"\&:*]5?:sh"mC&d8]Sd4`[HIm\;r8`LfrOhtXu/Y?mb`^[l++j5k?1]^;^P0&%R5T07Pnr8d_HlK!>8Ykn=0rGd8ai<QDN
%q5eE^jra7:/C4L*qLEN0qcBQMnK$kDr;REY][r5?msI@'1R<RK*nii<'bs8Wpn,4t*PQkUFhE)_n_kK`r;I/uo(`NB8(\ZpF=;U[
%:k%h\F5M/\q!N%`%k(6L_j(SRq88KsK,+<'7=bWFDl-Nq?[4$JWr+dbP%]7C_uFn*p#@@s#(HU<Im*]#qWXnbJ$Ae=o/:,SDJ0j'
%T@_ZT_]pntEC;rQeY[e=\`+sNQQU]cf@#Bus8VuLbHlA1:oF&0o(C8Lkmq^_achpTB;`'WY-3:V^J,N9rcJ.Y[64;T>Ic5-@TYhT
%L@R3&%grC37/4+$ccHKopYT3RHIA-k0!priF^at%QRCBDpWi?nlLNW/Z^YM>I!o(`qceL=f7+`]f>#NGZCO1h]<bT=:6#c#"Rtkg
%eMOTEV?o3bi_Z+:4k0L6h2/"S_Zt@o5HkTQ5-O3JIsS[)h4N;c?T`]/(8(P2Ik/GH_X%=W:`a[#kNj$g!^4bAW:11S9pctFSW6DQ
%FX'=eD!W+Sre!?o?XH"o)8@$]pNIUia]s0/YFSX>k');XT>&0MplCS7FIQM6H_[4G3ktKO.DPfWm,H!0kEk1Nn,2"`U62l]SW<rJ
%Tk,dCi_Zt^@mK6R/MUH@q.l7T4&^=6bZ&<7oi(Y?s7s/(\b`N0m;N$nhu;frrh'5ehuED"rU'X^g].4Zs2PUDM(Z5[),@?B2rB['
%St*!Rg;*=To%UVjpoj^GWnI<j#P8J>q('2@r"&82pZ:Xfhs&bmp)FsJo&n!Ll\*P_]-D[CLGe3"XgC-0T^2?J[U4IZAG+LLRD!73
%X`oZU4flcAZ(tXXRfBSWoCK")m>2fU,50foGh2N9lh1,&>,F'>&?'N66BXXhK^lk*:FEi(%<34VSW4#:g]!>:r=c"*C&<'$^dpZ)
%B-kqTDVk:%9p<0$3O'r:*\53=^a./Edt\pKYZJtj.H%%R`XJsj5ElT:4SS\V`)_<_>M*eB)q4_cB1aWjP:'GVJ,hs("U5<\)t5f<
%pi@CSFQM8'Iem85[]VrgFB.%a'9-lT?NPF)bWa[`k'],@Vn]@OmCq$,g)SMV:oa6>B'?Lb'$kAZgeI[FpP!T1ZCuD!9KEPPFt.Uo
%<.qn\B4F>/(?.2Z%RHa\E1mF#/7Dp'l'(#%g,E>5*5kAiXDQJeT=ai$EZSp-`H8d*r=09_:XF[LHe7nm]BOam]D6[564l91MU2ap
%+c^G^UH!RSJ)<ds"b8905d8@[2.n:GqBLh`AlVl4]#q+KJ:Z!4DYH3MJ+)H9+e[d/QlT)KJOnq5!Ws:Un46r+B?3iaV:;7ZG4??6
%%8e458?lU6lqVjqGW[t@E'e)WH>u$gC*^dbA24kD'M]VXdL5q@0X0>_p(Ycf1A6lN;N'?@k7@]iftpLINWS?0e;'kK6+?Fm$YXsl
%MrZ#dOpkYY!CPK*Cb7?7T^NH!*V@Y;Tcp/U3T1AXbRAa/J7e;!LYWFrmiY#bfBX[e7o2$]_Vt\'8manS"re`r8`t+K_f`K%AF>9X
%/Mn)lNLn;YE(O*-+?>tDdFrCf=9N&"KZ9Q8(O@+7"h/]tcl6)&DC6kKDn6*r@tK4V$nNML4Dlp#B1%<f!PMd'BVOfH#a/_;g&Z./
%%FRhR0C5=e:,(1MrBj.:@$OXs2i(d8aSg(b%_/.WknpYb5fYu.7cLsa0$8-c`JZ]YET08n`9)VrGOU5$c7^uaFMA(]dYW_DUq;>V
%^)N?=TP8PCJ_=l][gT;a3'[`^VcSP(KMAWUZll"I!PUBX4dQOgl9Y,/aU_?(E<O)!a@FTC;QeA^!f(P+9G6\81U/Qf(BJU8Ft]]3
%=E935DD%e7"t_Je/T\c+>sUKd66`b//5V;#;;2AcK@H1i:9pSr^rEPt!n1Q+5r_?;K;Ab-?F!WR#>?d?Ci;gI!4UuB,meJ*,H8[0
%*nf5I33gr^o<Mr)(M6?dd(6X&CgsPV+QY62Rt=j[*518q'4J@);@_j(Oc.shTS,#W*8$Ar`sH/J,EY<6%H3#5i!2_kGnDENd->"9
%dH-&Y%1jH%++]t+!;5`8F)5_!=rVEQ.+.%-9Z0Va$`ZR`_hlqtZf[cQ_Vq1<TMQf:b>'Nj#Nut,,=O+>>37n+$4R7CW6jImHe^1?
%EB0+'Fueqb[$4iK5Rn>#$QL@$$X*a4'4iPf2[.h94,h`H_/Q4kG7ktH$"-EA@%,%<37Nd#MoY'Jb^#KP"RILPj0Z.j%>oX#$5\7/
%&0klU*jW9\d+*#(1]]"D6j#O=[\8*Qg6H`BZ3Lj@!+PR.!EZlBkphab[/b_05]bs.#kXRT^n#-K*Ho4:?C'_od!D-Y59.q%'GjDO
%!^U]o6mZf=N>.7&.,E:Xfj%)=;LAJP(WC,Ih?6.t7XC]38DqLd'>6iM"bd)F'?hkn8N5E\78lJ9=DAGc$uLaC?:YEda:+'Eq>p.(
%&c`fi^oh`=cnr<7kp[sP\ne&W+&7].$7qpU"%d0Pai.).,\`[9hFTMmA[jMs?ZtrM[lF[iHFKKY-SD='$n+eR%L?_J^XlM9b(+GJ
%8cfP7]<EENn-[k>]&GhI-RktpkL`?:!DXjRcq*(kCuo(Si]*I#,*9)N-kPu97[^bk:=99<ZoTZ8_).fbi1ae7S#,BM0H0ur(4.FM
%"U:jMKkAa>1YF1im\G0mVPfiT/JpDqBIKNsfL$dqq*6%l]L]^GjYTV9Jjo)rY7YY"Bc,mGZ9UP:EKcst]l2!l5g+YuMK[)"/;"%l
%fApB@2O5@R/)00.PP%2VMEoC(^]%#uP0eGn6!<A[oE\kq2%)CdKno]d5c>k^]%ooG>k^,O+"4(*['66Ji+>PmQe.)TV:,T:4ITc@
%b=0Pt_F#Y(?iT<A#k0J]R>bMU7[:mYTl^pQrZ!!-Aqi<qaG+]^IH,gM6/.MY7c"mTbCI%[Pe+2HJTlgZLGHN92TBUDQVr#17sC,"
%cK4!M::gmj?(d+g8BV$t&(VO>iBh9&pN;[epONP9-Ijk,DVQeF!L=JkDIN6&JW'aC:>4qdpDXu3T'QD5kMT*GKKq[$r\BM;NBgtX
%[O#(LN!&O"14[&[^\AnRed.:`0$*0u`Z9_8>bo+>jX@DfEKk36HE3jiiVn1H09N*lKTcoF;?4lp-:2d5_`YAM;-9F8P0kdTFH3c6
%E>pMS62gL^+Io!5!($Q:S<OcNTHNs-&Y*)/VQ?3#027"]kScmT`,9tU9Xj3'n2qu^E2ao^b&Yl?XL#G?*fHY4KlR<pZ`a;6^q9r2
%fTB-,7Y9Ql<9h1mZT\!](`lKP]B>$%`pgh#o/X"f3H;h5:J\"<E]X<>^4.ROBF@@7S";hU9k9?Dh;%Y3)!lFT]mms?BXciX=4<#-
%6./J7aV<&76LrVaF^O!104E.fXHarAG5m&ar5XMCmgo5'!OhrR0KC-9)#,Gic/1earC^;CG8e>(/uV-gTTRR"ru(."G5nkFs6Ta_
%f36=pfg#H?r;Aj2,X9*jbPs>=n%kun;Mbu=VT\d%f(-F2rEG(q)^/^1s&`%A@eZ=4a%!K7>7Bou\F*]$87MUgN5mK)&+<g,M)t.h
%hdf:0]Q)?hN-;ukh@uinF6U3)h`lr8FlrCo^Pr8F,U7U0F:>$)r]Me<T\05ZrRafi_[/$!?I0SYe"'?2W;)0"Sn#1j8tXa^3h=cE
%q^)]ZMgh%"mmb3;Fh5>h:\;>9r-,2<?*N5K5)*n!H\r"K5OS5!]L6Ao$J?$hj\?iXk,$@(/+8eY1SU/;H<F%)S@(ap8M![7p$g;e
%n@54Wp<Wd1TE"@Es2TWe[t"DOJ,\@*r#bt:n,Mp-]Rq=*YCHO9i8ak2+91^mrqCV]UHrD%*!7D5KOq^\2L9W0BU,]r)#8r5<h6DZ
%].2J_ZBo-I83[q&H>L?>oRW?FI(>J)7??WZDKq[J@DWNu(8T\-i_iRC/m.L:&uduVT(Z)>&$Y,jT3C],7l!#\920k&5btHS^n31`
%6.9O4S4jbbAB-XHdu$AWdscN'[i;K:Zj:d&_KrLp>3Jg[5E0mQ,K&ipm!JAFhS!!GVt9Pjr+jH1)U6uPn+;3V?Yt#Iea@I,T-&9D
%]l`#jBt#.TVsbjtKF'Wu[^GjX5MT%qn#,:0Z=[u)AAf!p18JOCI11%Fk:%Y.i!cf6faiYH)#jp=[@@5Af5\Tj+-.hWG<>$E7<[EG
%CS'uQ5$m81n:3?^GZ,Qn%sQd6qf'#!dg$fmNu+U]dc'3\E;R]F<+F!\j%O%[3'BusIn\a.o_L^2=e:DDja)3L(P_@Y31VTRS+l1^
%bk6Z^O1\(e"QLDg"tntJs.3E3iiOf"F9MO>cB]6KX#Pd-.8EZs.pjLg@,[ecET!?g8sf,j0^#!n=9k,HoWKt(c7d*2oY%ol?Q%Y\
%\ROMNCF%;ks*ba4(,9@7E"n$d0IZtsYiq\4q_bV?j)AIc]8=li`SY<0idrJf?>c\0B/"<,9aOkLiV'p3#I7i1$P+7?H,d_8TP>4d
%VCq0l9r]Q(2P;CA.ONMe-<P,rc4&%WotkT/>f.FDZ/r#gCG>DF0q7+.AO!B9a94m_^q<"P32,o$'2KZ9^7i%L%^pBq64SJu9`LK_
%"TZ0lCR=u@nF#N]AHTT3rg4c$E0l;,ReW)i/r=\,Z9W",pia-kYT6AlB^>G8]k4HSQW1j^0N)hV<)B47[tU%D.`niirG]sd"EY?R
%nF0lHl;\h74C4(CU1K9d06Y3M'@X\".9lV*pQZ^7Vm?lFRrD$"Ff)cpS$Ml@jEb,+lbF_q=oA\Q2gPO94u$WL@LPA*0DFZuV=jK<
%JP;[<kZ:L).`>o5E^V+ur!2F6cih-<*H&na6D"/$Seh&^R\`e]FtpTg()ph(nV,p9C@ONcLa:7(G'R8A-&#Zuj"E*%b6-(%\I/ct
%J26?^'_8E"<"sfc'q$1=<BC`;fAI0%9$%P6qW&k+eip#3&;8+"&-u/;E1dd3i)?+qFY3qgOHOLKE\*-3E037R8B+0@DC<n_Y>*'L
%mGu*M;Tn+b*[8NN&i1m.hK;B8:@o:JYNP]giHC[GnFShGdnDfO!jaF(GS"f7EBR.9R';Q!fTmh]V%"NL5]qsa+4N8-*)E?aq0I@r
%3@"jE[JUnnS3VFP1b*L7X1=c"!tZJ4^LrR_P_"V&4.@uuXPB#cn"#D4>6tHUVeMbZRuhJggY[SB-=ohkXZbn05r1/$briu\@k.T`
%0b+pmS5M1DNhX'u>GA4!)TSkp`L><p99cQb:`Ihh[l-fh(#pep:>6Cg2p$&+P3(C"e:OgkOc+lAP?qe[qZPrf';68r81)G,LjYZE
%fKT(Ra!gl[jd&$?Oh;o9(+V2J[PG*ild'HZfu)8kJ4%<EfM+G`HFR;Qj;>YbBsl`W^d(tFg)Yb/IQU>Kk`cP@VSH&81O;E4)pI<V
%5eG[0%#]Ri[6$pif9#"&h'fn+mG;!+bWUi)l;/cf$qE6FOLR$US)0a^CWhA6M)p']gDu0epS\m1+]LHTm3hBod.LFg^\/?:i5l*+
%jqXTS#>Q8h:8.ip&_-nc,C3W240;3O:"al**iI9B&SoJ@34+OZ>Ah4`ZE/U<PhG]A@q$2`nU?X\O/tNii,r\,h'Lg>HSP.D!#>]8
%C@XRbo0%'r3q4U]/J--l,B7X!NVPCFDoElm"L&p$Q'D?iDg0)*W#5q"h@V3#l"N08ZD3h2.JYZl[Z2VAU6`FEEm6P%Kgj:$Zoi8]
%HhgR!4#+3S?QUj=:=)S:$#gLW)k:>Q>&$=,kuH]$aN=mR:2[o1a,+AOKP(f*"_)`SQ8>1r(VA^7oI:Dd[\pP@,T-\-Sm/"YO_R;I
%DqT*WAg_7F?D61lprAqfT#U[#peM4L75c'&DnIcQU[rNN$."Ng&kpu)\<fJkWhIoBp@HPO1.B6@8]k`!luYD*i@ZdYp7tMt/J^?"
%JQ6YqSsf7_Z+C-m+`%N#!]88KJkEQE,8^Qtf4]QemI.H6[aYrB$2<-o=[s+[`=&H_UZ(_g25SMNJ;e%)+rRN/luCisbZ75eB_0L<
%\2s/+,,7$E',ce_4V:k#ZgHF$=l5?tA>B*C[bFE36eLgK)-p=C6YNo'@(;_OZqut6P'-_gi1utrgZa+,g-c]j"^M*FikE;tYT_@d
%gH3d52@+6BKX6B#iFFr#L;7>l8l5u)R\!s3EXV`acpJ?cYF/Tc)uTTi_MsSMmKka4*r-aHBZ!H@l27EX84-!\ZF4J#k*B^PDIM=7
%$<3ZT<k.6IjSH;//U.)sPf,j>:/]Q%>"gQs^:Ju:#4LG(:4P!@P+bKEZe8nOQJrdf&JZ_(o$&3RJR074\(;XG@>>[W]BaEp2f),[
%GCi>UA<V"8o1m)"\aMM*)di]Pm6i,H'/Y:^)\X5*km+mB0])^Vj`.V1ma*,%dM=<HRL60XHhr<RI`RW1SG%OYP6:f)RO32fZtV&W
%W(6)2frd@tI,eZoPKV.!T<?Adj(um):9o)Qa]K=,a5Qo74/'*p,r`?U[gFfK'KqUtTq2"K\%&rh+OJ$IaOas1H[%dR)Le]'L\oX(
%Y\S7Q#@Q]nBf_%<?8MCd90*7iXi7VLO"2r=XH/r^(m_gZbIL^sl\%TbKXI'7qGTcS0c6t9MTUOgs++V!(63+!R;0ZAMO_B'<:Ti=
%:T8D<Ubq>Qria*9_D(p2JRJbb!lK+?"T[k.'p>E.R/[.)bT8cFZ8V2<FbF,f;0R5u"s;>0n42G/a!/thfd"`C2K2*Rh1Hbrct^t[
%jC"M&_68=[2<OE'_shGuCg?u[qr$'\qAT$+*..0@VguPb;,@"##!V:(n7s&;8S]nT'DQ$eXVB<mHM-4sT1g?rojiGqWa"F`e5]Se
%;Dk)^#I=k&9uX$N"8pl'?d6\Ykb*PML>\-E'sfP_8+`&dN>M5HE,CsHWVEP6r/:=qp5A"1N[n"Y`$K/<'Z(&Eb\Ab#l\CZbQ&HUI
%JDRkTEhr8S-"bki3g%0:HAH<lSdk`Ac%%OK`"r&7ekre%<*qh:d'QgQqFe.r*?t]L>L&):\asN2@cj&#YmD<43<?>$J'^U$.;[5,
%.5\+iaWFY]<C]:pV#o*!fLJ0Cf>6o90N;o'#C^#3l,F&PS>&n'4NUWl%_E>%`%&1!a79+:Z)(s$cYBgJ$#=!AX3uiNUpJ8U4_#\C
%$77XB[NQ[g-3g`?DdnSD3m/@uUDU3]aDVVFMZa^<l4De<k*K$iPq<S9Ib]l8K,L:9=Y/2LL[`r59GUMJKL9l"s7M_$Q-3[Wd.un&
%W3jhFU,>k[)dgl<E8SOGq$pO?do4nir1'Tm&`:XTb*nq?SaOahXhj=!d@WR59$%Z_\jZ-1jUBArO"k8?<k]4"8QH57`R^0Z,IVcp
%7rGg/1il'Gj/gM8noitY;,hQ9G@;;i?*K#;QF+ud;;9K7N5W-!W5i^O,\H1W7j:tbLA2ETc0/MjRK(-gHCGdN!nDlO-CGqa9=14>
%H&lqR$g5g>V[@1UoS0LMdsn_8R).rC+D*!6(GqgdYHA8J.9!gK#QK]qRFfI"8O)sb7qTj'Qj-K&\irf%8pk"r]5`M'h-^t5JgD4<
%"^3">`cU24(T(!ZG*jHA[p[45,)2MS]d@@j:B"XeO]d`JkK>!&Dorg=G&gA5L[qO`*1$k\\MSjW7[TE'b\cYf0i+V/^q;+/#4j^V
%*p+Q>j'Ap_VWGfaTj.m32hQ0&ZF(RTR*Ul0ia9hlQIHmS=K6b)?lAY:)p=Q@8h=np7'XU*h8_^r7Qjf'&6Z(iMCu/;[ckXJGe8Ma
%00]fF]e^t>c[Kg6d<rDBDQHoBIq+,BbCkkDeJ^>[moA"V&h7:Ih=-B*1jB5Zpc8Xr=0eX,_mjj)c6dm-JRsTQKlS7c.PrlV7\O%n
%)[^(;N%<+"og"'ELOOrp<nm[3$J1=lVso(IFUGm%qlL-<LB0j)fJtA>MeYtKlK+RoCcAt,'YZ@L7;5YA.]VgW<m`lcl\Z/^!.@Ah
%$:V^aobF525X"^Om>>HW!8&^o?,aPEa[.gsD1bY7C.FOeis[T*qW4ZP1tRPBdcTb<PV.s5W:Xn\-Y6]DT.)#8T20%X,?IcTC3W?R
%BWZm/nor'PXT&FJb)TB'<Hc'&KlU9:*gP3"D57$6kC3IMjgH(7-r6;q>brj&B.C#45$&VKl%KK=kC6G`XKbWJ^\\79.)3f%nUsW;
%auH,-<RKH>WN)go:t;lHd].5$Z`G)AP[CFn0u$Pe#,dAoInj4tR/[d%B[iLE7mV")BYW*+O5X,6S>/Pri'S/Ua7*5+SR,82l=)rU
%=4c5nLq9?@\(/1blCaaH/.(uFIo'27BB+sURgbi+m:oPH=>ZM\`p$P!286B`9+tGtFT@CJ9f2I1@XGN5e2=+rk-L3lBnlE2WL6Of
%?^bi+A^Oc,qNb0'C72KlWO8jN2S0a,^Z,:E`pu3h2I!1U[,paQ=PI$Ep=eA7;:NmIN`!D;AGb*P.M@Ka:`BaN3m5b%ee)6*V[NKK
%cFRQ/hprNnN7?Ce23%&$HT9SNEr1H+*Q&3>3L3b1[B\suDiG^ZH?Z%odYE/sM`uP[SFgC9C8,Y0i[t+:LZS3P:`Z:X+4_L"6(KtP
%%2R3TdQhmf#=CK2>T#:,e^RFCm"U8?DV?n*f#)FDC>&P@S9OobUL$1R)XX,%hrrB77`N@HT,BjeM7'TgC`eX(`CXqE.=*PbZ_H^h
%BM?"O11mhiZ6,roH1tlBSl/3[Bm`gI3o.*Z1`eW>VTif)1+Tg+Q.`5K)9m&k3GOS'**VM&HF>Ug?/H.`i4DuGY:S4Xq(hug/]QFE
%d6_M9CJ/3CLM/77VQOKE('5u/0]0rRf"(2%WlR1%<cbZ0Z?diiQSj66oW0@rfjXhqjEakBN\9Xkg`,35>r7'n)Tid9Fq%ApmT`fP
%c$?%;O"(VU^'0=0lE%,gd+E.VHE/W"dk>Oj+^VN5G&Fp/A;fnmgJ#.l=!*`*]03)Mg-`L5g7FB"3qg"uP-tIb_ehUPPZii+;;4,;
%VgdQ[]*8^7fcA6r\mACTnPbg%S;L>R#ABXYF55sf#2C,0Y%(EjgBQ3]3UNb?cBCV<EZ%r5Zch*D.pV=`>jZ9.97#4B4NC_4PJKs1
%%'_MFYmiHV.V>dpokLU)N7PQtEU\-.DSrrIE-q8A'\%*d?G>fEL?pGbjL@"U:D9[CMPZUdONHiPq0:-Jq$d'`4Ni-5a/^a[lsBQG
%?hVJrc+UTL>Qh]lW=#_S:Vc$I/3=T=0;ZI7p^3pIS`sVP>LnE5JB"e8YBPG.4Iu$j'&&PaT'-sfP?(HE57d9b!7rZ*JOo]O)(7/X
%ftbu+XUcC`T7`dsgkc8'L5A+h0jKZirMD%dguhq&O=?_bL4Y7Z2tW4kA4-=A,%Q8OI_"'`c0"dN*;VX<_khdT*$1tNM=>LLoL>pY
%Zo&J=41(-=:5q[hS(0][ot%3&A,*Hj-7>@0Zo)dHU-IAj,,PgNIU_0VAJ<8UnRJX:9.ONLj4FXa`%<&87m(N>K]9E23>\<Id`mHF
%I@2A9V2nP!=0bp@h:<d=fFNkIUfA(3-=\*L52#_NU<06?dn+7X5Gsb']'uR\VQ31$<'$Z"Qqnet]?HjQ3ii:2B[U2Z\<oGsou@L/
%c,VVsno9q/09W$Q`iu%I:%`l^)qF8(ZAl&-4T"/5+*7::r?E,I.ZLuBIF6:kRaY)>=8Fu>K:fhh*]PNR+?Z"RK$JH('S:`p4BeOW
%dmae#7J#iCW4-3[@V?X;([I'W^%`94@in27I.7dpP$]:_Qh'0H'DP=e/B*jgPj%*"d[/s&.NO[&D:uW?.a-N7pSHY0pWaMT41eHS
%WL]b]o'4^)9k@o^oMqHiN*!oW+*Y-WZ%f<KO%-9aSSB(N['_rpoh,(/*E.>)l^iD^:bV]fV>C*P)`8&aVQpg2b53*L[7I-6XSZ'n
%="e6&()NZRF/DP.[.LVl';0&.kHdYDe"]sNNjDQf9k:h"m?1?0DpMM(EQ:%8\N>XcA(9alffbt[E&mgf/ILI_]#hGYga)QH0AGi(
%prY\\]rt"G'`-Aca4PT@^&7g-*pl=#XD?2`1gU-:Dq&W'C5))Y^397@6UKHV@@sm_dVW[i/WE6*T@MWMrGd0m*9`sHb94O,XTlJB
%o6@4VNkU;-8@(2ON0J+q9=A(Cq5`WJW&\RX7n:Iq3qdrkRfL^CG-ZOUGPUTE6C?n"PKF_,:,^?MrR@7Q?.3i`1H&OZrRI;\Eu<4q
%XnH>7RRJ3;LY\)`QYMug*-h)-_GT"_(M2p0\QH%qa//B3mpB*6^9?YlUAtbP+/1mCrm\ZAS"KXA)dIYGlcH/pLq6ZcTD`^L86.k=
%cG_]t.,(0;-5*7o2EcC:\(0cVg20`'qqd@8G]7;9>L'ic`mNKl7\RWSNgH"-EihRYmu1?YTK.6$+kNEQ*@d):__OAE/D]HnDfDUM
%HM,MZ^P8,SJXmMa+@@pQ#uhC'HJ7k[<`W\Q:"u+E.7S1La0^(oT9oHJ1s3uk\<f#p'TcI8=6n>g11k)%dkQpMG4c?kUNu#L=C5"(
%H%,aA\@mWpWI#<$M%l4i"*[giq_OW\_bFX`m7-Ojne!r,a6i"9$*fs+Pq1YNAo4a+T9;JCB=Oc51'UoJXaet]jW'_P3>OWP2[eMj
%Mrdj(8Z.P$LR+-]BOm9ZdMHVn6UbY?=8:>^,KJ![SP%Uo*]9<Z-'"T15DcoW=%3$MM]i]em8&jChJNL1,5qXeUg)s+Z$E3EL]j6s
%)K>(1j+PCGS_r?T9KE0I4-<G<gn3hPihm`:I[X!H2_:I!-_)!m&>?b4&l)FWp9W>e>Ab'04?!n+VK.#rmUkSH4'I\LRc7H&m<m_\
%@$U"HHmd+WQnYKm.:%6T")&7Z;M0G_P*gArDWhbBIC%Sc*+-3?D&eEA1l8K>E/4XIYt+otSNb#>oA0t)dN"oeM8d]1+'#[[<c6#S
%["jhQ5i_gj)99k(X.kM*S:,l0Wci'7Yn,:`3g>V'I!RN#RQ9I2\5:'Xr3S:-B8$MGg4igemc.2&n1B!t8SkL=CX#B0pEa"ABb#(^
%qM7AFJ:S!Chs<h,gTbp3$l8eBi%PD&*9Ymc]7M"MEi17WS6J't[iG1][u=OH@$5BGT[%AB`n'SKL)`RYTT6ss!G*cqo"(JiR`Kpi
%b)e^!lPTfLad:=;;K`Z-crLU1'I!rX3%\K*Ml:G8WC!kTShO(Og7/jr>?=s$=GHoO$8[,P+W:DGkTM@Q#sa-('Nlg[@LT(7e>GP^
%R4$b0:!!DBc/,^<!=-)R@jmQufb<=iO93o=#5j[WNujb7CQAM/;TqS)!NfhACDXQU(MpZj't0Pld;LWgQKTQ6_\e&jp`t=.d<afm
%R$_%JLZEEQ<Q0bkUZ*l+gPokq*\/UM[H/QPkkaEqgu.PKq]nHlM90D9D_j:]c??RZ9)Q'mn`:9ip!5P]Gq)!6fDl@J"1Pm'feEaq
%[DO=5/JS]i<'igkPLQ:?9eHIf!p@7n@LP2N#BE?Y_D@/GlXrYnSi^:s#KJ&AM\>Ym[#Z%5WWlL#.1VpHjQAoo[grQ!"J5IM3"R/7
%#(]_Tn;+nkN:"8@rd8^BbFVsb1._*F07YtfklaMo-<741NqRNP`&@_WhEOQqApI#`&(Ei2H;uU`p4Q'Ni_oGE;``00+(#T0<RP!R
%U_nOal_(RO_PWWh5Xp``e[<eT_(#'Iq'(*)qo=\2eGX*"n`QU9=Z8@V($VOI2"CuJMg%&'`rVWB]f7_J@2&2Y@YN*"W5#8[X'N<s
%Sq4kE[,^keZZsYWkAj1%?MdY-f;IFA8e9k-C<Y&?\AkjS1?!8o#]lu%A<4]qBpoUaKQXLX`.$!q9l.L[m\9AC>6SEqNE6,WUhTR3
%:MJ&@Y@r'ed"9l\RM]Ha/1AoFLETLroQRbe7:NRUcHm1E@*!QXN`9O1CdWJ48;s's<j\PAT=F8Fd;&VqmJ0nS"%^!XH3'aK)XMKh
%+L]_cQ`37(VIPJZc`1Ep-4A0P/CA=P8!g#(G\Ah#L\DK<[-m:PK+:Xl2[qkOUHa*o!VnlZ\mi+kqC>_gjPnZfDfcNsAE"BOAC(JM
%TV..p4tlkJm8A-`:JkUMe%dW+aDpRqOAj/*W7F]d>`*IUmeflfI,;%4T%@hBi6N['kA?D2q'jo%HGQM&#lHT>Y^a"(A*=AXL>?rB
%]p[Ksj7Jg*i03#%-=<KRV_O9`88.l7BG[h':Ho/k$.X8rTt,=X[UK>*BJp/\$s*,+Drar_"P"Nu:U#$K$KqUZ6]Mk3K\Z^d"o0)@
%%?1ahJZn[EFR:n,CEYr?#J_QSo+blNSi`8?TN*3Frd7/fe3s(S]a.?R5_VW0P,+`(%iS%naq,A`iQdbYr'!.Z]U<0SfWd8-0@3_!
%rE"e%'o*uD46A'81l-Q&lJ#'iNCM4#TJ;P#BTU_Bc<&(+BPp5j6\76\Yl]8W%):TG$U$agK]ki7(D2:s#]%qoYom<aK<Rg>d?#Li
%J)K62$K2^([l^\A8e1VH`5)f>O]^?]EnrEJ`gp:rHk7RV*Y:\Pa\XK$^'<0iRoL''+)5\$K1F%3QY@#]gZ79pS9CHOjs>%2cJuZK
%7Pl^HJ4ZK/2%?hVM%]an%1*Mt*%QtaZY`#r[,0#F;\AE(%fCjFSZP,hd4N_:o0R1gm.aJG_#i.*4rsG]Zisi<!IH/uMR8V-H$n<2
%8!;o_5ssoqQAsiaQc7c$[Oks)+a40;CKuo*FYtm4lbfMm=O-3H)5YCDa)GUcWRZ:SMbE_!Oj>+Yllj@EdqEln-q.maj+uJ`gXs#L
%N6&ErIGjF?^cY0TpeS"!r>0EPS,;:!<4BjQPMOH'/T%c?4>A]=1Q9G0%&ht#bKu!LcFuFfQ?UBX/:da-*FS=s[@<:jgC8\A'>.r6
%=c:i!.-qd-TR\W_qL$;.Ol<hn"6rJ@7>BtlRtFd328d7mN]"jEm]@<:`j<)n1XnNDe18[XC?K'I_IZ9WJGLq^GT_L*p:)m8M0t9/
%!Y"p&X:k=a`%('?)4AWl/o>Y;OG`G*+RTaPGtT@YiuTt?K8p0^*]4,KD8tC:([BCG,7iEJ/5q^%R@]61*$e*C"C\gCK61p(beK6X
%!#$'Lm_NaAVkle-V4N9]<XHS2`u'1ZS^Vr)aQk_[SKD+H"VDh'TV[<93a,`XN8XC)_)AHN9D1mYo2>!mh(T$)=ul$S#OJ'5AUO$-
%q*:#<I@:>N(,0,(PQJ*id0L_Wo#uAb-pHiRoO9=t&7ZbdGol]S2JX:-<K?*2'<tLZq/*Z/EMn+gK//_I?JtC]X1]G_a^6B[oulA:
%(NQcQ3E!<O4.?b\X-\i->5>*SThA-FB`0n=1@I'0HZ^3kn\X.g:7k/-,7cZF4F,RdN>c\Ad%$M]*06#4doU@>&I(H@p(*eu(rp:G
%Ga8NG[#\d-c:\STR2RH31Cmj+W7RY#?Q[dg#KnkpH>?)NjJ^.2;?jhV#t.i&3'a@_(9"9K.b3-\$TM0W,V\M#,HZi#j'*@99:ua-
%5D\,uZMGotOYJ5(8&Kl:Zs18\Os.-qFX;+%a]lc.,-!pY&]JSSX^hYMVj(N-XId4=%(sR8/A=4u#o%hBIfZ;gH&2&Wb(p8+i)VP)
%bir^*YbgCU2/;-WH*@f-"n\AV3L]Eh-KJD9o,j17AE,Pp/>uJIG<Us5iYa&ASBO&GA0D$ZA@/HRFSVd9c'0DPVJM6o/QE_i>2(6*
%"J?oXIPa1CAA>&A!o9JYO[H4J];i*SQ2?(?-<+_F$uZpHTQtQgrEO@p)^N25OGco6nA6.`;!qA(?fUEmZDfqD85>A^d\m[-(-e$H
%1OX:[`4r'BS[SYg@EV$l#8DWB1(jjO1l:R2q%[s.gQlNl:nC1XFX,\)9rl`KGALi[*8(N)WF1>/7/!ZhJ/1Zj2$(!D:_W-.VlinI
%;LPC=PF)B6`RZ)q.?W*DFi`WPU]</'k3<]>%'RN4;q2Wb=Ih^Z<_l;^JXE_8*Ls<]5Lt`L<TirgFTG2-*$`a_'Qa[lY.DTrH)ARM
%lrQ55_76LM'\=r9b\"Sc[Sd7:Sgg+#F>=&o_/\2>i*NCt]DMGjC=P/N5K<[8YDIb_e#uU'c1`se09`9hV[\GRQRuB^V7Pp9fq=&d
%I]gQML6n,PTNd9]d_#l"m<&7Nh@/umK\H;_@UHpH5#f?l7h.)VOTL5@!/4YHV?F8U+tsNCYYaoo&PO3#J],.X@LQd^,'up50rkb,
%nYJS6!rVF:7CSuW:5G%Zgd'^HmDaKkEFuUI9>4q#ifEK[Ai\DNJ1bk!HS82^8##G>j<HDN%]mdukuknKWV>SSXTMe#f88o2,m,D2
%QY!=#'`.[NF<>TTS7Srt-qH=N\AZ":-L4O<[u0OoIUZ><5p]5t%B@/\AL\bgc;X8S]UD\$D:tl>\r$hRM&Lgec$FQ#$7*oumJsf!
%<(),9krdtY+8[IN.=`aZf,N(a!F@6/jGoM4s0tl,l#guU%(Xh)W,E0<rm#Yp*'e6c:GB^o!BfqJM)8l<$O_38aB]FElGSWZ'Np_`
%perOSWGS0Z]"+uu6duUT,%;La%lmR]?!A,ohLHsIeB+RYVK>C?HDa]Y1eK%rHBl&B33mU]D+Yu'/^mZ55b5#@OTFRQl%%-%WdtU\
%[jG_[,Obs.fnQmKZ`!46X\N=#aALVP-YBuc7=]<i5`a4`E-%tKMU0-LAf9"q%C?u-0RQN^?7AnOB8PAKX$n3Q;GVl"i?cRdmC;t;
%]#+-<FP04n3hYA,>-nsl5S#mg(F.rb?FPb2#+aW23r3'r=A&T]9=C2iGiRa_,S8Z[fo)$%NkhQLPsn7AAGRQ<%;.H]1?U/aACq%3
%TN8"l]p-2_W2(-,_DXDtD#nCX75$nZD:DiAVSG<9b0aL:V@u5tW1Wg?_9`4X$D73Q7L.;BFU][5a`=n`RN&L8E/iW4B<[olgF-qM
%V^d5)#'b1D3P#icbl0jd2XR028!)MjmR5W>qiNcsN5=:^N^Y(`L:XXt4/,'5#.5UH^mte@i;uG<eRtHWNn:PA@hltA*fmGTqZ5$h
%B5nh_Q&h(Q4J69?pCp/MHk9QoVf5F!#rd5#BQ[B9-VUASKJoK(QYX&jq?EY@,f^7d$ToHrQqD\))868paA`PgSbCAf)@c3(IgF%^
%'!M_#5^k(4BYko2#t)Vf8fC?+,G8Jk/Cc@P"R@eG!iT$5+k/2MS&X<B"P,"bgHaphX,/Jp\<[ZqO/-uM'T=bgqXcOp&rKFDWh?Mh
%mm%EG_n&hD!gKf[[n?>F<WWP#@NBHtkK0YMI6,9*FE:'@1H4@&`oc?SqD9-FlDgG83cs!so+FXYn9E(jSX69f[%FZ]";8JAQ!jk6
%JNMXO]1e956+f!!XK4@`Hd%:e@$K\Zo@AFH?;%+=F27.M97:iQN="Y`,>(3STa5nAAHt[sTL^H?)n$_CLe!ZhMkWuoRfcTOi%Z+r
%:YTU-\XH3JAu",Q\ARi1I.9'k5Sm*+#uhnX6p;\h>kafbY<b6%2:Nlrrb_g?V!a*P\!mk;+S7m"5Rl'5dH]H9ieZZ(4*&cY'o@=`
%!OuJSgC$SS3XMJWl)sb6n2sq%1`f?7?%aD0\pQ/fd(teHDN`t?$DbZU;dO%c<D:g"M3;R#b3(0gN5:<SO[."oTI8R*]/J=GTW,Y,
%oup)te2NeSlTY3m:l_[&[X,O`g"q=k3QIN^+5,_M2nGdhh9,k""sE*N]J\61BJS3RNh[PnW:YS?\HQT[To3eYo@$^bEBs6a)l+3O
%GoIa59jlTH/qAZs2%Xbm$hKVBZrXQjE7YuuGup-#!Z:j4`<gTP8e5)jBC54f'G#TX=b0O?YF%4E:DfDKEPU)Ga.aVR(;eNOiFpT<
%^"Q%ee>F[M1B!BO`eobNV0iL8]?WL"&p@$B.LMh!VI0=2CBkO!'@u6*3gK@*QH<H[d/^Jmg_"3a+<%)[+%k0";W"4a;u3hMQQ-Zb
%=0/@P0AYB!`J>LWIMfZuCk6%f$b0C5R5B+Mo9clG0XFkhfe^mJou+s;*:h!d&9uP_i-bcF>_H0,#+4<9+8JsR7!I<]ZInOO#eBt#
%#AqCe3%FGeA7A;EfC9X&%)D7qDe2P-O*T[=PWql(('ur4FQ+bpQI&-E,tIX(M\2-me=Y*Ta@oF+Rgu<CH;XG@H.!1M_Mun:P/G+s
%.CosujjZQI[DPH'S]G4qSEV.*]\i<n9:79gCH"^j1t*.M3s(/3j@0W7!FfaBklHNWG+>2o.D)mkQ<`:\0j->Z_<NhF^fmb1P2f@C
%J8/ck.W6R-V=Mo9d$"Z^bJ9LZV&-6e`b3psDD!.qs,NAaGlOG2m!=(G`t@Zun#Sm7SiWtZoZ101V##2DVGmjNb[lHEYNMrZ_mRCj
%[I\?!)'5WSM.s3ej)P549U@53Vq[Mmo4aM3K#=/Ietl/<i3\KKMd<0*;4Z"c*>Y=NC)X!F!JhdCO*omXUWPVY6!%De:Xf'sEVb,j
%9])gjPho3b1VD-)o_sojFSgM*_TL4!iV":tMB9H$1CVEZ*M21V-Dcqj?ek5/3$H)qmtlFQ"8L3ujaFlJYO8jfe&`4d6/<Z7cA0U1
%qf5?DpWhbrdlTgB"gA.tH9^j@T^hZ&M9\U1^9<=QH[inrd"hMsH9!=5RQb#s$eXG)2M"U(@XsT..=?Yt(XVL(N9S^[oR>Jr[_%$*
%/L&Ajk"Yo%HsH+.S1R!%8nrT3\#(Bpb+Xb3-WeE1]9:R-J*sR@0@6uS1!W'0U8tJH";GEBhA&/4JVICaD0P$ZEOV>_!9M<!]P`Y$
%-'45oL4dNsTr?IV."'0!0VqZ[lWi$u<VapLTHqWpn_p'%/:BOD4Fc@AF*g>(ETc+qOm_*k+Bs_@'Wn[q0c2i1Cm.:AC&Shj3IP:d
%?%b`W+#-]bKu]?F8%\),-A&,s>T":tnWa12!X.4AG/k=B?fat$FF;l'L?HGCcfpRAL:B'Y`gP:To#p>Z]$_ft+,>><$rgDH"!Y!h
%;C@q5MF;9#/n\AJ]Bo_AXHf?,l!;T#fCL+qYbAuif>8o;#SZMn!"]YPM`!eE%MfeD[b#T]ahe;Ab71t"b.HlqmY!CVB+;[+8N+Y`
%&j.La"r?+iBha*#,VfK3cuq[C;@!'@Q8,JM=Ap@@:6dq$lVH(>O0'.beg8:Tn2R$ZaXLpfP36XJMUsjIUC"UWH,5-_H@SX[GWA<7
%?lC4-Su;8#AM`$MQYSVT0XY$JXQs)$Qj:Fj6^4OU&$<1MmYqN0T<\i[,gD5#AH\oS[lme9&'5sp7foro-?P[mgV*m]3EN4O$Td-:
%In30;fh1Uk$D5Hes&PD3jEZkWi]'!Io8]cgRs<l<Jk)VYNaEgPgIaOh/q',5bm?;t1iS#@UA61lJ-fT<*;t7`]scSl,I<moID5BU
%iBA<*Y<D>0GW:$?Q?[XX&,l"bh[irC57(E0)+1QXgDFggXLQe_1`O>jZNGZ^3s-4ij8,EhrIc6e*T?iTQC)sHX,O>&*5XkHd.OBo
%(p">X9^g%*0sajf2q9WmBGJ>T+.ll`ZrhomK:)m!?@4WS<,<p91L@HKemM"'n@Pp7^>_9.:IWXB`6&rM%76)Ba5J1*M9REj0L>4G
%jscnd:LWq;nJDUnU8IlZ/s>t#6CplDAP)8QS^$6cq\)bQVE4BL0H(qc$rQbb6K:m*2E8'TK>r*t3oR=d=j64eHSFL4;M4$#^u(<B
%WBYB2qW2IOl-HU\*1WT`32`a5>Fi1e'fA!nC,?#MbX[7ZpXG-)4&1sGZ/+Ysr'\5$3.ZN(!/C3ic#3[\H2J_43A$8Ck@+jr0b$KO
%MtQ.^k8;l*S\YU0P$[/^9ddc3lT_e<?%&FQ]?9@\+?+Puputc1I0T20%8jIM_V/i<#mMnF_aEdj3*&O(XFk$WE,LJ>NK8n\ctjN8
%$<c<JC"^FZRrNc)d?QE:J3n>*Wci_4XN/N"U=,$#eSg,+RN!#O4GAOm,$5/Jb2]+>Ks<[#hfu.BWsE,;BMOH7hPVtXMcHJ0ib@MW
%+Gs0g.l`Gr'Q+o*a7^LkMRLuOLob8Me?6+n]]n5-9W_)*U9Krk>2HnQlgFB`@0MR*P[q"mjlo!PO58q(n\4u<X0:u,9]fAAX?CY'
%6PQTU3ics,<e,p[(ecM`X!aP0,`K.tmQ'$[Jk6768K6sIKWr>+$L>gAJ1$_[Kn]u5[Y(KjpkKtm7;D6k<B'W7&6:pDmA:Fq,bb%O
%-'[]F[MTgu3lKLE5uSV9)NSX23d6@7Q'Q.)ZdKPbL>+HKG`*sIi=(1!=HhXC'F3r:!&(k,2Mfn&K/GI@Td:*@mO&qISj2#IfB5s5
%/"q'g-E3RRec];9FM0f<&.OIUHgjIQNZV7eX>RcD+c8-AXZ:>4XC#SPf%7ggj+N2WcV-R;54ps&XA/)*/rI'FW)04U_2?T9LspT)
%^CLT[/ND7><$W"h`k'JF7'SZIBuQLI"U'Tb_HYuH65XJmPjJ,oh6%mODJ>Bt@3s;tLjqIg8P0-O[g2Anen/?l+$]Wsam3pP@dRgQ
%:dU'MpSb540bLLX#+f(;Ee7CV+(bZll'de9X7(SC6FFg(W(Z%(Vm)1$HJ[Z/IhmbCK[m47kq_&!(@Zmk(PPsc2k$ZEEr]l1[TpQW
%&-n8D\TlhBJeZdWfZ5!^#*clo`#@soZ<X):3h@65$t?UeXDd<Q"@b^hc1Gu8B-()uNY4We%GUGc%T_2u[!-s-&6=S/(XI0-WfSDA
%Nj]KRc6)I/3o/2"SAY-Mf_+9_;-85]$]i/^h/lI@p"a`B-ho$D/(;l;G!;c(mqJ\/gGHm@/tbp^&UI&"![*:4)NiXf4D9[n2>-TS
%lK15U4LRH0o@(k"J%Ao6g@XqMC>^^WIG^bp4a'28+T?I;ltMlcI%h4qW*T!T(4El(gkP4U:Ih7L?g&q11dY>CN(4bJf0(!G-I=`7
%:M8C6QNt03>l&rKV`'6is)aL+D6H>@B[BEiC&:ieBhLUp@cC1u'>>U\oTj.mFjI0&IJr>6hIf6KY+#&d7Hc0p[*:'8lA<1a#$g]1
%7%`W.c;7a;l$,:i'dSU4_)0h`KBUcpZoFM350_cu$C_1GU6o5_pPHQNb2CC7JKD3pkN=ucegmXPoe^OmgapcFI?6?TKc6W'CJ]_!
%;d&<upbPfW56]=ObB]&9%<5q3BYWPcs2K6=;LOmbo4C4fTR.[!bW0SH\ApgVpr<Gc94=\c2%KYnJCsInOJtu8N23\O&.Y`q>)447
%G&=I"VNc^-buPZ)V#r@DgkKp*JFgca<S!mWWs,),qgp(Mn:q"h=l>06BjCp5H6DAb8a$\Q3MN"&eJPO:.jA(%V6[@5IrT9*"u4WC
%T;#G=9)>fL@`;9PO.$V\HJLh$3YiVd`&_=:Fk0MCXIbJTNJ2MLd3om6-fnf@A_R7r*g&epe`Me0RU1'>l8t_B!JQ/L+fr&MNa.M.
%E#h%b6eA%[K!j&B+0-T.EcQ!tmVn;(+c7#G((4QP!R)a@Q1WW=idt3qaN.*g`<qTh3bMcs?5c')7'ckI_W%2ONHA+)?15)PhJGb2
%&%uMc`"=mO9jJ-aq^Bi("/GjU)Hd(lAd&]e)fB<pBS4grLu\se9J&S(B]`$V0kt1sK_DuKSI,[rn.q[4BWhs5=j\Q%+QUeGIS_CY
%hXjkN8?cM8U39e46<4mh8N$1]<8:=fOE"!)@(HFE(Yk3K30?'D!+XU!1nhY_WU_#>.R[=K[SK.FC%d&^\M2k(7N$U(5^2[+TF"#4
%"MDf^L%M/u/2HdpO69b_2>RD8ZZWHI.rSIe:B1jSXo:`s34NY-CVtC_$1IA8Ru$S-mNn03#VSkopkS.HF%8Zlpk+7)!_gT>d@\$l
%=G&6orFo5;7q`GS+gd(FU2u,1G'VOBkA\IOe@Y@I5Tu?O(7NJZqaoUr-AUd_B#YU2R_R;.#AMUR@3_-8^gd0<jU1!=!C/;bm*hI$
%-,$fd8C'gMg(jZOl6X"4lhKk+,epZU2@T]"X2E6A?k!`:,38&9Y7qc:N[\Zds%qdg#)I2c[q"PQ:UUfN?CiS?-TJUGIsG@5jH78=
%_TdC(Rau.idWl;gGu^Xr$)=#1:!4:]`<%t\T-Vf@G>A_UHAcW@-a&Ai-Ys!5%Hq1]+Ym&p]ks^rB(#2_#[n8_MDhsmD6/Yd0h?B4
%Q(_(I8=7UZ*[i@I,7b]:!?,k#J72&`ooVP]7i1)[dCr/sVUB'kfM(e\(Hi[OYMt:"J=+h4o:iQ`:FZ2DVNcpdh_N7aeh$D]+ra^b
%EpXXCDdYEbZs^p@l-W(9QuApdoG#->kD&ZL3g5pHj6a3Id\9>EXW%j<,g=smcUlVW&2baOmE(c,@,lX*,rHEeP/V#m%;D!a)7M_&
%-/5AeUq'BmYGMjL^qks^QKZm[S.k-cWCh;'UedL/#MC\K>OOV$ZKBN7id1eeeqUP%^mW*B[%U"8+nX@H9OkZHH%mQr8fC$sD-t7h
%*:6)7ZmVMhUn+"\M0?qtH]Vq>j3*7uQ>XG\g7FM^i'-"B\*"<0*c]]`,F3E5&T=p(-IZGk"X_jk&RM'lYi9fK1Y+agA@U*Q7o2(K
%2MMA@'Xm*2EX=#@*LJSplR4Sc&h%k5C2._pbnqA97UtSpGdu39KEcNf^)&3S'+&qLc&E^KE37F+H:"#>RJR&9k<'YOo]SC>A):QT
%IURM;6N/4?43E5sWshOGpGB1[io&`n(,C>:3gde)5UJ/>O:R_7El&nL0`kD_SH-Qucn$qB*q5W;qkUkD(Q^3U\nC],O:7W-Ud[TC
%&Q-=c+ZD"R#-!$@nA8/f=:`:FL<$r9QMsYqDC`/+N"D$3hD?S)[Uf,sQ65q4Fkpc0&?LJ;j(7ko=m<e#%U&E:=R;b%5r(9P?JNNf
%:jH,CmUFN4(V?=Za,*6A"]GEm.\7)1jHr1bCWD(^,M>9$-HA"3`IfV0=K^<7[*K/@;?T"I-rIYC2+n*>_RA6RX/R+%m<LW+JiX@.
%iF)]IOOsu4]2>rM#SLupE0%QI,E.^f]1\W?d6X@#!,fQ-eHlOMa<2$e-u_Kc>VeH^U%6[bQ8W+T3Ut/eAp0b#ZUNK*%.a3DC?b.?
%HLVp>'N:!OE5SfkcPC`s,.2=ZI+A"m_<FAn#NnRJKZ`2^dgrZEMkTlj^+T?6O>*gI'TW_rMLoe7m<W"OE7:s=g@Y1ara2)(J3$cV
%-dC$/bZq[8V.F:m^i=q_oR*S+[gOl"\mpj9._e#u_?4`.pfj0$;h(UB%\UKb8ddr@0#<;h1gE-u[Q&O0b"ISh-Vm\Nb%5r'L%."'
%.3lS1,d7u:TMWY1"J@.93>a.u0(?(t'SXQ_AJ@'`AF4HR3X1e.CPg&.2Qc0MU:438`l[3g9D3Au,OBbDBQhRO4,'EYr0\I"bXR8Y
%,+I_Xdd=Eihak6*b/eUuSh_tYJ2WP-]t([lk-Z/S82l"e*^G(?FDESYm0Nk%#.3Ja2ea]@-LV,dNFW'-..+KoUno"T"muJ=_(I>A
%,dF+TMWq8_5utf:`18`VT2"`FZaQ-$4-7=f$^F4Ok;i[*kU*;>J)bG.r][(bDQ1gB8'k^4VRiuh)[@n-,V:?S93fPPamUSM[*;Bj
%XJ:m0`Kf[i[[Y&(\9W,t-]aTMoc*E$Tl@)^:(ZtN5a#7b4=Hp10F6%-kP^n<piN.VS&LQa3Zjeige0=c9hIX%&K:KA&c?7,?9tqs
%-q?K3'ii)?K?'M!G3_$:57*4J*5sp4NdbfdFhgQT/]oL!LW?Os)qbI.N^iUs+DKpc;lq3.19H$t[>"ZED>cgM6HYFI$Tt:.^CO6.
%nO>N:JM'OmfY?6bL;,m7BSbe?<'U5$1:+W\e.1I-PA,"7UVsODW@;9uYh)cWBT_mKC&.)-rK%Ubc&LpJDp)>IGD/"N1g,b8^&n^S
%diu0S7FU0_X;sRSVH"[Aa9W?PDTQDsiC1ad;^`)-DDC$^WjkL1dgs!/p/i9im4>-6jJ9e84!q[oJ=OI]eeq(rH!tG@KQ_kB8']s%
%"9m.3<;q:("hYha\E1]'`ASLA'AAf5#EYUs4m@u;VD!]VAG+'ihdM!gad-2JN.MGJMH`BeK9656FRM',bhGa^4S$H2FnB&R?W(c%
%hfVNpC\a'TIRQ8hF=eS"o9s^6)m#Q55"]o\?d:$)b6LQ/P&`a,c&(!Ad>l8rja>LaHuE!Kim[":Jlo4aHuD?JMn^_(PHO"oUJDbQ
%[[^.)QLBg4_L&GU:V)i&ag>-6oC8Xl2Z[,nht-AY^0BF5c@.*m.:U7eASp_(T?[)p`%-r])X/Lc::DMF,aFlgMG@P9b,X2gSKp"k
%_uimr)j1NAD1%[L@YXDSJl2R"m"\r2MAMAcc)E)T`,M/5M49(6[fUhk_3%L(,)tA,KI)16e)kGU8gqmK`kRYX%"@e8,@p9#gm6c9
%"'oAh^Y^ChIq.S!KW"Zg2p`l$/^aDX)TMa84d+:^o50Y_ao-1KOEB,LB=TH<deP2`Z0%MUZ&EXCo'uX@2hC8EN`l1"fptsVjmU@[
%*m$&IFe`?th%PpQCS@7uas2.]2WFNY/2)_#cm"KB;RB7oVU)U3V'QOd\!oQ+qr&U.bEUAkeDniZn<AqQJpEg:+QPn4Y<ta@?NV_t
%BHpYF/-Z+<-*]0W,LAmb)Quao[.<R/&Jae]j$i&hDrcJ"@cl=VH8Jq_R]%gX.__!M;g>jNTcU0^*(ec>-oj"7nJXEA<9ClQ;_pC]
%=t%Ad'Ob'haf;APPBm1!>/DQ0NHtraM6c=6a@&21Xj.0Eh/blFj;Go,T\V-GOm3d%HPJlZkD.,#-52Sk"js+R=!&aB^!dnf&WKl+
%'5Mg9gcVTqB_dZn1\Y&f!MdUhQbB'KQ`f(i],m>Z#KBAUV\9/ZcNaCXKGHR0=$?.1IrM"<L4]Y*kILGAU+l!AMAlPC@5H5#+6CA2
%mKZAXDCS]TcVbjOlOetG!Ea.c2]<i/;B[D`eFsZTaLuV"TfjD>NrTUQmY^0q%4"OOI-AB,.[OhQ%dFX-<4pe<7s[a]^/G(Z?)YdU
%5]>6fQ%c7(:1mEEs,`e;7AG.UgAf:cf"RfJ-BD+]@mN4%r&,W8<j5_6_Zu.XGg1o+fe%b=fk'f4SZ")>$MRBh7_76uq'&_mYJldl
%(,pPL\W,H^Eh^r#0hrC=hW0,'^#98:>@-ukk`%skZY3l<3FkNrE\C!Z!\e^LW*`5b2\J4=o'>9&7rQI*\9mmf:If?Mf!kD3Hj+@4
%We9/G.e9F!BOJY!GO<LG<4OJm?>45cI`ApQFT,T\XHXn,`]c)o&T/GN:NFB;0,4EE-,@UoC4O`p<Qoaus%"SQ0K>]ml+nN9Qn8Jj
%_5OSs9fs31$jiZ==5ruHZ"Nqr9':IB7osN,0^46UGq"W42U<)DEnmV+AE<B#SKC'4Yftg_AJc?bI"1JAQ^)hTrf)k1nm>AYM=3pI
%Zn`/cH+#p1IV#,+)NQ6ro9^F,:3#-oCKEnRo7V,hmfRkq2ttm&-d1a\>aZs,FM=J)O"glh?RI%m1@Is2R41p3jpB;Wcd_ILb.K\$
%@J"[;daS([<'f=J$NHg6PInHFgA2QmF$aQdVI$PB6$"D(p$uGJR6ueg!h3LoVEt,<kMg]^nd(?A=d(nl99A)^h`M2.2$IPF4[RZ1
%Icu/ZA>d7)5Oea-UFFd@+>`L&,A!e/R1,MLYpnsN^Mse1\m&#(bM?Ku+=)X6W`83-*\GAZ9m'!G3=b.6;a(,CUQ2>%`Pe<n0KI;^
%5S7?mSF#\@JE/!Sh`IAV/q)UH6cnK'o8`'#f-AYP!H#O72WP$7i&GU5B=%B,9J%)9PYFM:RJ--dac])u6Ub@dZLo#&Z9uT%0X,M[
%""!?gZsH]WqgE]XOXu1VOs4%2\+Yt/=U=6e,$>35VFXbST^2JdA??e(S<F#*7-EA?-LQ1:$`qCWF;X@qeD=hqnc[Lsl\k>PkN8U0
%H#LoppMq8Oh\P=1&FJ":H#e>Z-]@QPr_7RFSghgo9sXP*;4b/6aP%tmeQ:b"1QS)U+6V`jgha&S?K*?r2t;'=:r;>M9cjX8ei@5L
%H&%og3e[3+8<Zb)cM>Qp]2A<H-;Z:bS.jnHoY.5Z\eq!6p425i$I\H0h>.mM_adJ5.m%"C+Rd]6M.EJ[o71]i%@%^nF`Z22-mt?l
%b,^El;Y<jH)6od@nPh[<m\"pb';*BV,aonA\Tl=RNlPY\4M5j2[\oCSH@6I;V*\/:U+hE*\,c4KI[Qb)i[aVPOPI-'s0u$=a/rKH
%>ml9GJF1:tmb1RXIO@R!@V%2,?J/UI-=6$DD^$9\@3%lTqk_PD(0:D<Da*4GMNqOl#B/e>?MMUE6[L'H.F^qSh:X?R=H*@]7]b7'
%:b!!oj]fCMYOa&?!4S(?p=n-`6<N./HO:/0`C-f[D^nc>=D<\'9n%Jdg"mX>aJuA[h\X16\R?njDCPMI'?0B'+VkW,lB_\&q-B)"
%LX8lZQY!HOV+_8MJ<`a1i7)>_=0PT#_+!"U]e]%:0Q(flo?3SnF<1]f7j+^k8(MtYX8n1>SR)QcDTV;[pZ22J)-mb[Y:!it;qgi.
%fBW`W88:rscM@$O8L9g^q-]dg6H3jm*7Ij_0"bQJX=",X0dtYZq(4DX]k@RP2Re;Qm+.`^'r:]E[KR;)->cBIM&1,[B&08\G:mB7
%nnL2((U#:S'C+T%<lFT`I6pq^>Z:SIKmc;X1"mCf@:>d)<?H#*lW&Xe')S9(/F4#bSZaX3HS4)*]<G)P2\BN_-O]f2L'(H+a--S.
%.-qVIl4XjicP?-[H.UX^`Rbju$!$XQ]=9LEm%Z+$:0$1/[J+ftI6pq^XI.85$N#KgQje2R['3>:HhGpCI6r@V6UNLXlk>gTG,j)N
%$N#LVqX,1s^FAL_!ql8*%mmm8fI(mLprUB:4t+MI0-cpmZ1o`pA/+`#5dY/2qh2!GW%GY`(A8&7ot:Z=+S\W=T+D!RMNqf^qcJN^
%DRP@%XSff::WT\fq`"M2C/5Z>$!$ZgdWo.rfI&LKb`9`e$N&HXVQ9Q(qOXDqO]h]/Z'#(@_EOY:^%"nfJ#KT4gF!:LnP,`KQKob&
%m+qYOjdnJTc]-*(]>dcU72R:RpN3pSm+G<VmhS,"PN13&prU9$ipJCIEf9,+7P-:Vp:$hiS>E=sJO=r5Y.*GW7QfD&X%+;q!^F6g
%VRLdBhB_m>-IlD&J:C7^7(:+`1EPiq=uXkq;^(tYFd^+TgkchXGGr0$^+F;ngE\._p;l?F&e[8"ZLcC$\Jq:A3pTZ6niuqINi+N0
%A(HXhrI;+GV8P"dHS?Q<\!R-.nW#=8^AmZ,31[kHImUscH.ab[?2f&uSs&jJn[G.Y?iDGMCqG,pktmrrgp!c'qW?CDNd2M]9hZ&H
%*K,<;IjY,dAnWm4T`42E510#B8$]a(:#GF)Rbi:#V<XtZEq;V3+ZJ+R(2[H"j1Q2O8Q$3p\:b!J<J2U#Ul".hV3YK="HS/"cK^\&
%@?`B_DZ#u2(961^5^t'0$:'f?q^aDN$:'f=6nY%ZNhkTK$8EX9Js5.M5+ne]I1[/c#>0eIR=N43ZlZhHneLn<^<q-q^9lV'`m;Of
%g(XD^WoFO3-ipr@fnt$Ui!&aSNaUmQYT]GU=I2TR[^.Dj<j2X2HGclJ&*j:HIsAe($.]IkA,+)*$_@5=]8?YT.nCIe4E@tWGZL-8
%iI(*+_lIeWp08c<g_,K'l'mt]TP#npL/?`5EJspDa.ANLcUs&/%u@h=+1\A3ms(LZ,#Lf!E!_5\Ac_=GCqaLEo'ZJ:"c+6N<0Mh#
%+,ra;4hg"65AJ5+r9D$eet`#RIufu^:Ybifo0%#qrqk5$]".S(m>22R+7QeZ9_I`%IhDe.#O_P;,Hj?F58!i(1k+D<aM!(Ids5J)
%qmN;!Ve!uXn&$s$&"h;NZr^9)INNI14o",mFL(A%Q\Z-gHH5"QMWOpRb6p):&>2*[ehoL5(XQ+[eQ$_JAF9<+qOY>g:bi^Tn`kIn
%c?-B6I6)hrZr$1`XS(4pW/sV2Cr`YOl\V'uZ4!Y7+]U3ona"UEg9?1%plV1QU<,R9*C>sr4=+I->bZ(H*.K?^pMA$TV33=(l5rGP
%08\hr]%cr=KiDuhl<E%W'KGq$eS@<]0lf%*\V5(MVt/6b7!IV'Y3r_C]&U]\C%CS-4--#6,p$'AcsC]0k4Jel(Y.?]/QU7.+JrE&
%IbjBcC543Ah"9hhSHj<'"d`Xqi?C5p"ZI?Z&05GR&D#]LK([()(6;U>Xb:_`X!PX&>!9A7(^][\>pekGgY\ue>oQZe84A3K_&T2s
%?T9?_+5n[g/#P/kUhk4sm)Tt:C-#`"X2D!^HXkSqM3e>d0*@h@'J#cl%:W=nKMpp7lFS#PQWlEB/RJFT8F7GW=OYF="qN5`#jA>R
%Z6ROtltSSp7#bI)-!m!`d^h;+G':?I=*1FnKtl1_20+#bC\WY^.RZ$0p.FCnTIb\[:o^'.M1Jc??=*bL>"*D^%KHFBMXj[KX!be6
%p#KVbnuu$&**5&D2oW$KPDp9#C/sc&l2$5d$,%1-<aIkFBX^\VEEi]=HslG4A[I(XoBjgp7WF$2GF\RnM!KMNJ23*WpfHg7c"&/7
%!kPu8h!Lnjh!E6D):uG'V<b1"Jggco8!HN*GVF,1]MEO``47hX5r3QIX%n`=YDZL@2fW5NM-GS.>#<bm9t7i'WnO!H[l=-EEAA09
%A=(?m8HtHt<AZ,tY1^Jsid1iZ13:76Ne^$3DUQ<Amh8"iCB,GJ"-`#6E,bV3lXhN,"%IE'k^j88kXp;Z$s_2FHoa/[]=7ic<lVl6
%Sbb6A=j7emEq]VsjuY"M69_]BY^&N:\sHrtJD\Dr*]ipg,+b*J`Vt'7M'CAQdJ9gUd_1UgFihnf41+gc=!Pf5$(7s&S5^4%:@0!C
%ZenCc\k]reP9-SBO!0GL&]!*b$2a%^JAEocYXe3HGtHf\Mt:n/1;q=Vj9LKj?"XD^eWr=pmJ]ZmS@ZXcp71%L$RWY_dW_b\j]5<*
%0imP5S>-q>lg1F-H^/*@F1NZ(,Trj1OV:Ur<*cJ0<*RN$RO#A!IU/:brrOkee/R_B*@Y[Mf0J6\fGda7$_cD5"T@(`hX5_S"moVR
%d6g=6ZNL%HdI-@O4uCK8o37_u2c\(r*q)H4%C5ZO01ll=eg#4%kJJU&\"+)58*$-(&!nP6lse.s6d$rNPZs2nFUB4Fn^'^W_PpSA
%9+p@;,LYmI<7M9?Kh!d7'\&`F9+p@;,KfPP,t\g3eg'&+_NQTDN0)l+*>ea]67NY3;tBE2\?,0`6f0=6PBU0ggV!\F??96m-#Bme
%il_[SaftfFb6g[#kuV4mpe]W2pQlW/nP=f7f3D@t<GVW?b6iq4.(Q,t,j]9q*>tbY4a,fCK;VoOp;02*[(<s<:ae-]<u2oMVat,?
%oWo>T8e+VjJfL`EMb^[CFlD<X;lsAHiM#m\LMm^QHTk;]_,"&0onA/fei\$.+a]:.W='5>j:f&jnEi.<AWQ"BMFF0Z^@4tq[_oSP
%n+WV14FAp8.JL\HklO*_bmQ-dPV*W2R1+HB_F*#LT$L\eaB99;'g'8@rJM$oR3Fs@bpR5'4`]MToP=m22nuom:b7ff]^8P@*eCC#
%&#IgKm'Q)*(EPbZ:Z9b;q4b>=^'W;krT_6eBda$#?,+#@:^@CQae^r0*k:]9L?O$(Knn+,0i[ZAq$R_0ZP;'/#"&4[KnhV:jP4o,
%4ZBIESpM7p9&Fg5o@=sVnSZFUleh,qa1\A,Ph)EZ/%H5*mI5*E+EHG7ZtXL>7fE%t6NJU4].EIHKnn)Q,YL]M\aWGl[R7$b_T,8$
%VGalDOtuD.(EQ3+G"DKh:LAAABR/CVlG)#]*Qj[^pF\RUdSuQ[iM!?"$D5*&;#7Ufq(D*+$P+>lVsq/3*cdtDO"1nnN-Y?<6_WGm
%@tt'+]'rPMm7(bqET*V`D27jj>kt5mP.)IGYqC?OlGCHZNgon<Knm>#8D]ZbgFm>^D_=0MD(Y1.(EQ16Yph_0B6;N;*f@nPWC.af
%!TrVS%qV:Es87S+dU=i4Y^,6F6_Q7n`YfFfCVRIM:tiOZ&s]*(n5.iN^KI/C^$njSBQ=b=+1Uf:Y4)2IKno4s'VE,/nA\qugigc3
%H1Jhilf8E0G0!:+H1&O:kosDF(\c#Z&#FJtfL1)O_F&4]q!lSc>;j,%&#FIshX2@t,l>GGl.Z^*aKpVm^[R?QPAlX:[DW"=aY$Tp
%?1BAD/'&^/;FAaOXJ,:Gk&a/dS+p;<SaZT%H\\C^*@6cI8?somY>B2a'#9_\8)_ndeCq^D@q^L!92jh2diTQb[;\/JmAC*le4^?.
%IXS/6CO>.iS%u$V9N;L4/\#\V=iXlrVrP;._:7>g]'HIT$p*uLYDjQ3G\6pe<?<bI!rF$6*8o9gU@S(48PQI3W4EJ>cBm9sEK33$
%<83SF*&1M<m2X'EX%%>3.h\sQIJVn`1j.98WYO&G'0hA#'ulqK^3-*^Rtc(?6f3;g+!Y"L")E=<[46qa9rM]3frY1Y:jtEKhbtVc
%?W:bYC=I#nb[Tp-0`1dp1^4rR#bHq8@sD`HcJ`J(;`u0,?JY/4Bu+q5;YGpoaYioE?gA?j`h:l;Z8`1t"^QZQ@m-EtGOPf#Y>TTI
%R8`S>s"*fUd;`_.7:pD_bRM4&o.mPL%FI]i-U]UU&MW.Lk'2!H0ZgRPF@5H&XDE@:6`TP$$KjlgGKqkao`Uc"o%"ddY)6LYHfkW-
%Lb!@?Kd7F.ea$sT24]9Tauca`^ZR0n0Xu.n$-1J6BMs2_/cZ&!:5B`1,,6e)NncYVXD_iF4?74(#Y.'Yo,8f@h<8^J?/Vd\_f>6,
%>Ni*io7o*JlI<hn$-10D0A88G3aCLc"-%lECfG%'Y2$8(ZI=a,$eQ&N0Y5pP:=4HieMehEm0rmqL0e1j?r=1cMunZ;SKf/+_Q@Gk
%b]N'@8I96V=g[fKRgqlZ!J0$1nC;A@KulReAbY+ud"K+7"o!-B?fMpu[?NP6Zkkk*BEgCB9PWdnV0&,Aen3>_qK,g1HM!/Bi&qUS
%%ufi["loCS^s%8SF&/tMX?8?:q#(!4`d0'S42;bi%g2^<L2KC<r\1T!bajs`!t2[Cd[!a!E69V/feV]S"$X%g&i/:I6](jn%F<o+
%EbMl><kpf$)Uh+%YadT"MrA-<A5p*I5tt0"558=#mG674p4a'PT>4gf,[<jL%N$%W[d-p/4dn[lg<$(7!,1@M5D?LDZ61uaR)e1U
%:ODq@HpOQ#Z*d*d@C[\'8B<4_eeAFMYO\+)F?<L'>`_;Aka2eaA-6I0&riP;*c5TgKD<<Shad"[D$qfuY<DSjkb\.PYIn.*DD15l
%WB1sr"uc*;L5(^*H;lS(=2>GeY[mocX-*hj`_?$cVkKi!7\9\>CBj?.m*h)JlDJ.\?34:%aeA9Cc2bZ8"e1n,l9f5c%:Id;dP`e)
%*\D[BJ4FbCVkGR]UaBS/ZsUF$!Z2haqSCrY09f8aFYk=5\<2@lIfg4e3f-XR_E&*=I.OJKOU<A)5<#FWl#qc$G0)recIRT\&7BS?
%q9',W#^J%[7Vs<dFu^fC1TT^%\HDd7bV<T?on_iBn[ZcC'/T<\*XRMSc=jqO"6JJ+]"hdRkRa(A1eY5'3F3`=N#P2g!-*2+(D)h5
%Z\JdHPg2I.'S4BWXU)m@;+5.nGSCaB^8VC!fADI)3!0hZ'bQ5/V$I_VBgjj>%D\hn7G+.#.jBUT8J.tp?lcm]FX<i<$ke]n/(c#W
%J"9:9jZEQP:Gj"2bbRaZjJZ"t#go^6e&%X,"5LbF8+'s\YX3@4_]S(mps[o!8GT6E?sU_.d"XHP$?O.6en+_p\L&[U9gJG=_oSPB
%-Z_V_3EQG,H#hSDs1ejKJAr$DFNCT!nmRlJ8"lRfop?^n*pAC;D?XlZ$Ro+DmUde0=@FTR^'tfrgbm60"f*ZU[cSl6`6ol`AcCRa
%g.h`Z12\:cL7pQq2+tB0.JuE8[:5VWK%3<t<X*dq>_U&'@ZY"L,#4mabS\$`TLDO)Fd>=6%+!bDDRntjAdAIpn/[>("s:tuo[Tkm
%-%$$\e<E\9@af(&<jueY;gU+X<P"hBQ1CrTPB]$abkNi4i6,;oa!NKb%;DE2VN3gCU2pDfL`,FJ51$<-W?T(;iS3OO-i25:]_@u@
%PaAi"+_lu<1l:R2GtKC6[MZCZS;APB><P=mp4GD3JRsk``Mu$HNQ]X:[,,W8JhmAUHX'!T(Mr%oA?(@EE2^/i5:;<lZ311Hc\8`c
%e[o]=hQLg.4;,3'8PVY*>P<`h&nn-<kH6Drc`O4kR-tM%=JqjN#336pjM<:\`\G2)a+$nj;5F&igY,5IU\#;$JEG<lCo,T\*^^tA
%LGZK6+U5P8C4BQTpeIX6_,[k6E#`Cb*KGkAGWQJY[d:3[r:c_)elnT3R$R%X;ke>:%N;&)U^m)hI]!ZWLWU/!q',??8ooqJ[;C/k
%H=W@&G#E`e7N!f&!sLppV^aF%S>p7"T!5@UJPXeq?[H/6?<+84qgC[>rup%C--YYTYQ:O32>2oZ$:7!H""<!9I(@#jNqXQhk*df'
%8QHb!mC@S9_bM\fX/[mDNV4BR/dm#tqg=7f?F8YHn2T?pl[kc*q<@4pX8V.>:X:\_3rK-WR/I&_%W^<q"8/RRS%N@\m)-dia"Pb6
%DirSZSo4@oAS(/]Dm)?O)jL'ocMQoO<khnSE;%u\O"Oa3a.J/5^&6u==8]H6m7Q1oF61NGF19)XI.Zk(S(GFR?7u%k\8_0+n%Wgr
%F#Mb3Pu&oKA8K!o$!MRrO+#*QrdO+[Hb[8ikkiP=jis_#'"/#]2Z',N]Om;)434IHS$9P;bFF:AIXc5"bd`)db(3pUB.^=?CZ6Pj
%<ZeHpbscHXm/+7jg-I%1Xs2_MSbkM%pOB7dRfWX4i;p8rkt,T=Jh")SV(K=7qjOb%Ar/P:5]4ckRP*+mmIVV%3]s5Z:5bl3D8p4_
%[)9IYgDUcn1B@%:PFpWHa%pWT?,/\n*C&SfI\OTK4S>:1^A@en09<<.I<-FSh2gV-X&*\pTDA9:09;_cH%B%f3PJZuD]M(<@.W47
%X,fIE*k)Zirk)Eh;hO'aI*V^c7JnpnZ]?3EB="T[2Oo/s%`?c=8FV,te'BZEE:n6D5@49QX^=k/rntEdU$TjW=2[eH\i)SRs-W2k
%fjA'8oL*eUn(ZDrn+>mTD!SOkmFUf6\Gjl;+36WnFo9CCq9r]:dP9Uhq<EuY4k;p^G+>nr\:*YZ>MoI$qsrGW5<cXMdlWWY0)a?u
%XVh!<LJTFd:o`aC3k0]Ip2#rE/>H)q\^NVm3#&=iXn`PLCWl#Wq`%W;obL(gX@6ugG_k5s6E+)\6m&P=rQ*_X_-fKVlIP+dU[`Ne
%J2BK'7dY9i\%[?Y;bgoXOdn3+fc*k5qr?3SZW3X:Dbf*"0hm[r:Y=WsB.e\mEK8,nEq=r(24O.$nM@ZCI>D6cj(JAdr>V7Fo%22p
%Gmh[7VoMU4pes>)k5)214E#,p$cc=5CcD?`o*1ohQLl?=muB<n(>5_uiZk^BGC+JYkZU=D?b,dgQ/=2VqW$q'o)::[m,P$mI-*(H
%Drsg,"29*%$-R*"bZTVDp"(f<U#Q?A[eI]`jZhM;IrGB[qu$"\DuBSaPj>re%NDkfX]^e7p3YlgT?3=jQfk[WdMu'/6aHJ"1^?Y-
%&"am3Xn%pu#aWA*g:d^51/,+eRC;I`(GT'jZpTY:AXKQs_<oK[aGm_/a*&iI1cOFBHY\8Ko$)M?5.Pq#pYj!.NR'i"HMRL'7%&5\
%n[US3hn8gPLPsdTO.T\Pl)W_!](4p;]:Zf[hHd=O?bQ43b2r5mY(Wi_SM)o3kUbLF7W:1:S??lPTh".hNY1WPD(QDG\G1#Mk3S45
%dehY#O"$Ue@<Bb*N1A0P8+3gUHU%IC7q(6A:ADHte)o3J_[o#XS,KiM&,,:jrj8H+2#_mKm3;FFYs6JRe=UpD[I;])3;XE)IPrum
%@,Drt/`Y^#s6S/ejbN_;3#u2c%a=pmC!5[4^RT`g^Nki%QZJH3Y[;F;fAuO1SGN6E='tuRCFT!(J%Bt'\GUI:b-LHiKu2us':0a[
%s6esR6p=8f>TM+>H^JKr_'aVq'0bWb[a,7q5gneBqX"O`RtH%RG+C>?o-cMBpBdn.Fp+;Iqh4&g8$g=L:Y6Z*LYq1KGBc@/_*bH3
%;VD_!noB'1Tf78k#pVHE5FZI!Z"N5qn!^%2Q38<<I%o:r'"-C4-g0(-rB@pd[ruLMrBG.A^26S_'[;&@G[*?/cBhW#FgH#HNTn&g
%*khO"2`%#O?i'&*S?4<^?Mu*5s0t;Oa,(Z!QLpC(G<bt7EjEH"dsj?F"36G:F5u3rbkcXgEtK5d`mdJ),<`b%msa26pu&d;1VV@O
%=LjVH$Zkhp:[dT92uUjRmhJeYS8drSqK[V]G1+Cur,Km!IXC05P(toa'Z0"-Dn`ckm6J\0fu@`B<HRNC2lH)"dXM%mr*^%GLS$`d
%hSY/g(M?J[UV?Ej$W[^M'UK8g3YT99q=Q-1e5u-p)tR@+:<`FogZ+@@?I:V.-h#mdDK_bH\GOtrhi%"AhabMug@cGG^1biRj/p@E
%2<30ShWUc[%T_uIg#l%#n?.8r(Z@]J/Ag^k+9,4:!aLM*G.%nUU>I;B_s@K$lYu[aQXf^,pX;QUrnXL4,&CtlFf,$>G$g#DiU[^1
%C`Vr6s)a:%c9:P'X`$?dh3Pb\G'YcIL\'rOVoAo/Sc!/+LMK,U^%1L@9+Z`m[+QUN4HrWkZZYc`h/jYq55f^R@X(i5S:8$Kq=D/j
%=PFm)Pd]rs';F:R)2fQ/rK>/**1JcO>Q,LV>VaVC]<fKC]G[>]kEYd;+(c]qZKr*(`1FS)K2C;!RE/&B*1nB0B^IJe$*UbocC0]^
%UT8Z_E;+"(jLKco<-@]j'3"Ha#bR`VdcU6.oRgQGB2$G=5Tc[TD'[Hl1R?jZ'3!W?i;o=jgimR_`f*$(hN@EmIXBQdE9d+u%fgI,
%Mfp5k3jC5QOp#rQ`f*$(=j>dJ^cBe&>eBpqh6C,>U\RPYc:DoaqUKrQpYP[RlZGiug+I/^Ef2'qpYqe"L!l9`erqm^gQ>*!BtJf6
%,!i`BM/8lm"&3;qBtFbG>q#+$:6`3Z7kAjT++NnQpRg1rr6nmAcT&<c.;7nh[p,IZP32j1@Z(qj*n&4a`i1D(/k6]3%d?nbOQWc5
%m*m0gBc:RWJ%ZB3o\,_8V9Gt^[[Zd3h1S/`g@6tkSijmt(t9:7-"H]&9H$lR(Yrf-H(#EZ?G/MQC4>ldf/8!P]0#WUcgNX#@g.\'
%]qRrP=su>"=MsCF&`D!*Yb-BXO31,F6/dN]3[juRmKD%`CTI0pH9A7;rUfcnB<33pcDD,,=nr[<g))9gMPU'rVV)sGIHU7`&!PGM
%G;$)Dr\.F/oYK56+2Vf3rHrVURSVc7[p.u7GlO=5Za&bqhnO8FnqY>f;=GjTE(WOBpSYFkl%c1O4srY2s+S@\cVDWRAgL8tIm+<;
%kiZ!C[IIE\B7"mc@og:Xk;HAuJQ;I?=aDLO`q^.LBqIK!j7BI,)BPNGJ*YjmZ>^N&FC2M_daa/%phE]?lVF+enCAF%r8PE7[@^6#
%r+tDkoueG*E;[m^6r.@s^`-CZAgB&43I9#D]QWu8rBFuM;a+Q<B7('AG3R[mYMF^.LR[u"MdJYtmD5'WpHBNM#</[oofkRRFeP/A
%h?og>^P\4h?9V`96K<!K%fPM807hTd3I@jfVo^U_n@LoT`)!Pf"b+?m`Q.a&N'BaZ`g+"SB)2+s4nA:NCPHc!mJ#HW`h/pZ:;5p^
%Iqu-/]c!\s\GY)s`Y?2dR`5ug4AB#3r:9M2BA1I3(Z$(5^NOp$TCLruLW=`($_>`4+2aR(KXc6T%r8M\L,VkVMKSk`rjhP.N;+LM
%plh=Vp[QQA@r\j]k.^'NX$9q*EU!&YHLg@O.j&-%-BF`]9Z-h@k;)?t_eX2*r?FoYD^mlfY%='%EpQ]'H2:(S2!O>]X]"b(au$Xf
%]2`U;5*@\GA&K;>V,Hmjb;B7f]>snL6?=ZRa?O=PGeSJ'aeqoUr;>L#b*cc>H0a+4c<gFa\Z[+2H[PM.rVKsXs$+g^5MgYanG]1q
%/*BsY?MsBB#9VH;q>SCoHhUUcDt;qI-<BMTc$ME=+dmC%Wk>k>;g\PRCTi3WcCN-C%6*/"RdkSW>^H\nIn6P)5jN9HN1Ke+_(Wms
%><@<1q7/-j&%d4:FnjUQ#T#e>9`24Uo>@&9YPre>EVUpipSOI*qu.l_qsV7?pYqUu5Pafc8+#QQp"J0XXBg7%1L@iejSPFajdT=i
%I!,+QMskJD%-CttFt9:.YtX:Vo_29S]sWZ"If9&,o/D/Fn!3L6:Hlc_QS%4M$aus9<Ca#`CsaQE,(G>.Ysk!5n*,t8'3fPbHd.\R
%'3fPb48+_?S_0Z0VuuuHe;4Z^I;'aQERoYNs,+duO'JJi+H-N(nL(@S\i8N:rKC4iIEbL\-`\(&XZQ(B:KB2l2F#,):be8j''M:l
%4$j7<e#0s,G.J)`mX0'&h0SahRQgcEde3CcUJ'L"\(u!Y4WN%f$-1qLlhtuQ]=6n5;p!pEp(JjVI!#+@:HR(P#V0Eda>Zh`)Uc^K
%^9sRr2Eg6Xhc/U@1091nK3(6`@hbY5\XV)$d[L#WM(1'k7WnTa&p45iSic=MDXXTZg$/B\\`5aEk1Ua$aj>ZPNGp-1rEF&fd(FOF
%>=Y4r1%j6SYKsu2s7"DBWaG2<nE@n)Yih6b2j[kNh+7%k$WKRQ5Q'LOb#BiK8cg*:9i6Ij^GK3pnEn96G%47BJ13DFSE_p.j>=tK
%Kq1m?dd!#roRVAKhZ*NoG2a0H:K+Lc)^LKcf%IsYq6,j;]`%36WF_`uVURiL*UP#qR@ZTt\Y_jqKcOZ\3qg^mMm&'?`Tu91P5a^f
%@rhh1Dk))lA]ll)?[D,;PtCoG7(X&>`(s`cjk]Osp\="5;d0=-:LCYYp%>ljeo:YSFEYh`^A[c3MrQT7S<sE/&fi(KX`SODqmTVD
%)fL/f6kR+[#.p[5OW9!S/sNoD_`p8s%E\ACdk7kB5MMY$GqbSXK`g0OVdog,6Pt0jcU)f2Oo;L1FP4.qoV:7&Q4qm':8,iMB-&'?
%A4Ph5iS9m"-]@KMPAmua!lN-.&MDnPLE*S5%Vr+dlMrc14lWrK?CNL_q+H3"T#N@94_I(IT#J=F3;/C&V<&_KB:"G3/rF/"J;kp'
%$]2q\*rlq@-`C=CEH9G_Q?^1jR""VU!M;)1i:N%GdF6P<j:"Bs5N#&1b$eu*LR?0:medM,fQ/6L&,QsVEiB)O5/SuB!-uh,cT#ud
%=[(_oaj2A@ogLsp1QF`QS2mpn1R?jZ1D@?_fBi9k\VY-N`nD%e1<]Ba'\JlDETXL$F_9:sJ7G[kgtspC'!&Qs6+1B_T(2asq:-@T
%4alGjO"S[_GP9PQ]%8!W[m%.aY!2LLf:?6.dWV,3fqel!K[R:mA+bp7F*9krnsT[Nrn76IM4QY1T.q=/,$P5t887sgLu85&Co+MF
%@;iTd(>nr_dV4-LPBTrmH[oHOJ992)>mu5FJ0-L+V#=^nbHL;((3>9'DEHjE;0d=Y=joalDj<W3$6U8M@^9<b9'Fs-g&:=T&$CA(
%rnPaK:W*s$5ODYRjP$Fl5C`GYo-e8>348AAj.>DcIWIj#NL:Z0jjpuOc'e1frC:IRIf%m"^O>M+R1B7qp@]"mIj'^5)Qa`/"^fZ%
%_-ehu?@A$NJ7rTef9r0m./Y<,g2pb'J,S?jIDsa5LB:Vk)K<3/@0UF-rR<EroAgFK?6=0(5FUTcT)%*"\@-!3*ug>`It$RYnSc>+
%VUa9^pgjTG<NiHMJ,PWE[.fb5BWi7_USI.=M=V6U5g8MEAp&<+HnqXAnQK60:s7\=S=X.,S$1hXX'?U^naF654[`b&`AUekQVYT'
%q!?J9.W!NNYmgYW9h)j?]ZG\/5Pm('rV4Rn+;qmS4c+b?:@*u5R3VIHrgG;(kmW;h0&u?k'T$u!-*[o9[E2K6]!UKB(Hq6>IpV%2
%O`Pg3-U4])\,-*S$ZFo%lLG2ShDsGtG/&0p:XW%pZ(&40S[jJmgkc^*gkeu-m\^DWCVcs]?_92orS;AsGBa"<POd1Hc?rK5Du"V3
%#@@,im[_^S\ek/B\l?5T^O<pgY-Ql9r;,e`]D]5-LAoZ(R@!$<J+NU7],`p+?C:ZLf(!]`!J5h!plF$>Zh`us4of-`m%:D)`Qu8(
%)rJ4mHJrY2h&>)GmK0,@G?k14h@0""_cZiiYAr=[UhA;_SiZ]8>NP_H.j&-sn`/5j@[=`Jqe6p3I/e;?Nt]o%o>E*!m`1Cf^N]1^
%fK8jB&Q-&c&biqdjjCbUbYs7'Q_?)$5C<Ak01iY1]DqJT8*bA*hLBS45Aipi432pADeU`If+jp@r/rbFIeVKE:@RN`GB.78<pT.Z
%(S<h%r*\R<K?'&@4F+JXNapsq]`.R/QWMJ7kgd0(lF0eha>XR;j`:1G8VUGfj%F;4qp2Ke&c[7U5PU%m^Z4KQn]tV#K)^:H#:%O6
%^3tjq5*V[gQ*L?lEPor>/)U:ZXP>laJ,DX)PD<RX[E:]EE@$*<f4V8@?Y;Ur^](V#KXMA\\F\Y6\M*Ah4M14KkKWlO=3c9jm)alM
%5Hf$RrP=Eh?iG*/p\X.!?+]^lhWFbaTA4^:hkn'R;.8SQ#EPIYbWkXQ\IT`EGkU(@k3((Zgj=))d5/C]=?68trB$M'Y.jQ'aeS`/
%^:87Q_=OSfcFJ@/*VR#>U/$j&@%e?CFm]0\T7?*tkuQ*Dp\=91(N2Loq!EPP4RJ3il7[VC2\5=>qo(0Ln\Lt:G;^PugTo+gX1roW
%r6[\'_cJLrl>Gk`F=$R^E58pl#C>./Y<CUse\:L<@ogOb)akb&IraS";dOpPVGm0n]#uZeR;WTqRJp?-D<'L!mQA&OnECF4Sekh]
%q1"#hYI,.#,bf$*k?MJX+(B)daT!SoC<c=e:pVf!=P#\75Lo$D79oD/c,\aD<or5He3j:p!)(_C[?@hSQF^,?OB5>!CGEpU<dg5L
%efh0.O:,>tb;%ql)W\aJ7<1>4U3t7d:N7ta;H@*VI*X,Ci33uO)BD!nQ^V3E+,[,8<V\r[c(SPe.EbL()<B>X`qt@SkT&ZC3SN*)
%TbYir<4P%*N4LlRX'<EI>]NPnE`n;t?A:JY[+8F"bVD@VDFn!nh[5qlZ91Ri46=*jIDOrS-&+_"GXLoDD69ZRA^nmqZmHTTYZBg,
%)3Vu/8JWe@]Jd-UaZGo]bT41P>Ied,/Bo;qSHlWi>a?N\?Q?aA9NEdh/TF;rUM3I%d]dc_R;9'-I7YDhD,QS`@_e(lBf[=q\LQKD
%)d_Q9-_26_WVX"6nB%sUTaI?d+q*TYDN1r8cK7%^C=u-"8mP"[/kiP79$9QE]h,rP%7r!6I`oA_KsfhhLnM2a_9(i8,hk:t?!7n6
%F]mr1CZP"C/Z^rC9&%(N06T?+:WRB>5:oS(n%JHJDMSen`T(TTE:#dR`$Y)5R8a/!CB<K/>7nHa41u3"X9C5WKj.d;R]AX41F>'(
%`,ZMp9R^)b\`a+5j;mFFYhBt=kIB)PY.UpGLm:ST%D.Psn_c6!2S$48C0=^/I4pjc^t>p5[Xgqh$::^/'93>-@l_%q^a1enLdF\M
%qQdLp-pbp!EO*-XA`mSW!pD&UqFAnV'onBL[an>'In0>0OQ8Hr5ae,5.oBtGhBGoBgosgJY/l]/$P?/JqHM-#Op%M@;W9O-:eaQl
%0ZqjR`4]17/.242NY9-jR'uKcd!K>&*N1k*6@&a:P=5\D#_OOJ#k*T)PDN]S99s@4@fZ*\%"_AU>DXPKZM/U.I#p!Jpeb_-q>n(J
%!_9)1$k<a]RtLj+&H>@e4Y/p%/#sQ9CM;@UkiIHX5;F'dl*H?.V'LH!:0,ieCgQ?'CP0EU6kJmRA>/'W*@;/.6?.ehKnG$f0K5\`
%d]1ZcaIaU[g`)]`HZ0rs[G\(CKe&lMPXm>AK[j/?80NiX/5%UCQLGMg<+Nr\Ka9YH&MZXjHEYD0OWG7L&`pW8->AR.J?)a]-pg\7
%]\%a4\[`ce6,"$1/Yhm1\6#Qo7.@<(O]*^P@WJEhF$\YMObl>2KW5)hF!47qm`+2;q8&D+=U'YK0-rK(^?g*n1G(+G#_C/sjbE@l
%AqV1^K<Sr?b)mmG@Z(_k,!0jtm)RN-U96e=*^dg1!L*e_('8Q'*.UcgXC$^h_eC5E*'q\e,R`'grlS&q'c2_Nn\1EuF^Q$PYHXHD
%Wjk"1Gu1j8V"YFp7CK$YGUG//mZU8tb0M`6%@iA4.\n9,8Q(Jd$$,7Q[gNQOouZ_Z%(_Yn=X'8m9N.292TbgV.Ph]`0'#2%Zj(8r
%Hk7_OhiEs2YH=0_#4XR9O<Q\Q,oH.%"Y0]'OS@;PaDaS.YZc.BjTp]jZNu?goctif*gok"?)3G>d,7L@!G@9#HG2An,UsS8&1]`[
%*G#srD[:A-$L^s7(C8\QBG.g4#U*4pq]s[Oo?YPQH#Acn%3jHd[0,K61U>>MWl^nf9MlEu'oP*UII\ka9$1*^6qFLMb+Tqj6?=FL
%"_>.ofa!X0675EuCSKn3EU<fbW@.fSa+\@+!)72FL)cm22IZF:G`q!lR/OhL6Ir#35\D'O9t'qm$J!KCl+r4LOL%VuOaRq#_''DV
%.`l5#8/WD4LPZESi>`t'KGN/DQ)Yrda9fL(Pep^_,1]1;9(n92aBo(V/1?0ZQHp1U&kNI:#`G6B4NXnoXhl`DLQ%?5EoVdK\t"U"
%b_1tB%h:q?Z?>rL4=Dl)XYMD_?JI"XU1es!5+QLliJ.[^bG$;3E<J)@j5e93b3P:4*_0+'e6PMg#&"&t#=SM><Q#"U<7h=H-aJI?
%j=)D@e=^,\*1556j?i-@jJ>-PoT]TLZ*Cp.*)[?.?!9pZes?KW0UCK]W^0<Ffl<,ri_@6$)@kO-&,$FS]jMmCoRtkfE)@:VZfS4E
%.gChM*Y$.X[TE+7:/J?;ddu#kdj6k[11<<3X?9RKI*m]/g(6$*%a,T/a5jlj/N6%DPo$N0_.9$u0)HdND[#=.0+b"TB?F#863D/,
%/`;J+7LH$rGmRJ#I#<_td8%B'F2^t-mGltM-3K9)O;'*8[!iT%,]-D88p74)f>;BA9#DA0U,cd?"\oD<GS$AIBi0Q8OJ:UBAM85_
%lMuR_q7O@V34+qSQ*%D[;b%<@3R0#l7$LQ'dJt1r1+Np:.d)%bVBQ!TUF#39_B^919?7\nO2:E1F@G0H8<_L?6OdXc=$<BG_Da=m
%CQP:p6ZiD!@7\VNU:N@V>g9Rr+N4L+rGjPq63Nf_RYPiI-EiIHYsAlj&/R<qYU![lak;>W\HH+LYq-nu#_llbKdqSu#tM#!B'`r'
%6k^"L'&BYRU<'42odH&'8E!mR9$ABNU$X3#$T5/egMrH*l*cZ0F\,VRG^qQ8?5#=nA&/OARhU#&XDt/(JW.I/J;OD6b(IOL[M2d5
%If/%rdp&3h%2EM,a<K"s(MXW'8YVUfoeBiBF9FauPDU_.oi:b$-G<F9iIoZGA9*]T[>71m<J_,S1'E0'FXi.Ap3H">L16_Oi7ucO
%pFpKSf\k2NK1:#i^63)6P-`@*3e3ADN)S,IU(W\eRnKn;Z30^AW:4B?RFIE.h$5-T^!'V4XPGZD+NC&p$@0hj["Y>1aq^8nEk6hS
%,j-Qoi7JV+<C$VIn$A%#3Mpph30g@q(X/u'1W$k&:@Cm"6)NJQ)e=q,Er/JAk`2J`1WLu2,,,_9.`WFJ%$Id(!Ik_^5oq=:\FBeY
%-#6k!8.R,"oF*bU["h7c1rR<X_*UG;bh_A*p@=<GEh7nIm?1AQ(pK-e9Xb[j_@UjPLMf>?jE&;A[_;LuOh&Y'S[#"CYjIV!$EM4l
%&edVhlaDEf#1hs6pp"oM_OuJZiu<D+1ArA*aGk'X@7k31VR=VCL_UL:!9QD&18/f8XaI*]F=pLQVo*1*5QR*DjK7nWcs7E[+(cMB
%6376J,)BD<jTO^BN<B(s@T'S-:'&b"i78R%(\L<I%F-_"aPplb(,`BOe6j!4&C,Tad?d*"0WSX,^b+OMS6N;dE4E#:V\F`WGnagE
%I"na=1)NU^*jLh!R#2X]&#3;4i0g\(*1RFpp*!'0L6,?]*%LG-7eg*(["lo$+ppXG)Tll)@d_C-=>-E4W[nC5ac0V4[1O0,L)T_)
%0:GAG7["Y!$FZ9bOe(PiBmO2g;\E+\Qt8`>)[hKnN>W`.6D@5I.9[>&5<KM&%<:Bd`A7#FSo_p"%HYaN(E5f0MTYMPMN)T-f$\,u
%\RJ!+<p;>[`Bqnr<;K*d/A+GoWD-['0Q:3hhU-bVYV^*I69=eY7QCbZ.&V.#=SZ8H?+S%f1H#T&asg][S[%ZQW@^1m@pq.6C8HbG
%(13h3KW-nRo&8CD)b&Qt?,]ONZ1'&"^Vq&us-kddk_o](1od3IB.U`:IL,4tV>k_TG.or?1NFj5IA<i270)NOX>g><PL.(3L+7G$
%F6L9'=/j`)+k[@23t@!2rV98"i+S5\'9#`?FeRn2EB8e!gO[8.]I7PkHO[0X:l2u5nmZX2LMoYcCN0,H8-N[4D22]=qKYS*<F-M)
%W#$hIUD$pf`2$)eKb4G(i)5*3%).GHF;`$<XMM8&H$+WW`Mi$RZ8H)Mg.R=Eh3Y-t%[:sphpeiRoV4Vm_ad4)(!+e#<gljkRX\^h
%#=TX\!r.Em+%'Uilur_sj@ViDUZuf?"YNSJBR)7AP0:!)@;uC>o.ECWp?Lq^-loRQTc)M?:(4c9)s-!TU:)F:NikIKriu(;n=nW6
%!K^/]<]DM&XM5`e?u=l+&;gsO(3gSR6!<T()'+IS$Upsf0]'&n$2u.SVf.))6&73)TN2<tRlTclWXsU7l"G7WJ.\AP3-b63Z#`mi
%7.X(0*AgFN<5Tc'*Kk>BdY&)FE#<T%^l^8sD2um_887]/SdpmWK=;4Wn@+Z*3^t$XNelgfJdZUZLuMY2mN@DD$J_I0l^OT+33NjG
%GJ[?#V&rjk8iF"9*NE,-6DOY5/*OhcOZY.5]5TcA#`<rU:DDbeEje])"c=fIU'Hgm7u,M#]eDA44L\HW%7d\%D'T_?YcIq]BN<3:
%K:u]pT:mp5kQ1oX%;%@pd]1B9RGS>eMk4gLDs2NqZ\.S6PWh?DLbqIAW>uu3:``pqA;OUjHpV"'mpTophq+;to'O,#s2cc=:9K!A
%c15AjH`da#XFg'*%#"KlHsRtZ"t8k+$N-+`$:U'9e/Nl;kJO"^.[N*2g=.O>M]dAPRp:sBa1<=RSHOV3U'RrF490C_,[GX2KGi>W
%4a+;&R1lVtkYcOrHU;mXQ.a"WYte72b*eZ34p^O88j_tb"e`(9AD/F<@5Yhu;iq>AZmtZneW@$kEjuR<EXf$_KqecoD,*B2O\n*D
%FG:90FTpt=@IPjnB,=&!(LDoj"YV.5W@J[3#091CApU/8lRL"5(Nl!/DWGR$&1+E"m7+c'\6BGr9MT9O2n_)c>sjpDa&K?U(82(J
%5DK$(/J.SQV$VP`]W`UB![1E=Y51Q+3K0e'A[?5dP\pNjG9IQD(8R\Ie,j@4`D.s]L!_"UDil1&KlRra:9k?nM?P3RQI.'PL"OU<
%]7$`(oat"g%q4]nf!9*Tc!ibd."KN6Na#1Vlm^>A</%5R_UT<X>]^pmaG$^L._ru]'&]F,(,a'RcGN><6T@.K4tt?VgX(LX@%nUB
%$DI':E&`(`!^\VoBLOG]:(DnmEWR^)@P)V0"kCm'q*uMT]?4Ua\ce6@4qQjcE]Vq4$@tE+V]k>eG6eL:MnJU$b]DIa@sEP!QQ7/)
%-GS6eM'k2$QU9.<Bb$JdP4!#\D-t.crOF,lKV:ds>a@,H@V^q.JJ]>JqM,n&:2/e]=B1pG`2N0!b9U?f^?!a1FeV8js2P\Q<0=q2
%E*96Y!X!d:3F-lt-_/sH,d&Ru``8t@U;=pr%[Hs1F?fkeG6meq5SHbEQjg6nHl6_+1GaprThe(6"Vmd>]=8^X/(*:J^_qj9NlG[9
%Kf;Vf"iSOpoe-M\C];7DbOOGJKcP3EE*Wak(d1/C/6Kk9g89?n#,cjRR/HhRj4q[,4Y[J)?O0:MF:'*iq!sJ"W>!Pqd3=lIlb%K:
%l/U%OcaL"UhKbZa4FZkjcK7=>3qrN[i?3%X-@;&&g47/QS_WA;Y6</qQ7@j>Z<W^YITIX3A-MlsDX';f`0uJ"oZLflmWUufR-H]R
%p,otm\C#<Ck)FQ&?l@(Y)=88MP^dGSA$EN_-T4'([fcP'UX@A\aK$XW4%G^R1)fPZ;9mdMd>k0,O/gUPN-:.,31"8IH^9:C#9H[s
%BP5t"D8VddN^49KAR_uUW2?Q9Sjf7m*"BoEadr`JXLL5EfeFc+HCH_DZ`6N@@^74Z4Ue**DC0^RciQ^)*[Wt'8r7QEA/?PpInr#V
%0uR"*c=YBto\(J<M9VX2#)t?mH(-rYo-)@pp,qId:2P.Wn3u7+':YO[:)tc>S"2P@Z*oM6cBu>Km)3MVW+J\]2EQYF.=c$:@u+IA
%3L_%a[Z90UcV3m!':U"86hgN.B$\QXM+Z3.ZY+#bLhKM"p&uG@=%\q.HTlI=r_KuU1UV!J:_TTE9IVm3T/YJd"kIBqB!aAI_UB3i
%)!q^&];sI7cPVP,%f[ND*R(]9?rNg@ng4(p-Up0d$/O-1UE*=!8h:XN*D^KO7GZ1$kCp0FhW-UdNhGOP`+Xqqn>`U6UHLDB;:<,-
%N_pVimBkS9SAJWpkH/nf.PtXSB!k!HoN0A?FpJW'PT6fKn68YqbZjIFF_6_q<r2sdmp[K)5.]:Y5b=A$0tX5cm0c=M9u[TrDRD-Z
%U:-*[hO2p.@'B=/g08GD+1[$lBW^u%B-^Ph@^TipOt#99<kGF<K&SS]*G9._H"s_H>cn0?m)3R-g=O-5p=*hQ[/&FoBZE[8W]HNp
%N`(O8-r;6[40hbb3nYl]40hRn-9A8PUmDDfk)%V@2M[gD4Otl\4+t>inqko"r58]YXEIhb)m.b1[P(b#?0sq2@@^1eVoBirZ)EFP
%m7kVa6MSt"r2/#9oRd6>CU+q^G%##ohO755XnELjTL[T9$9i7^(mq'FneSA$XIJX>\PB8a<kAHPM+B&4e7o6#%7Mjt=RE*P'BO:`
%Y+sOM:IM?(PP<=:DrcDC)HuMB#tU?,UXa8(Gg(`7X+FB!$9Dl\rShLuA'Vs!7@D]-p'%LA1qWC@1>6<EpM7,hGtU*&\1Ti\c3H2[
%L];;"n'>ZSdK2X`Sc>lNg?X9B$QjSgp4%V?0'@Z;Wi<#k/cqQ_],[P9m#`@seS(KENZ)[@p^crtTrCqFD(+2T0jg':_@etq3O&-@
%Nf\kb+5a.$U_YtKf6*<9)9\]TC<sif6u#THJg$YT7?\Kh=p<Yd%e!&2lhi/omQ!,^r88,!Uor`E0b0^t>+&CO7<5(=QaLc<pA'4^
%,WE#H`?@f3o2I0LTh$JE,n.(%MWfZB@<T^d)Gi7kBV-N?,I/@[D*hAA3UW!rK.IMD'FO+U.ZPR7\'[Dl[N]JT:rNG]\g6Pp"m6+*
%iJ81t;+h;&BphU*RCOp#6/hB"AW:qjV4W\9/12fmc,e1SEZiPZ7D=G?5bbos.%qd>G<hu6dYQtnUp!4h(:4gpQ]`aX-2*EUI+(Z'
%!u\CD_:=X"H:)Xe66ZeX6XZ^Ja=(MX"=@4R,X@8VZZ8EH_Z_V->7ERES']iI>]?a6n6(Jc;VCTk>fRa,cq7m7&0e>`g6/.B2-,>i
%QqoJ?<%^Wm4*#8&.S(lYFSj.tCPNFb%3=BW6+.Q".<o*-i[kr![Ha"]=NQ,:Aic.>D5Ep)#`9Mn-O*E\8h!<9pU]29A_`2kHOpq_
%HQ;CG"l+*MWkn+X[;9A"$T^!a)\d'I?GM1DE%`p4(2TgZA"t>ADChN52TDVUM^0X9=)J/)Yr4=*c!hph+DHbQ:4?"A$Cmi)s/7<G
%W)aZ;fb+clNtkNF%3MEY25:#,e\%83<'01:X<oEB\/-WAL:[Q\"F.st4cktcmG@o7GcR4IpT_Z=$Fr[f409]r;iZe`6NNV49oBQc
%Ul'MQaMe^,.T8`iKp@O3)R&78::#d-Z<FJPgkV$^^u^-J-"_)rM/?V7QTOV:\!.@O5Xhl""4@Yjr=KX[eEJGfltC>\'GZ^W=[eon
%a%BG0Q@uug?s8_HJ7/qV4-'+ID<Ss#83![Q9_G:"K<ZqGS_1PKWBY+mAn=.LW.KkQ6LMEpNWj"8=HD6*#[X_mke&Pq7Q!#Xgs^e4
%!=VstglSfGqk1e0l,^'YWM>q)4BR[[l"M\S_@S4p<okE_]45"crXg<1Um\,M4->qjWFmPRa9hDO$)J2&K9Z\F-778Cct>Ya8(0La
%E:.j3Bgh%BDEeE!TH],tm^.S/Ca'fU"JZpu4Q&KH4PF6PRc7+$@87m+9%*kIg%J8`En,p&E5?`4.jJ@h'&Xo$'8]_kLbc9Y]iGUL
%kM[nVQ48#!<ASVk\K!'96nB-T_oh6M6%Y)Cc6/m^Q4j^9V_uj-^nTa_k#O%h".>0#B]=?\4IbI>_c\Fd^k@sLL"AWKW4CGha/X8l
%$YXu_"[%J1,:tm=?9tpX6#i$A5DZ#Yb@DK1<@c6ISY9)EU,#jC$7[bF\];4A'ibDd)i<8P9%Mt-U)Xd0i^e$eRY=tTTY@V7q@hs\
%NV\Ng1mZ^fGcQ-P1PB_)ILQTRedP/@.\Ka#c2t]tVc&AQcuW>q7,0;d#8aHQ16<!VQ)nmt.R5-Q1a`EN%aA_d(mla.b7"lA$m0[^
%c2j[[pca@6KWaAQK5V[d&G4$4eqCDbUg0)gTpom,^U):W*HG-i?S+3f]8X!<?[]m(6?X8<Eb!`mp,LL<1cg\s2o&4%H:-5X%Sd]h
%'QO^p&rGnGMZX?c&Yp!:VBCY_3t&SjnfV^c)qCWG+<,<+[7")q2^"Fhp!VJ6/bt(<AK=_ND=K#c^'O/G/*9?!6j11?_$+SZ_IdSZ
%!&t;$X=,T]j&#E=2!R(Ich*_el8bR(3CE.Z%R86CDD`\&og"B?+c?VUDIe=/bV`V<asq?21-GGu,BW+)37Y)U9L8a]GU.Nf$<Wr8
%A#6VplHkW0#^^i&[:afMW(p2iJJp%Z(13WDp5B>[ME2ef>58[<3$i=mE*FKB%,,d'=t:%BJ[p($M[1<]#1X!Y!IM^-TEZr/BIY]o
%32cl`;h8pZ:]pDYR;'GZ.TM%XWPH&e'j*A0<.UH,9bfWWP<WJTJ[6E;o;'%h="r"961_TsAu/.,8"!/[i0:p(pp2n8E?64C/H3a?
%MmM"L;N,@"--k?MGIZqbj9#Yc<h=p7=ED$8]Yk.N$M4W$_J>]+SM>WQiO]?&,s&gRddlmkP$nQ@rFK^G,?_1ipft#6n60t.V_aX-
%M54PR5m;FC!0;#:=m7'TWrPPD^?7AbJK`so_HKY:Y?DKC;3[Q`V<4PA#9t"6a+4s^:lj#$O[D.pkkhR"Wd[u;atm<hL6B@a+Tu)1
%/6V^/=G7/.$+N`!3/\]KQb6;bP)04?*p.`(@[0O$;iFVVU^/6m7tb`C`gL@IlcOg5fqTrT8%Cf)10W@`\:l4Q&1;bMnjKa\(tS@k
%:`V(2WY0/Um0D@8*e>1Qcm392O[7b2],3tKKHjle!D;TDL1ESt2D`&g2/R4G<UR.n)DFH\^d-Wbco9mU9Il14+)5Is+X0N%c\^r;
%.?FnH2d40B+aoLUN"s];?tg5V,rFZc^`t]*-il^;S00pd@$2'IUJssS`$m]#>SVjUaC'hF6S_UPc*r<gpUWJ[I)t!JY,As&.E!3(
%SWh)/;2Bn,e7k0uJt=Ej>GL@-k)AS=Lamq?T\_Lq&T6m)@_'#\9^[HU=bE[$Q2(_l[U?@ni%in[rA.PRjtd'372$B.Gd:Rb6R+q%
%":,/r["XGXJjMp@eJ-t<E_W5SdYN6IU"^9uYFl^A_S;(H#)n6OKtSC4cl*W!5U!p.Q?u&W=7=im&pPpo](%cS4El]EC+s0r%rl-E
%>fb@:9[*eXZ3e6f)o^L1f1($^6b,B)D6'*O/@:'(\eKaE9oJj*VuU>5-LF\.]s02XC[+_F.uW;4:V/o@=NjqS?]i"Ji)M!K#ilgt
%<!=Ae`;hD(nB<X8^)REMf`Y[n*qWpC1ef/*)l\FKj^F67E'q^(1>r9^^LgY$n9[>uf*sqkoj%M`n_&_WKp<GPl@rWcL_mn4W)LQ:
%(6-`^.qT,AG2RsM=u3oE%bg%BZBt:U^W:;lEs5-@FMruq`l4'-1hgD&&All^3.e"a3aaXC27IfO_O(!nFTn,Rd-s7$k$WagE8rUX
%)PS_S8E,.](*>+97Tl!50"YL4QY&_[+h^i!#ukaW;&2Gpe.mZ?1cLbtN@Z2h'ZR/VTIa,b4W8-0B^@LC<P<4a7'Y0Mk_cZ`%H)Rq
%j$VG'^l?-l8Bk*NH6@4r!)8f&eK0b4Qh[#H5\-srUf1stfhg-pMha)*<@!9`d)jiX6e"/B+[uCRKsTXkND8T`HP+OkhE#[*]OuNi
%+H+Krs"SZ5Mie\.lj#.$!8MTP,=L*Ak[GJp!>eFC>icsLHNKcA"RAqY9'KuS\OaK2R?HkDT=]G)'+@7cg6!(*9lir;kqV#.='QdP
%6(Zp=g(Y^%L'efrQ<"(t+#VjY]>@M>c<aKVYpr`c<r37*"]0#Qh'Ab@!Eqmj`cqKW&?2A/RQ_S$"-TmJabokT'%C]KkK3JNmKKNu
%G\_nW9>W#4")(G!m>us#&]H)3b^lFb0$u$_Pc(8O6V6\o<5t#P*9F4G6BZ^?SD$[Z3/I+Pi)X;L+:pX`lf4Wb.8tJ!#IkKW"Tk"K
%Ru7>4@PCigE^Gm5-A#E$>uCA0U&kg6S^gr$;;,:b:i\Cen9sq-@#m^fXNHGIWY$O)QlOJlhCQ]Lgjqh:c&r]sabQVH>u0KJ0K;B:
%RS;o'+40(4$p)`*H"ONC0nk"^kbs7a,:XmFp$`JA?qsOaY5fML#*nW_.AE6Qh[$(Z&B^r#M[F)$G7Wn#*`^FLY]S:NChUDsC8<c%
%l=$U-*DBrkG$"h0Y,uB)-D:GtEA_4,3Y^dj%g1XqWZ2)"M(2L*qruVog0>'sGY3"jc=/u9J*1<#FLF:Xi"0W[e=6R%"JTMT-A+n5
%_`CuW+'koNJ2L2\LhIKEdLb,CFOIfujkU(]*0)]nT$B%PkL+99+nEJaH=f(1:*->KKts+f-:Li:0k@4[d$M=N*PPFWVC3nU9ZA4l
%CK>D2$qh5I3a#m-&,nPadc8coi$&4i"+UU*.<QL0O+t(OoWEoWG/?0=7qk=XIj2M)U>s<$*#Y"d;Qkjnlcjg"^imW/c6.8o&5P@*
%I(Q'6CBVt1V;*4rCb6)!PG56dj;it;TcF/A5rG/o)9n0%Rct9N)"kI!]Ue#UmHh*:KAt6t3!3q@M?gCE*\,Fd7P's8H1EgJ9tka4
%/biX]mN>@M.a;D9aF:%:!a$@MJ]`ZqN:=D<"[j[E1TD[%L72-mnm8t1JYHOQ_79U#,p]+$FHXd-kJ;`h?p?TKrDs#t8Vj34#Dqr*
%fW92L$/IXrmARf#;Ks);+sh;qTE))+9Lcr_h&+Xm=SE.Ca<Tp)Ln^oP:AF$0K+7so.s*I1.uX?[O\DbA#DHTeaI=Ek-ZERiH:9$k
%=Sc4`dDFe9!/t>W$Lh#G_5Z)7.,+@>Uf('/5@HKH7kH!@`p9nN%0^tnEjQEAZhA3tB@7/kC#Oc@&.UsBJO%sb(e`LrLH6GZQbFY#
%(u,<Ab3IHB9f`m'Q&eWD;9U1El<bsmH$Z2SncW!Z8gIb$Y63D(ENA;.:4;M3&=T]k5Zr1[c%;!Z`_nrN1ZI>f4%0[o`l(idQg$.N
%)I3Q5=(.Zo$6e00R+<1I7CiR="\o%ciQ>7]Y#8'Zre=$.6ah.t!s>(=aReJlkn$9['Hi>aCaN\$OaU-l8Am`_%oCG(`8hII,)g&e
%rM?:ek!$@aW4R/:]n,hipb=aS\3nWI!#<Ks<Z8#L'aD4EKM5VsOfV,+T66):R,3_GKiuh3f(JlHYaYVF%Z1`L_B."/LUsFQ,K?J]
%N.LVZ5i?$T(d1V^p`HGV\-A"gME(A;6oZ%7!,pgf=,N89<FD6R%0Xn>TaZF*AXce07n/-Jie$J(<G>cq5["Uq":kRhQjQg"3$10@
%SO!sQ%NefD)B!cD0qYtF5id^\[l'b6J;'t!dC-7%Y)1%dlhEUELV?jR/m0Ad3je#g*%B\+[>'<h"!c]hELdjD'Pto3Wb@YJoGh??
%1GfoMU2XE$BI9[>.aK:IOLE0/Oa0]hcV!QPU#Y'!dlWZmU^?8kC''q5b$rc@Ei<80Z%=.\@qE%Pc9MWLI!!%Y$RdT_UOgf,6leI>
%+%k`HC<phERXKu"2)NKMG#Tl4Wi0)TNbg.4_r*FOg_rFg!IoF3])ICoE<MG/AJQcIkYZbAniS<s=WrA]euZ7&lO\7m&5I@91P9kA
%9`K%":ac\SoJg@i![s8d.KVX>*)coRPsA7RpC1+Se_e1Pb[<GERnWXpE\fnni/@WPjZ^%E[lV#>GT[\P_0i1:Y,RfoG=$=qdE-Q[
%a-2MBEQcH^G@9+G<e`6RoOL=8.9-lp<Tn;s\=MHd>>g]tG?;0*M"O'!?e$&>YNVB`dK[^jgfRM1(M_sdFb#TOSg?3Fh#=TG:-iBg
%@<YO8LZEuMHp>K1Fnc#6+R3/gkZ,JL3]86s6kEn"Y+/f.d/0*iH/n92\=K$jWap(N*<K)q)?\`a7t?MT2,D]:1T?]7ddQD$&I@2b
%Nl`?DDMCba^ofGYXl9prYY,='lk!SA1*FF[+QqgD*'.\V7cpB>7s%IelUHl*AmKP*3tQi[ZZZ*2't7+qUb1Pm1l&PeGd=uuB'-&c
%Sr;EH+)$c*_P@2q:5<L&Nm@)]W)eSsF1.LSa/`eunh0DHMmfq/O:Dkj%[:0,2A_a7-.\;bOM=`1eW\&e9jK%Y`2]21m'Sa<.OQ%`
%&.G=K(#2S7d5%#p[fr`6/hQbsn2TOj7-.;s'MoXZ@R7ciPuU1t>]'0Di0`XCW1g"J3enRs!#VURf\F4A5[Z\g!GEI>*"/2ebnsTi
%2+5^"]&5trambBOoDqgs$]puC6oh+F00k.*_^FWOpVjed<,J-PUiT/l)hAY99#;M6>Qc+"M^-b.Yf1;@!)-p/%r:H^((=N9"4T\D
%)JM1VK0oXYjcJB)$@ioN)EMUQOn9"`%McF>a>M%0U[`l1O?q\+%`iBQ;l6n5,gkirTp]@HV_0H>F\H5DOl&N+@`*(2B_H8-&.$]`
%]`?duXqQhpr5?IMBIh-k+rZ>h[n7EV"_n^n`iCj.@J_(n4B-"u05<DH%&T%3Nprf_Ofh1uargOT"fa5tK,0'USm!#D"!F9!.#ru)
%9+bZ4H&(%7b93YK1p?haLrLMT3N@Ubrs=;1Td:5-GI7Mb''B!N!&"KOXB64Zm4Y5!*b#0_@Rh\EjqnI(C9J"C:J'\sK)^fRAf"V9
%a]oT4WX:@Xod(VGXe\NnW!1*Q$dgIcU-m:t=hbA=H/K2n+LGq*)Il,?-8bh"Rl,)%"c3_^aI9d[]S53Ii_`9K34tYcPFrKC1:%'%
%c!s"<d[o>!YGa!"<uT>u'_n<LA=``]L='C[ShdfH@+]>e@c)`)KDC2UXNM&blIA2e!8biYFW$HIMj?F&<p_G70K/Q6\'-jDRm+cp
%L5?+/&tH+<iNWpX<pf7:gCY2UTb$?n2ALhj+@iq40.CBe87KAPjC"4-e-No)o&e`VB$!f-L[nQl!Oo:'hXsN')7BIp2m;o54%SM+
%aA^jgLIqP%B[p5eoRFf+*!3.IV<MSZNZ5qDRKVm.:/GXEfpJFL'Cb=L7cGOYe>EEc0r$;\l"o&+geh[JF,USgA7E>\EJO]S.U&4R
%n<^9b"'Upc80\-D[mN\Tm2F%n_IGV$^(p2@*tcOp6RtIBbd^@WZskIl^lq6,aRRrjJWV9PRDuj+eJ;&`!*j#3S-/Y"iioWl'5Z]q
%I$*#+A>Wfkq.GmiO.Ghae/MsB4RN1bkMa3$MMn",-.XQ3)a7:4.4_]/#>,,t;Gj_RG?0q!9@51_GmR>'q"#M$$",(&H3/_F^oL=K
%4HSd#abVia65N):)LSb!;_AV%L0d5L'sQ"#&^lE5+G\4^Uu3?I75(n,OZ#_i,_G-["?k4)\<Vnb&GJ;"PtKH>$31G")h\%hA2gbr
%fIA#5r;^D]7-^1"N)LX0LXK<].kNM6J_U65(Re]aimu#8%;(4bn#CZ;%>[V_X(]&27.1.R,qF45W6JB.!L^03(fD>I7g>A1<%clS
%jTI`5.SjL?"Z0o:_$(PK$nc=qGq%!]&((>[\:er0j[<L^cukCK-\bSlV6IcB^jq=9)B^uSD)!C'XG6^F>YM4.[ial'K?cTYT4X?o
%Z\E#6NZLAO0:P;HPS@GVF..d$4@&=&+iH@/6$hi/V^,$846i)uDFbq8a>C\6jq<geQl<BT`_S10b,q]5b75[*$q5r,4l&o\m"=>,
%LSe?RmFYEr#:W*E"7.WrD\5QmE'][5F`&E'S@5ts5sl0>K08+rhcrj_HXPB[DBgoH=o6kqpK[#<!i$a;lQXT.B5E-PF:G+kYsfqH
%M5K?U[Xa++.&9P9Vd^16U83J%bap8`9mFQH!F,$pC(lHkraosI[=R&c4BjLpN(G9N^*&A!<J25si7K@2p`*eJ"eH*CN0.@(+(pN5
%jZpH@bqTDYX-ifE@gr'UFCbheTVn8GDTqkWr?5.(RIWcl&h8fI3aY-0$WcLNi="^GbC7DZ@mK#%#kX'1TGVFAPW?`KgTo%2b`"8Q
%K#u[>N%[F%g>HS'03GuWauj#r::N@2(GIZJZbko#!g+Vn-MW1HLZB0ZhgmM.+GJNu,sF*cAg&$N(XqbX%G!pu9hU*u*JMm&'^KhZ
%GQ>VSl5OFo?l@8N,1+boKk'<b))Wr!+d5e6Choi^'N5Z%llgn,8(]ioTWj7fRZq@TleF1`Rp%aFrrCh*a-LpCDLfV?g'YJ(Yu7W\
%5\eH=jMsR&i7OJhI1o-][dLGu5@DO"kqmIrFK*;i&LL_DPNTSCQ&W*cXj;_>83k&dblY6nJb=dVS6,gN=mji8rRMjFp7+L44-pFL
%]KWr=1Jf=$QdfAp%':\PXp]u^k)\V^[)4%[Zr]`*g/d$jC;+24"EC:jqUFpj3?%?iM%%5BIO(TM4>aXr=MKW*<"_CJAHUu4=NfD>
%JY/i:XU(,;KQS;m76#Y=Gd,793D.c94`a%A`27`A6I2MIh(XSo7Xl71o.("2p.t(XGn04qjVCu($c$'`>m4>KeD*1&KQuq#[O\m<
%a"Uo(X2(lhf#EJb7+/5!*9\8m.f%LF9m16tL0flW_G$=8a40=6h,QGFFN^#r](mC(@SL@VC\7f<=#<()rhir$^CF37(V.KVK[)+g
%eCGF$Sm(4(HI9F*D!D;fd\1]@:+=@R75dU#j8tn^R\!^-RLHl(1@rbXXjTX_pZ#fOgUYD7o>9i&@Ml46_b@q#$iE!LJb"Pc%Yp]<
%5QNg8M2hdi@NN!-NOq-J&[Q.Bc'C6F%YlN?L?)l8F[n]Yi)JBLi&;f!feP:o$:?X#XMl*'(L=<1#_koDicmF'7H-a''ZRD<J7b4[
%,9/``W@HYXW,8cfNM!fo8WK7>4+#aB2SOFR1_:Tq;_C%e-;OaF'AmTrmW"2ppQ(hL3DOPe^hn/L/_IBHJa(>>k(DQ`*YNr/Y44E*
%@:YFi`u>p4?Lc^$qc=ipRpmSdTbEL=D1t!%[\o8U78KHZWnHpe?Tu*njOs1]Mm)J>bOeCe6++jMkLXq9+#r[rKeL#X.k^FLA2R\u
%(rto<&3>K=,f9d?iHZ]%8u9^fd7gg5HB^O7V(8O5YO%"2KdMhr:m)K!q/%++(Q$C3*81i4g04sLP%aPVZF<;6I8"o]TbXG+p=@"-
%-]V]sb<*buE,F;RBD+`l0FgP2PBW'tb&[G:-^W+j3IBcZRK#ETkGg$1Ifn;Bq>N:TbF6PW2qrU7Y);Hc`-*A#eKJe#m7qeE+#3qD
%R%o]TlL@FF>5a@(X,)n=:3D5)ft.o7\*+QHm.c:(kgmca472I6=c0P],7Z6l-T$2$S2g-n1aNkP,bnLYc-#Ae.L<cBiJ,p^/>'du
%a9aDW51$<%'^^AJd\6kK+q:#'KbPlf"Hn'G\Q@FIAQ19>jP@/!ROSbcLRScYBB\/B08@:6lA9/^pqsZ$^o$1TU1M\PpPaJ(\7FgJ
%+I:,c9H>3B%mH#?_N5l'@[oT%2E&9T]e8>!&2m@U0R4q'eUb#HI/>n3@EYJh3k9>jce0PPci*=]-fD!"X!J^BP$2"ia8@6H/SL5W
%=bU>TQ%+uaiSj0s;2*AG<Z=+Tf.'TY'Lm`#hSiYq;d?jC*Xp':kIGIc>V5$/>_dh1gT]$)olc3/2]G\u$YCX0/r`CHB=ZCUOjgQq
%XrE,sS5aQ6R62,T&-V]u]R:bu$_W"5jO2_7Ark_2pV0:l5\=L()n9e4jnn4^*K[^L#5rVQm\oaaGXU6EJ]@f.58pV=>.LZR(<h7h
%6sEZt3,4-tXa]=L'/L%eZE'""ARj&*j<oOr*;n,pmoK4D](6W_`WSqiF/^9ZDo"Al*j.kd)Pe;\k\m^ui,mJdF/k%b&LSJV%R\c;
%R^6$gR6=6=\O(\OY*'X!j4p?'Bj`P(cjA@lart1[ZZ(J/`AM.]b<`%H<H!Z(jqpR#>Qc/T7".PcUH)M/dd.2H/M^*V'#;:5G(bJr
%;43YG/V1i#`s_sVY9dXG1p;Q;N^P1T"\Q9^)[ELt=o+a&k!Q#"6T1H$Kk,j6;iaNqB7[3i]SQso>`D9ZLto&D\<tu42l!thW\lUc
%>-&2>n.2Kd`^Q#+ie%GSW/rUb,'-_YVV_Va;F;Pa3ItdlFJI)=0<t:!D;DkC>^Xh5gcS2:]('C%LJV#_L<\N9--"DjFjN&X9",sp
%N17jWhD?sbS&[.n9GEk2*^Coj+Pi$H#IdHJ\g*E`9;uF*c8LaG/aEXSS&\o7j)rhq_^l$^RqA.Fe^2mtZctkm8K7'BD-lLN_IW8B
%*Ajq(G6GcbZpT0c+N%X?Q4BPhT[Xm&7,`Ff\KRm'Tk=pbT9=&E7Mst9=b![*KPgO0lJO;.OYPi1WRO@.IQ]bJHTG)0<cVZ.N.N2k
%3*V,E>a+?<\-J7TB#490+0`;`Hgm^t3]W,[0uU7^[^6B&W/cOKYk/:F3E:0qAs(_I#.Rj)5lj%W()=Ac4jF<9BsoCI=WKlP8<p/;
%#mK0G#'Otr0GTlT`+:./&1#42'qLc\B&j$"QpGZb(+9:W'QP`aUtM=FGVZ8C"E-%X36QMik[Rs_EN>8BK5dZP^*jgN1?EbO,1nR]
%[C_%[:a-:N@fI<AFi^B+4:q\t"pEU9"!^u-(g[&5>p?k"^DViJ05NX*P7`A<TG`r'6Uk>'A+?B90UfXBVUS%L$38"!(..7$+Yoi(
%.#L:1%Fu(R0!."c6ZKoHOrp#kPj4E"%+>o@>0__%L`0Af'L4,lPE-iuM>Iq=AOPk]R:nI&>q&41k"m:q*\PC1`b.b/[WGM;8nR46
%_2?>AgBX'2ZtqAFRNp!Kc%JN>ZPIsYp+G;l!AMJ:UrW[R]tKd)+q^Pn\)L?Z3$]ptZcNAc/C+#8+ADBI1#)%5kXMCn&R44tm8e?(
%GY'$mODB\<gVj9[UR?mh7ds02mo1B">V"Jt`3qW41h07s+fq=<5V@BRqJLG$P?I^UlC>Kjl)tA$2O(!$XAlIjU+Z2+6P5<4P0HVm
%b^b&f!"<!t%upAdgT&40-DITqQr?!1c;OVhTk@4(pRO0&\=EqM0C;Y5?'aGrmnNK&j=Q<&NN]\<0IV&$TZM(NF8G9$;.3ebV/DNQ
%:^0rWEA8&)1BQ:<VhO0=5qt0LmN&3Z"9VBa!.cA(g%-(aDo>;Dk+<6?/snbd/*pIbWgjeP'5=sIRGH0<qPiU^LR^&ihC^0^R+BNb
%EiV`M@=@Pf6.ONO/ps_^a"7pg02*I)m)9*"A'O<`$J;`e&[k?HkK'>Sjr4jPg`[!IbCI=R7]Q-=+(@hUSJ'kY322eT7OSKc1Ei#(
%kEUu@7C,gHdu)'XN%#r6ZBV?ICio)HOAg6%p6ttMPJo&&RqDu$VC$n\dkJ=gRCGKq;t)`AaL(I_%gFCP6(:j.iC58T&rU?A;ebc&
%(4eh7OcR^I(7i1P./)Uh(J0mJs#I#:HIIVV^`<ej.D@4T=1s.b6KHV_bIXaG\dAm;Pe"Khr'..-9geICrYjSm#\?5KDIE"AV4,k"
%BrX7Cc2jE`<YUDgDsqbrTM+^VccsnIoR8BBbga#;InQE'Jo!E2F8g7Xgoq&NdG9pa$5f"_V@/mAO-E&j1N%@F]@\ODZ16>HKK*M:
%U*d-,_d"<&Yi-4ocB^=*'K04$j+Os61_>10"LneNP)DV;SP.TUd%O"(dYia_eC./il_39)>)Pa()3$[BL'9;*k[LFTgCY)-<g_Ll
%BdD1uHZ-gO:-6(LFGASr9cLNNY2F(tPlcVVL,lMhr5&VqqJR)GI_QoKQ50dJP(0B6[RpH=Y<9>Uhs$!tRj>c'Dhg.%k2d*JRH+T,
%fs"tA])P+=&(f9r5hA4ono'-k325QrV&;ZY@&^,Q"69U*$!kVkjInOF-UWT<712e45=2\XTP;eNc&rFK_F@IG\dO;"2LphHb`U'?
%7?O[MC^dD`5lEV+!F_;"h/.ni#^FX(5.%0eb^O@m-$H^d&A1'dAAii+eDZ"0Wu>Q>o`(TA-1Pi&[[7MZ('r_I-UI>U#WEWXMR,Md
%JQpCel6B:`[o)6P0]c!'V+$>VFY4j>\b^,$b3UhGRT;gp?fO9Ld.c]'-_):mH1@km76JL::t`87V'mgVk4um.b.nq%:;!gW>6l!0
%C1uZIfH[aY0E<4Dfb,:["0)Y6l--2=Y,G1H+<:KriGE*7REcRNh=,n\l%nO(+@Br\:,3)K$0Tn?W"ebf)KnfJ8"_#uY9"(,6`2%b
%^r!cMLI1617Kji<=dmOP>m>^')dm.mia$=2I6)*W!X%*\mNN[G6GKaY/Hc0:GL0.s7MV5U,_8M(Ju.@ICKHpE0)sTp&WC[5Jra8<
%0WZ8L>Qan@Ga*Dos4<"L9U7<,3;['Bj.]#T)>GF>-<eKaal0:Z4Veg"!?$Ob]8jRV/0>nh&6AY&jFOQjlmg1LWn1R^g-)%l%]*p,
%"))8E$*Y$PTMD1c"j(&=5Cqm=O*DCjZ`=in&8E/n<l7.7KarqK=D+o#X>i5Uh^1l4_g)C@6'\Y/$E1Q@cmo8>&r?Wh&=>.j`2sSB
%NSj$KD_&*:!:DN+?Oa@U![4anTZJB3$4rfq'Ef,CJabq/fl"(eOOt8.#IA1QFiZa^/<8DlqKnmHU'**8jiQQ0#JbopH\bO@P];Er
%1k<M-@O+>r"Fa2g'Ng5XSgZ20?ihIOB<M:nKJ'2tO\H%A$S#:5PdL*.[ON)I0-hkZMnF%J*S;jR=@#0/HA8;FXFh]7n_RZM:`'Y?
%h#O<Z@':5+DK%M.*Am8mW1!8p--ROKeIX[$`B^l&iGo[?!=+K2iBOa!F1!Yj;'f]^^u_<:'&!%(g:UmqZ*P7O?[tek+gr#h0-2$/
%S_0&qa9X<M*;dPcKgRA6HlPH);#5i_:CB_lj\DV#KZ$<gHU40L!#>TsGj1dcC#HPB<%#s_e<t)F-"(os8Hn+N%Z8%Dd?b4Q(59P5
%n-:8?7?M>9Q)2M-MQ)2.)@%8LK^-#Z+t'+N!;qB3Vt6(.%&/>!em/q0!h$3AVsl7-FA^FN*GY>#Z[S1U$8GC[`HE+I*S&Npd/2su
%m"3N(2^#i)H>.P%8-`,7>+[OfpOO.HZj2L/p-IYW!<H$on_[8![9$.)eH+nRco6c7b[tM5!Xddg'3!DTZA0')cR(oY72;$"8(.GF
%b5Q9bSYNIuQ>D]iS_dIsW(pG1U9_1lQBGuQ3;/^ZQqn6?!eq;;p;+BF:`_]iYG/Te4"L?5S^u1[JVH$IUb(@'9`Z9f+B;_2OjX;=
%$uj/3>=oL"$#h;Wdoed0<E:](cESLGnMc5$A_Qk4l"jGTpP?3")D4\[OT(jHD5b1o#Z*l<,(*VYe8S0f76EG,L1Z.\=9E260krKt
%1ma@i,@O1:8U-SYAW'ONin,k"c.i_'$OJi%<lA\a`<>:6*fY6gZOp<Y(i"r6c>)X)hi<rb6EE+F'XLdSPSS,HJ@lNgUHkJ;OU9G,
%PkeLm(VQ=%W_WU7!Br6ooMHb9:lR$3N@t&IbVW_Q'3.'YdNn[P@oN^@R_!uV)t5,h:*Pmk[JU=KiD=0CkJcji@OGhS%-o:Z2AC#=
%LSI6/3<FjGqghc+>Si!XYUl:-0J9>dG$8LgMOYV8IR(k`\,hl\N:'(5i+?\S]D@Y?)(p#d5ofB7'm_Z<i$iFn3Jc'_M^=cW6`Q.4
%gBFB`i$&g(P5Qe_Zj?nfkn=>%Oe@@We4[9$dWVJJ^HmQA8&Tu$,4'otS;tC$<O="C3=CZ#;0hF<qp#NV+@$"%NfZ8Rp.qgb"%6F'
%5^!D]I3<or:qu5W$8>bfE#&g[;>OIb67jo-6nB0?@enkcL^^OSo9IS*kThG?"q8Y*h(KB%65Rf2/3>LN&(IBToJJpT$W%!>fR-U$
%HjUY"VG/1bH57]98e8K6<!E4CU`@It3?Xe[6iCJWQ4>YF(i:7FRYr/^3K/>.jP_Xlmlg#+U$]:9^4AXpZ?@<tNOHtfLO)re'1H]u
%i.)nC*JfM-:k<!#]X=mP#dU-c',cUS=\sX-UMS=qJe!%NCS+5=OPLbo6\Aii@049<ArC;?!9QD;C:N(\P\6D2O?a0Q#"6&HMKU-/
%0L6"AL5[6%$RN)1''gd0][dLbLLM2N:&l5GO;R1ofKo/iNnSfaC3LrYaHfuq^'L,/`R*('@Zrs`fIG75S^t.tGXp>470(qd74KMM
%6jacW,ddFmZm\I0=I&6X#Ce\-T.iS=Nr\*o<Re7j#g&>K8Sg)^GbQlY'`WkV/:@H8ZNu<E%jh"IC0GG@"oX_CH,/+5)ZW7l(!Gr7
%5?`C;3@6:K5lij,E+a?E,N+56>cHp((I3_Dk2<;7NIB%36_6S862[G;YVQJ,(CAR!J4,H_"cgH>[T-G&.ia*.W.P/!*8*d-UPK#L
%5Ub3F+W.-qnhLM:;Q;T\^l\fc!m4X5GX9k/>UDR@L)5Fo`XWG"%-A`+bRp3tVVq[^<6'tqeN,mcWZHIS-gIhL6q=Cu[Z5s?aBg/6
%nHO<AXYD$FPB9&k3nZB\LZhU['Ku/W+bl,UQJaB.9kk?c)ME62Z\1N&5d:H#Vd/maT'LDA>Xs?k:<]/BMl%rW`uS*u3kXB^9Q/kc
%d;7M`c!N)hk!qp-W;*QtoKp0Qk3YjdL;T&L+RY>46cYsT#:!D<5&q>XX3c3bNC0(lE)=V7,>0N7!s0FO&<Iu90h3O\KkJV3.'?b]
%"<Pr9Hksj+BN^g<%8lkNkHPta9An0]?.hE.?'u-33O(*iZ:jk\3u4;W%-q.-]r3b<!G:4(Lnm:@53-Hj"8a%#q$r73LrQ_1C6W@3
%XuDgY6TIR;T,b,pM""%tMH49hcl5el[<`C@NX<9&SVl--+WB$$47cT<=*-H=S\VB76oY^2f9b(8G#.Hd[%p#1=)HTCL=\t'K;_Dn
%24@Z0?nnBe-jg#@D_t%.Ft^oINmKQ@9Yq/YM4_H3J`V,k6$8q/gX50Se1AUq(j=K*Ti3^#MLjHkrEK"?`E7hgruim%KIe2SV3l[>
%!*7q*j$aMW!qHrMOkrI818B/!)d?/3JkdMq6A8"fMV$PJ)ag@:#!HPNEJUVp0J<PlPWX9tY8p,`aYS$P/**?RqMnL&C&8/(iLV"n
%U$JPWkhVRe`sUW6CH=k\V'`![&mujEaS]#p1"`u7TWMA!>8[EROWVBYL*B&d3&W@)&[>[I.m>-1.S:K'E_'u=g$(LU,BbZnJ<%S[
%Q/Xdg5cd9PMYY@+5[pa"#</3j0KO7sJsRtA(I:Ik[S'&q!&dLN<eks]&?\o)%m#s&_*U%@H35On70-AlKnIf><0(C=>3L+D$Q>qX
%e.[[%e=ij=$/S(Z'Tmp!ogH\f2BP7E/4(rIX"/lT#h*ROE1hqX'JeY]_.tLbrsD[eZ8oar2K"-&B;N^H=N/:<<L[)&&VnY@KEV6]
%mBR"?U,POn(`T4CZ:SlsPVgTLqZ7*o2LX3MKm%,t?mqcf\KT]ui(k.*>uld$WpPIt;adSne0,I.83rsXKiqdAre&R&NMBLU'jf+s
%ba*+j_BW[pQcZNI",\]=Yck-7@L#>W:.rib"o+13.Rt-^*j^kAjfLm1BOBh<?!6[Z,<bM)KW6C7/6*B((9Z``*@l;"EeZprMW9$Z
%T#C$$Aup%#&R@4Q6raJ(A\.t%48@$V:^R.8@EHkCK?\tH3jN:Tb6H9*>9:[4>(G]"^^?kpide8A"%$,;X:sO^MErWedM(;j/:p'r
%%P]W]:e_r29T@NX.9D;`I0L>tm1htg9]Ca+,IIo;qDfN6)/0rm>gg!<*Lc%#HI*^H)#19-XB2LEi2@(s%?(1\Jc@uj4/*3G7_$O4
%SW;&SWb:P8Cln=M4W6skmk7&qM\^cn,Umj6P&om/PGn5W(cXX;%<0eFRQqoKC^B[jK^m#B-,^U%p4FMD'K:l*$nq6>7oV/VpGoV5
%C8aj9;EF(D+Yb.CF0q`!K\b=p@oGnN)MFliV_OoP%V.THe'5?1]k!A`n,`\+^hJI;+u/X`'nY9-n.p7C=cc.-!DYZ7pqc'1nI<O1
%/NQ9)N(>"*V86KYS@#:8@rqiB^j)]Sl,BYj>1IGAQOB.#%jML:TB4-EBBBIfVU;aS%$Yk9O!3^N*NM/I+h;*U!gj/sEu@OL"b&oU
%67jX8,Sq!"lU)RuAh2)[amb:HR0plaYRGp6CfR0=6(9!<=>;)/U9q/&/YA[A7Mo_^98E3c:"r3co1V/hK6e*,.U9'0[K&E-PK!p]
%OTp5hH?ieuRek,\p/n^^:13*6)>;SIfkheXs)f:1`f:m:S9qUqd\8h52YE:8?FTbJJ6V;cX:;^(8lA*9"<>suAd_*C(Pf?tJt1($
%;h\N-f'>BPkZ)K5=jh-B\*q\?UWg5.&D[LH(o$WX#NRU*F7WPB>gX'!80&;N68-]S1o(buCYdqUT5r@j/`G.7iKX:!kX$=mGY1I/
%'RPJY`2M7=TV@3f)=Q-GoPlQ-:NEV:#"m.Y5SY&Q37(dD%%!r^LI0a2=rYo>dCr1BDo[!2D$X'n#C<[YC?`$i=f?>tZp'ps@:qM:
%)uBU\Fun*pU*4dIncr[]dh/fl62%8D8ODh?:YP!b<gV%%ai*q^>!+OuLd[,j"pu&/#$`(2_A-O#,0HlhboYMrDk];%W,X&O'bh;f
%237%m*WYLuLHIgK$i6fBA]a#\&=cmr-4`i,a2_#?iCFGiYi9sq4;4Z%&4=C938oa2<XLbc!14o$aHU;+('f?&VGtCP8VBHg#SpcE
%:Q!dKAcAXU&Rk[7h3Fq>aRRIb73C0bhP-]hd]+=ghf8"&<]U-F'o#%.2&&"cQt69t;qn!4Lp2k;&VVJr_AK$Z[(AdJr,.CN:B5?U
%'pjWs>4bJqB(=TL*SIcX?-^O+WXAA(j\/#]aq]iDe#<]YW4&;YO-23,//o!lp(`?NYYt6sbu)[.%OU!j\:_/0!Wr.1S'm2e0k2KB
%Ba>WW'.]A/(nb.n-LS3N*/G(6,==->"f0hETj'P01f;dmE?S;\lqE!C?*(kH9lD,->1/'HiBNkD8(e!OU$IB_,7IRLkqSu/"<bqb
%hY/"b?:UPeO5P$3WsT5B3=H?Kck2/t'%#-FaVq@(p%[_eqEXEf69J[2ZuI,`h#`RdBX`@qmY/(P\7^,&2CrsCjeeh6\enG/"sO?U
%o*_b[MF)*tBjf7s:'W5>IM5IN$`np#X73>S%h6@t:Pem*3;;gk8uE>pf*l$qjje0tb[o?BW>i,.Yp4g:?O7qt).*gWW50YPBUJqA
%+=uL`c.SE#$;*TSR6-$Gb.;kkk:8B>`hja$^5bdS\/,HtH*ANNr_,?BS-^R%YtrE`L!6d%$B#!^/?/:)WY0>E1Fl+W"@l`u">J91
%<N/u7#]"9;!ZG:(96,:IVEfa1=G]T_-Q$TJA/rm'5skm)E/*N(.'JO<H*:Z(L($98';\&+(&,_^noQjIji,7tU\JMfr;7B5Q@N=i
%U!5BW%UT$+?tc4aN$5(T>lkI7KtGl$O[/4L*:("P2mS8:W(I[=P_doX!O`V,!tFR2>m3B=SE4;>/(lp_\J9MCR#e29C$hu\F;:o3
%)gQ#9:Zi;J="qS,(L1aQY$d'1eTS.f`qqm!nCjUJc>XZZPf?NL3Y;cXFrfYB(07u?Ttkdk/LIi_(6halg>%PmWWhIfLV!CrW_l8U
%j$?t'OU^JW:_N5Vb:lP?`=OU.8kjD^jG8[4AFLC03H+8R)GT5>E[QRmBPX2u>Pr"L4*f<>_sQIJK(/f]<NMR$\Jn0].X;_JM-YEf
%MI[Pp;=1-7Qa#*C6S-@+cfbL_Hj1=*bW@Q%cFo2kY,1Rt0<)2oM:%1&Y9C83LMG$2N7CtE(i;N_+u(NO#`Glr29HE;$=fYQ@br>T
%&eYF:9W?Gb$k>i='n'?9N'P"aRed"S[F:Dd;4"=t[L0Rm-eiTQXeW@(_>:osZFsjR)b`in?$auCa\mJsmm*M)I=Eq=a!MZh,qF"9
%XGhce4[`3hLpbfq7;$c;K6F34r[0i9r@g.tV-m>A_'m5.aP3c<0duNQL(^m9NbE,iW%=cWcVl8#;J$[qS+O(\C;Z^R)YSjs[q"lF
%_Sj:,@DqPsBf6*n_(.@L*LT;6oLflE!@-1jR\)]KL):K!V%AY(,/b@R/?d9%A&/U;.gQlA;&/cXTnf\rW_!@OLRkkd0l\rsWX[@9
%P&X6n*f=nb>Z-Pe7nbH!I7s*"p"s8D5])md(`NZVUDoTZ];qV9o`J,^ePX632G/["FUtge)R*(]eZd5QN?R&@)Dhl7WXQk;e>+LO
%EokKkZ_tJ/_80Zh!K"ZTR#FBFVsBud9H47f4,"W)1(#gZ!R:WPNi:a\mo1Ua,U/87N_IB=R!%4EU4_H/g,@M(%0]?p_k]M"F&e?H
%eV"IChdWWtPmW%?AtjS8"ud1ZLT'R=I9EKo"7`pC[[o\(Zr;6'`gWHj8D/`CJnbPJ2nCj'&%uk'TLVOQ"Y+3[.C;TZ1]e9BnhsGU
%Wf-=bIJ9-5Kcr$!Udk_NG8tY*"-=WtInB+"Ym+"$FWK!PBTAfZJ@%:X+&trp[EdTA5O$1KakC;4/^F[8Y1Pau'W@*0Br3@2V6&?R
%jB]Yeabn8:Tu*6\/>#9d'MGVi.N#H,S_,,I_`.o21'`O$0Mbn(*&7PSZpL_9Q]u-j\LL']>&HiE`$h242QD"b,W+-;8n!]e5bYW+
%!Km?h3"I`*UHIj(bp*o*56R8$9SQ\O+(meE#1]eTX%9,9%FcS7qFt"YCt]+uCRJoP<*DW3=!no[Bd1V1l#b4@:kUT+n;70sFVeLB
%KJdE0D]\3.)[@sqn64+/:=2gKK]dH'r0i6#e1Y26TOodls2'E7XLdVjfnDejLb&FCKi*Zi'gue6<':Xu5'B8YdVV3,,-hlbS"CPj
%p-b3Scu_\NDo))F*IDD]Og@4^G"Pp*2V`[.A[56,$W'sV"Z=%F%18?@qAqSUDL(Zb5W8r0Q"Kl"-t/oif,Z@R^(-XIp;Q*kcaAfL
%KjDLs:^jhIkct/JV./dnchY[dolJq<TA$<4YE*!`2l`G%4Hr]a'%Rj_pYW5XcE')eEbau8B\jnIitGQ1#1LSk_=o6TXfn[B>[R9Y
%^ON?s>@D]p!%X4H)INZ5Sha)OKfqCmC<JrP=jTjfDd"'JUh2(/XH_2M!%eh?dIdG4-6aa<%4+oKeF"G+5XABQEac>4P,R#(j*Ac5
%.sP6"r<-I5S7_g+e\JfjA&AfGW@3I1#=!Kp7bno!Va>6)V"#n"gJX_<@t;[pL0/Np$.DFmh*JD1D&&*]1]g%&*fnTb4>B\@@.=O@
%G$8b(U8*ZbV.bjj^;/9LWl/L4m5<XN%6[Q4N>!(0Ml>aRa.kg?(eb4R>%SfsD$_L:dpU]Md^bdd0!?<)?J;_^(\bqLW@ltbEK1me
%1du!_Ef$/[_K9=q2*pd`^G24IBb_AERL[&Kg\3*2)0/IKb%CNt@f=u%+s5rVrQ1Mt+uOd6P=Jb=oO8<!?nAJh@oTo[6EI<I#in.A
%pH.bi%glc+nUM1bp7ddW*t6:WloqK"7#+CcrsgIMV4m>15hWL%0?R)[4.rKb6Roh<B@7"KCg'EFVMr?ui4IZC6:knG,km+orcd]L
%W18;qA/6pXK6rB$=dg/Fiido[f8k:F;Kg.p2.GtkbH)a13roILF'Y3ZSFpdE5_Bb[e:l),RUenKM1scqr$W<.i_4G#MlcBJcLPr-
%U/ar:]tFWh!s^nfj:`"/bgO2CZu\Y6Pf/18*3k(-@ld1>_cEba,r2F*3arVtF9fQ&Lo-i9;1%<<Ju/AA\N/i1ga<0c!R?:FmuYR?
%,M`.Xh0`Db,a]X"L'n?^fgu/KGKf3>cg1Y):o+Gd%L`sPeg;QI:!9)6*PgCUjmtgF"LmFpDD$=e*nb^#^lnL`*p,8F"n?sKR&V<h
%#l/?@oqC-JTc+o"80[mAaI.$_D0Ds/Qh6"U$SsPW8^o+UEZ<AX"p.i!kpF\QG[HQh85g,$RhNHNLhnlc!otW(p,Dai=WGI*VmVHm
%l8c0533!!Xe@#u=40oS^!_:$n5U13Xb2S>h(\g=J9deA^^$H\7SeX<gDK(@+Ja6Ro1*ULgk_<ugK(*E_!TA5k7,Jo+^ut#?iBZPP
%'S`S&F^G5uR:Y0ABu*q8M=e=<1FV&qCrRN:qCeMC_lD3[1t.?4dWG)gK[4EX.oX4qY#D0Lfh>o'"NRl%%:aq.^VlVJfsJIqlJ&ma
%/K-%UYUFeIL-*E-QE,"s%lR*,#(DhHGV]Ld;-)]RO[h^iV2G5^ZuB2qW:YRj"?h@4Ca>fjn>TO!J;6$V]Mf\+8EY+7k./N@`.VY)
%>>Hb8@g'$0Muh!rok5K3k?tpc2$K;`b\bgW)+-_]h2+6p;;\.gVS%_IdRBe>LDT0hA-\dGB1#7%;T;'CDNSm#"BgVj=M:GcfW3_o
%6aqRh!-Ds'jutUm[>p%Y@uaItHgMr=/CCqFJV#3+$+-?FHL=rf"AW(9f.?^J^OHV&l<s4+d>tZfGS&?(C6L-Nm210+H0JmpR2Vs%
%'%$dROMX[fU+1]s9>]<>A4W$]_%%nc%n2?s%XL"#36FYJonAI_6X]fq_Yrt>AQ`Yl@WgiHoLqD0AX"VK=FeaT0oej0ZVkX>!AB"W
%B'tiL:]2(\<@A&"Kh3FsKTum4q=?X<2s%Vc7a.m-AjdMLUI/gO_b#NFogOr?(G$<K$^.Jl9J1al3K[UN$AqcfDPPp?.k!(ePZN%P
%P9Hj?#S89)Z\X"_O\W1V>2+ZlA>X3sXArXr6nN'^d/`=.NSE)8a)WX0*MS(bal;RpDAn8!1?stJ5Y6'(q_jZ>^][$_"-"M3hd,[U
%Jn__\o=TppWO]Y-L"$OH(!*EM(6'Ero9*1*:OFu$ZeA#&UCo%UbH]8bVhGIA-kMkW^\1&T^lG^"),%qTCKUJ%MAm_o(2V#4;Z>"<
%Z(pq6!2^kAbn*NXS4pVVeT,[IPbli+_*g*n.X.d80U_,oLL\?Okm=hlZ^`IjEZ?RLM-I$k.FB8pi%nAo)IrV006N^bbn+tP0F8Gk
%.P_N2i]Sdij_j#?1Sih]<r#.+3O4Fcd-Gt362Pl1Mi@f[.(uRJ#mUl2KM@u+[HiY"U334a#89T.i/V%X#>?6lWQ&#JJn?)U@N*JB
%l7MBk7[&CY@HuR[DS`XIl?rZNOHXV]n&t5K2:*enY.(KCI;%_Fem9:9)\]pH5Z2$-(u%.FrgnZ2b`1`(WN7Q"M(kt7d"1OPRIn@$
%f^'<ge9Sq-3hVkao!4["W.&m=J2l9u@UsJ[=[m8W)Rf(9\!X_,@uU_@m4:2o&IYs:^7DO8JD<`bgZV]\OK-.C*sQ+IJkCre>!iF>
%1g35fMe:<9Q\BHd=X9ps>p[j<7_<a\,@hBOX$hOm/Qh1A9kWPQ[c[RJ'$.tF=,?%8:c:l.:0*R3P4c[c04<IhJZULEi8'=VE.i\5
%hRs+52Kk-Mjgj#Gl:2!BJ[qd(::QJii)4^RMO&Od]W'I](<`Zd[R_JIU'6L\kZQrUm9BU4cgo$,ng.oP&h.ekY\RBN0/aF"!(oMg
%-ds_<E.E6.J$_=)i$->QZal0u`J?W>6XW]W8o1b':h?MIGQ5E9\fghm0H7PMWrID=Gk/PJbM2P]f6ltO0dB?l2tXn;G[[4E#(hL_
%AV*,DD-qUbkiRAK^E3%oM=_$W.(]uOPRIX3roqR[P?:heD?>p,7rG2_7El&-m&8L]csd9e10cZ>Ole0@Z>oiV`pIe":]Y7nd&^;.
%2Lr;W"JR7,#KJYI#k6&I(t3rjp?d?2#c0')M:s;@CgaDDa`bH'Js)[EfFKO`._8X6h^hQa-6*Y7eJSYY?l6`tB#g??[(E<Ygg.DJ
%aA0Je7M;oOF78'ZbUmQo"%jN?_(&V(_of[B71Z`g#XQtr%'5(\f``?/+pSXEHd8gP^p./:V13f^nPLnq9''/7)<cf5Nt-opl&6C/
%5\F6/d85W9Ki(XY:RmCQ$*p$BqRL'+6]>g_$]Bc*genZXHcC3QeLAE$4Q7M]=h6U9fYmA":(63,0Da,sVM-(IL-mO1nSRSEN)@!X
%K'44a#Y"?Tq&ZM&9n-`1)m`Rs"HZZXgdeP;dQN>40nPG![9`hW2$eB]L(bKnl>WFRWnqOp!c:C2)7P%YJ(H^l()mRqW%QZC*Q-Uo
%=&(aeC`Aq`.X<`gZ2PqBOVc6gBk=*2R0\?4UZ_^U!4k:nTAA0u@CTJ)(n[H:#duB$`nd[AmIIkG'4Uj:rY6r31dOifgBcnQKu]m"
%Je/bajn=RA):VfnBu>t.4-471ajUi@Mu]1mM<jP%[fPQ+g<3UacDLk+M\gfW?BtPmr<\eDd3L>Q0po\peY!f:QW!uK!:O=qAR<N,
%HC;:ZrG^_qZZmjj3n_*3@p2QiE""(FO45kdA^LojiYpdoA:Qn\h21]5#JE2Lp,j/l:u@:)2s_7a1iWjUgb-cgojS7#_$'"8M\^U>
%'(hs7p9I6EA]Yamlb2sk!>C=6il<8t$'6?S1\EZL>1j2rR';>D&bX5sG?6:nAikA7F<.s*BKs-4=:$sAA1Vi0*gCbN',h*3Jf4H=
%L)+"#@$,b?/hqe,)80q@U0[FCPQnMKr`k%:X?Y/_MBJX\.1VfU6,J7ol]lL&IVoX2,^X&_%b'ce8iqukY:k@s?4PnV`H;-X03Bp8
%G!O?bR$'%'[\DZtI#cco%?f6t@[NuC3pb+N/rI10e,&':s!q+Y*[Qt8eGB&t`ceFQ,'>S\8XH)`%K_ERpsRbK&u-[;&PAoLD1D2m
%@(hY%8b5?'@FG]Sg>1G+Od;*+W?Sc"?jW/gSXj`$W.e!bjA\gk%bYqu#ZT@Y;G)+O.T*a-o#U,*N",i3;3OC-XEg:lV4&+=*akr"
%0UH>t3_#&_K#BC@G0,aLHT>OIOIb]c\Fa4KTjiMSrZ92p%b[Pl!jg`T'^fdLcLL4gW50>`8;[RF]re\CKOI"\m-gj,(:''GBJs>]
%fgqV]eH?3>0gtMEh$k?dQPOMfha2WEee\4srgl78iWn`APt1T"n%?=5A9ClV?N9B;chG2#Ep(:$r?oYboCLEm0CH%!H1VALE;t.X
%e&p!4mQZ-nprWK"VnY@n+,o-TnV5Y&^[gX>A,l@S@e8lm~>
%AI9_PrivateDataEnd
